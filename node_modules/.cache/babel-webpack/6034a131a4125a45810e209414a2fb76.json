{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { formatDate } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/platform-browser\";\nimport * as i3 from \"../upload.service\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@syncfusion/ej2-angular-inputs\";\nimport * as i7 from \"@angular/common\";\n\nfunction FinalUploadComponent_span_17_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"title of the video is required!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FinalUploadComponent_span_17_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"title length too short minimum length is 2!!!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FinalUploadComponent_span_17_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"title length too long maximum length is 100!!!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FinalUploadComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 25);\n    i0.ɵɵtemplate(1, FinalUploadComponent_span_17_span_1_Template, 2, 0, \"span\", 26);\n    i0.ɵɵtemplate(2, FinalUploadComponent_span_17_span_2_Template, 2, 0, \"span\", 26);\n    i0.ɵɵtemplate(3, FinalUploadComponent_span_17_span_3_Template, 2, 0, \"span\", 26);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.uploadForm.get(\"video_title\").errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.uploadForm.get(\"video_title\").hasError(\"minlength\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.uploadForm.get(\"video_title\").hasError(\"maxlength\"));\n  }\n}\n\nfunction FinalUploadComponent_span_23_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Description of the video is required!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FinalUploadComponent_span_23_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"title length too short minimum length is 10!!!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FinalUploadComponent_span_23_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"title length too long maximum length is 200!!!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FinalUploadComponent_span_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 25);\n    i0.ɵɵtemplate(1, FinalUploadComponent_span_23_span_1_Template, 2, 0, \"span\", 26);\n    i0.ɵɵtemplate(2, FinalUploadComponent_span_23_span_2_Template, 2, 0, \"span\", 26);\n    i0.ɵɵtemplate(3, FinalUploadComponent_span_23_span_3_Template, 2, 0, \"span\", 26);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.uploadForm.get(\"description_of_the_video\").errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.uploadForm.get(\"description_of_the_video\").hasError(\"minlength\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.uploadForm.get(\"description_of_the_video\").hasError(\"maxlength\"));\n  }\n}\n\nfunction FinalUploadComponent_ng_template_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 27);\n    i0.ɵɵelement(1, \"span\");\n    i0.ɵɵelementStart(2, \"span\", 28);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 29);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"span\", 30);\n    i0.ɵɵelement(7, \"br\");\n    i0.ɵɵelement(8, \"progress\", 31);\n    i0.ɵɵelement(9, \"span\", 32);\n  }\n\n  if (rf & 2) {\n    const data_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMapInterpolate1(\"icon sf-icon-\", data_r12.type, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r12.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", data_r12.size, \" bytes\");\n  }\n}\n\nexport class FinalUploadComponent {\n  constructor(route, dom, uploadService, router, http) {\n    this.route = route;\n    this.dom = dom;\n    this.uploadService = uploadService;\n    this.router = router;\n    this.http = http;\n    this.state = null;\n    this.videoSrc = null;\n    this.selectedThumbnail = null;\n    this.thumbnail = null;\n    this.error = null;\n    this.date_of_upload = formatDate(new Date(), 'yyyy/MM/dd', 'en');\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(response => {\n      this.videoSrc = response['videoName'];\n    });\n    this.uploadForm = new FormGroup({\n      'video_title': new FormControl(null, [Validators.required, Validators.minLength(2), Validators.maxLength(100)]),\n      'description_of_the_video': new FormControl(null, [Validators.required, Validators.minLength(10), Validators.maxLength(200)]),\n      'thumbnail': new FormControl(null, [Validators.required])\n    });\n    this.videoSrc = this.dom.bypassSecurityTrustResourceUrl(this.videoSrc);\n  }\n\n  onThumbnailSelected(event) {\n    this.selectedThumbnail = event.target.files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(this.selectedThumbnail);\n\n    reader.onload = () => {\n      this.thumbnail = reader.result; // console.log(this.thumbnail);\n    };\n\n    if (this.selectedThumbnail.size > 33333333333333) {\n      this.error = \"the file is too big\";\n      console.log(this.error);\n    }\n\n    ;\n  }\n\n  onSubmit(uploadData) {\n    this.uploadService.uploadPost(this.videoSrc, uploadData.video_title, this.date_of_upload, this.thumbnail, uploadData.description_of_the_video);\n    this.router.navigate(['/studio']);\n  }\n\n}\n\nFinalUploadComponent.ɵfac = function FinalUploadComponent_Factory(t) {\n  return new (t || FinalUploadComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.DomSanitizer), i0.ɵɵdirectiveInject(i3.UploadService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i4.HttpClient));\n};\n\nFinalUploadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FinalUploadComponent,\n  selectors: [[\"app-final-upload\"]],\n  decls: 40,\n  vars: 4,\n  consts: [[\"id\", \"loader\"], [\"tabindex\", \"0\", \"id\", \"basic\", 1, \"e-card\"], [1, \"e-card-header\"], [1, \"e-card-separator\"], [1, \"e-card-content\"], [1, \"col-lg-12\", \"control-section\", \"e-input-section\"], [3, \"formGroup\", \"ngSubmit\"], [\"uploadVideo\", \"ngForm\"], [1, \"row\", \"material\"], [1, \"col-xs-6\", \"col-sm-6\", \"col-lg-6\", \"col-md-6\"], [2, \"color\", \"black\", \"float\", \"left\"], [1, \"row\", \"material\", 2, \"margin-top\", \"20px\"], [\"placeholder\", \"title\", \"cssClass\", \"e-outline\", \"formControlName\", \"video_title\", \"floatLabelType\", \"Auto\", 1, \"title\"], [\"class\", \"help-block\", 4, \"ngIf\"], [1, \"col-xs-12\", \"col-sm-12\", \"col-lg-6\", \"col-md-3\"], [\"width\", \"100%\", \"height\", \"300px\", 1, \"logo\", 3, \"src\"], [1, \"row\", \"material\", 2, \"margin-top\", \"-180px\"], [\"placeholder\", \"description\", \"cssClass\", \"e-outline\", \"floatLabelType\", \"Auto\", \"formControlName\", \"description_of_the_video\", 1, \"description\"], [\"id\", \"dropArea\"], [\"id\", \"drop\", 1, \"droparea\"], [\"href\", \"\", \"id\", \"browse\"], [\"autoUpload\", \"false\", 3, \"asyncSettings\"], [\"defaultupload\", \"\"], [\"template\", \"\"], [\"id\", \"bottom-separator\", 1, \"e-card-separator\"], [1, \"help-block\"], [4, \"ngIf\"], [1, \"wrapper\"], [1, \"name\", \"file-name\"], [1, \"file-size-td\", \"file-size\"], [\"title\", \"Remove\", 1, \"e-icons\", \"e-file-remove-btn\"], [\"id\", \"progressBar\", \"value\", \"0\", \"max\", \"100\", 1, \"progressbar\"], [1, \"percent-td\", \"percent\"]],\n  template: function FinalUploadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r13 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelementStart(3, \"h3\");\n      i0.ɵɵtext(4, \"Exporting your videos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"div\", 3);\n      i0.ɵɵelementStart(6, \"div\", 4);\n      i0.ɵɵelementStart(7, \"div\", 5);\n      i0.ɵɵelementStart(8, \"form\", 6, 7);\n      i0.ɵɵlistener(\"ngSubmit\", function FinalUploadComponent_Template_form_ngSubmit_8_listener() {\n        i0.ɵɵrestoreView(_r13);\n\n        const _r0 = i0.ɵɵreference(9);\n\n        return ctx.onSubmit(_r0.value);\n      });\n      i0.ɵɵelementStart(10, \"div\", 8);\n      i0.ɵɵelementStart(11, \"div\", 9);\n      i0.ɵɵelementStart(12, \"h5\", 10);\n      i0.ɵɵtext(13, \"Details\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 11);\n      i0.ɵɵelementStart(15, \"div\", 9);\n      i0.ɵɵelement(16, \"ejs-textbox\", 12);\n      i0.ɵɵtemplate(17, FinalUploadComponent_span_17_Template, 4, 3, \"span\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 14);\n      i0.ɵɵelement(19, \"iframe\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 16);\n      i0.ɵɵelementStart(21, \"div\", 9);\n      i0.ɵɵelement(22, \"ejs-textbox\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(23, FinalUploadComponent_span_23_Template, 4, 3, \"span\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 8);\n      i0.ɵɵelementStart(25, \"div\", 9);\n      i0.ɵɵelementStart(26, \"h5\", 10);\n      i0.ɵɵtext(27, \"Thumbnail\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 18);\n      i0.ɵɵelementStart(29, \"span\", 19);\n      i0.ɵɵtext(30, \" Drop files here or \");\n      i0.ɵɵelementStart(31, \"a\", 20);\n      i0.ɵɵelementStart(32, \"u\");\n      i0.ɵɵtext(33, \"Browse\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"ejs-uploader\", 21, 22);\n      i0.ɵɵtemplate(36, FinalUploadComponent_ng_template_36_Template, 10, 5, \"ng-template\", null, 23, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(38, \" `, \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(39, \"div\", 24);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formGroup\", ctx.uploadForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", !ctx.uploadForm.get(\"video_title\").valid && ctx.uploadForm.get(\"video_title\").touched);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"src\", ctx.videoSrc, i0.ɵɵsanitizeResourceUrl);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !ctx.uploadForm.get(\"description_of_the_video\").valid && ctx.uploadForm.get(\"description_of_the_video\").touched);\n    }\n  },\n  directives: [i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i6.TextBoxComponent, i5.NgControlStatus, i5.FormControlName, i7.NgIf, i6.UploaderComponent],\n  styles: [\"#loader[_ngcontent-%COMP%] {\\n  color: #008cff;\\n\\n  left: 25%;\\n  position: absolute;\\n  top: 5%;\\n}\\n.e-card[_ngcontent-%COMP%] {\\n  height: 800px;\\n  width: 900px;\\n  margin: auto;\\n}\\n.e-card-header[_ngcontent-%COMP%] {\\n  margin-top: 0px;\\n  width: 100%;\\n  margin-left: -300px;\\n}\\n#loader[_ngcontent-%COMP%]   .e-card[_ngcontent-%COMP%]   .e-card-content[_ngcontent-%COMP%] {\\n  margin-top: 170px;\\n  text-align: center;\\n  width: 100%;\\n  margin-left: 0px;\\n  position:static;\\n}\\n#loader[_ngcontent-%COMP%]   .e-card[_ngcontent-%COMP%]   .e-card-content[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  color: black;\\n  float: left;\\n}\\nejs-textbox[_ngcontent-%COMP%]   .description[_ngcontent-%COMP%] {\\n  height: 250px;\\n}\\nejs-textbox[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%] {\\n  height: 70px;\\n\\n}\\nspan[_ngcontent-%COMP%]{\\n  color:red;\\n  float: left;\\n}\\n#bottom-separator[_ngcontent-%COMP%]{\\n  margin-top:40px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbmFsLXVwbG9hZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYzs7RUFFZCxTQUFTO0VBQ1Qsa0JBQWtCO0VBQ2xCLE9BQU87QUFDVDtBQUNBO0VBQ0UsYUFBYTtFQUNiLFlBQVk7RUFDWixZQUFZO0FBQ2Q7QUFDQTtFQUNFLGVBQWU7RUFDZixXQUFXO0VBQ1gsbUJBQW1CO0FBQ3JCO0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxnQkFBZ0I7RUFDaEIsZUFBZTtBQUNqQjtBQUNBO0VBQ0UsWUFBWTtFQUNaLFdBQVc7QUFDYjtBQUVBO0VBQ0UsYUFBYTtBQUNmO0FBQ0E7RUFDRSxZQUFZOztBQUVkO0FBQ0E7RUFDRSxTQUFTO0VBQ1QsV0FBVztBQUNiO0FBQ0E7RUFDRSxlQUFlO0FBQ2pCIiwiZmlsZSI6ImZpbmFsLXVwbG9hZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2xvYWRlciB7XG4gIGNvbG9yOiAjMDA4Y2ZmO1xuXG4gIGxlZnQ6IDI1JTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUlO1xufVxuLmUtY2FyZCB7XG4gIGhlaWdodDogODAwcHg7XG4gIHdpZHRoOiA5MDBweDtcbiAgbWFyZ2luOiBhdXRvO1xufVxuLmUtY2FyZC1oZWFkZXIge1xuICBtYXJnaW4tdG9wOiAwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tbGVmdDogLTMwMHB4O1xufVxuXG4jbG9hZGVyIC5lLWNhcmQgLmUtY2FyZC1jb250ZW50IHtcbiAgbWFyZ2luLXRvcDogMTcwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi1sZWZ0OiAwcHg7XG4gIHBvc2l0aW9uOnN0YXRpYztcbn1cbiNsb2FkZXIgLmUtY2FyZCAuZS1jYXJkLWNvbnRlbnQgaDIge1xuICBjb2xvcjogYmxhY2s7XG4gIGZsb2F0OiBsZWZ0O1xufVxuXG5lanMtdGV4dGJveCAuZGVzY3JpcHRpb24ge1xuICBoZWlnaHQ6IDI1MHB4O1xufVxuZWpzLXRleHRib3ggLnRpdGxlIHtcbiAgaGVpZ2h0OiA3MHB4O1xuXG59XG5zcGFue1xuICBjb2xvcjpyZWQ7XG4gIGZsb2F0OiBsZWZ0O1xufVxuI2JvdHRvbS1zZXBhcmF0b3J7XG4gIG1hcmdpbi10b3A6NDBweDtcbn0iXX0= */\"]\n});","map":{"version":3,"sources":["/home/humed/Documents/nahomFiles/Angular/Projects/youtubeCloneAngular/src/component/upload/upload/final-upload/final-upload.component.ts","/home/humed/Documents/nahomFiles/Angular/Projects/youtubeCloneAngular/src/component/upload/upload/final-upload/final-upload.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { UploadService } from '../upload.service';\nimport { Upload } from '../upload.model';\nimport { formatDate } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-final-upload',\n  templateUrl: './final-upload.component.html',\n  styleUrls: ['./final-upload.component.css'],\n})\nexport class FinalUploadComponent implements OnInit {\n  state = null;\n  videoSrc = null;\n  uploadForm:FormGroup;\n  selectedThumbnail = null;\n  thumbnail = null;\n  error:string = null;\n  \n  date_of_upload = formatDate(new Date(), 'yyyy/MM/dd', 'en');;\n  public constructor(\n    private route: ActivatedRoute,\n    private dom:DomSanitizer,\n    private uploadService:UploadService,\n    private router:Router,\n    private http:HttpClient\n    ) {\n    \n}\n  ngOnInit() {\n    this.route.params.subscribe(response => {\n      this.videoSrc = response['videoName'];\n    \n    });\n    this.uploadForm = new FormGroup({\n       'video_title': new FormControl(null,[Validators.required,Validators.minLength(2),Validators.maxLength(100)]),\n       'description_of_the_video' : new FormControl(null,[Validators.required,Validators.minLength(10),Validators.maxLength(200) ]),\n       'thumbnail' : new FormControl(null,[Validators.required, ])\n    });\n\n    this.videoSrc =this.dom.bypassSecurityTrustResourceUrl(this.videoSrc); \n\n  }\n  onThumbnailSelected(event){\n    this.selectedThumbnail = event.target.files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(this.selectedThumbnail);\n    reader.onload = () => {\n        this.thumbnail = reader.result;\n        // console.log(this.thumbnail);\n        \n    };\n   \n    if(this.selectedThumbnail.size > 33333333333333){\n     this.error = \"the file is too big\";\n    console.log(this.error);\n      \n   };\n\n\n  }\n  onSubmit(uploadData:Upload) {\n    this.uploadService.uploadPost(this.videoSrc,uploadData.video_title,this.date_of_upload,this.thumbnail,uploadData.description_of_the_video)\n    \n    this.router.navigate(['/studio']);\n\n  }\n\n}\n","<!-- <div class=\"card\">\n  <div class=\"card-content\">\n    <p>Finalizing Your Video</p>\n  </div>\n  <form\n    #uploadVideo=\"ngForm\"\n    [formGroup]=\"uploadForm\"\n    (ngSubmit)=\"onSubmit(uploadVideo.value)\"\n  >\n    <div class=\"field-container\">\n      <input\n        class=\"field-input\"\n        style=\"\n          margin-top: 120px;\n          width: 60%;\n          margin-left: 20px;\n          height: 80px;\n          padding: 12px 20px;\n          margin-bottom: -200px;\n          box-sizing: border-box;\n        \"\n        id=\"inputid\"\n        type=\"text\"\n        placeholder=\"Title of the video\"\n        name=\"title\"\n        formControlName=\"video_title\"\n      />\n      <span\n        *ngIf=\"\n          !uploadForm.get('video_title').valid &&\n          uploadForm.get('video_title').touched\n        \"\n        class=\"help-block\"\n      >\n        <span *ngIf=\"uploadForm.get('video_title').errors['required']\"\n          >title of the video is required!</span\n        >\n        <span *ngIf=\"uploadForm.get('video_title').hasError('minlength')\"\n          >title length too short minimum length is 6!!!</span\n        >\n        <span *ngIf=\"uploadForm.get('video_title').hasError('maxlength')\"\n          >title length too long maximum length is 20!!!</span\n        >\n      </span>\n      <input\n        class=\"field-input\"\n        style=\"\n          margin-top: 50px;\n          height: 110px;\n          width: 60%;\n          margin-left: 20px;\n\n          padding: 12px 20px;\n\n          box-sizing: border-box;\n        \"\n        type=\"text\"\n        placeholder=\"Description of the video\"\n        name=\"description\"\n        formControlName=\"description_of_the_video\"\n      />\n      <span\n        *ngIf=\"\n          !uploadForm.get('description_of_the_video').valid &&\n          uploadForm.get('description_of_the_video').touched\n        \"\n        class=\"help-block\"\n      >\n        <span\n          *ngIf=\"uploadForm.get('description_of_the_video').errors['required']\"\n          >Description of the video is required!</span\n        >\n        <span\n          *ngIf=\"\n            uploadForm.get('description_of_the_video').hasError('minlength')\n          \"\n          >title length too short minimum length is 10!!!</span\n        >\n        <span\n          *ngIf=\"\n            uploadForm.get('description_of_the_video').hasError('maxlength')\n          \"\n          >title length too long maximum length is 200!!!</span\n        >\n      </span>\n\n      <div class=\"upload-button\">\n        <input\n          style=\"margin-top: 193px; text-align: center; margin-left: -250px\"\n          type=\"file\"\n          name=\"finalizingUpload\"\n          id=\"fileToUpload\"\n          formControlName=\"thumbnail\"\n          accept=\"image/*\"\n          (change)=\"onThumbnailSelected($event)\"\n        />\n\n        <input\n          type=\"submit\"\n          class=\"btn btn-primary\"\n          [disabled]=\"uploadForm.invalid\"\n          value=\"finish upload\"\n        />\n      </div>\n      <p style=\"margin-top: -90px; margin-left: 20px\">Upload thumbnail:</p>\n      <div class=\"video\" style=\"margin-left: 25px; margin-top: -480px\">\n        <iframe width=\"40%\" height=\"30%\" class=\"logo\" [src]=\"videoSrc\">\n        </iframe>\n      </div>\n    </div>\n  </form>\n</div> -->\n<div id=\"loader\">\n  <div tabindex=\"0\" class=\"e-card\" id=\"basic\">\n    <div class=\"e-card-header\">\n      <h3>Exporting your videos</h3>\n    </div>\n    <div class=\"e-card-separator\"></div>\n    <div class=\"e-card-content\">\n      \n      <div class=\"col-lg-12 control-section e-input-section\">\n          <form   #uploadVideo=\"ngForm\"\n          [formGroup]=\"uploadForm\"\n          (ngSubmit)=\"onSubmit(uploadVideo.value)\"\n          >\n            <div class=\"row material\" >\n                <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6\"><h5 style=\"color:black;float:left\">Details</h5></div>\n            </div>\n            \n            <div class=\"row material\" style=\"margin-top: 20px;\">\n                <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6\">\n                    <ejs-textbox placeholder=\"title\" \n                    class=\"title\"\n                    cssClass=\"e-outline\" formControlName=\"video_title\" floatLabelType=\"Auto\"></ejs-textbox>\n                    <span\n                    *ngIf=\"\n                      !uploadForm.get('video_title').valid &&\n                      uploadForm.get('video_title').touched\n                    \"\n                    class=\"help-block\"\n                  >\n             \n                    <span *ngIf=\"uploadForm.get('video_title').errors['required']\"\n                      >title of the video is required!</span\n                    >\n                    <span *ngIf=\"uploadForm.get('video_title').hasError('minlength')\"\n                      >title length too short minimum length is 2!!!</span\n                    >\n                    <span *ngIf=\"uploadForm.get('video_title').hasError('maxlength')\"\n                      >title length too long maximum length is 100!!!</span\n                    >\n                  </span>\n                </div>\n                \n                <div class=\"col-xs-12 col-sm-12 col-lg-6 col-md-3\">\n                  <iframe width=\"100%\" height=\"300px\" class=\"logo\" [src]=\"videoSrc\"></iframe>\n                </div>\n              \n                <div class=\"row material\" style=\"margin-top: -180px;\">\n                  <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6\">\n                    <ejs-textbox  class=\"description\" placeholder=\"description\" cssClass=\"e-outline\" floatLabelType=\"Auto\" formControlName=\"description_of_the_video\"></ejs-textbox>\n                </div>\n                <span\n        *ngIf=\"\n          !uploadForm.get('description_of_the_video').valid &&\n          uploadForm.get('description_of_the_video').touched\n        \"\n        class=\"help-block\"\n      >\n        <span\n          *ngIf=\"uploadForm.get('description_of_the_video').errors['required']\"\n          >Description of the video is required!</span\n        >\n        <span\n          *ngIf=\"\n            uploadForm.get('description_of_the_video').hasError('minlength')\n          \"\n          >title length too short minimum length is 10!!!</span\n        >\n        <span\n          *ngIf=\"\n            uploadForm.get('description_of_the_video').hasError('maxlength')\n          \"\n          >title length too long maximum length is 200!!!</span\n        >\n      </span>\n\n                </div>\n                <div class=\"row material\" >\n                  <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6\"><h5 style=\"color:black;float:left\">Thumbnail</h5></div>\n                  <div id='dropArea'><span id='drop' class=\"droparea\"> Drop files here or <a href=\"\" id='browse'><u>Browse</u></a> </span>\n                    <ejs-uploader #defaultupload autoUpload='false'  [asyncSettings] >\n                    <ng-template #template let-data=\"\">\n                          <span class='wrapper'><span class='icon sf-icon-{{data.type}}'></span>\n                          <span class='name file-name'>{{data.name}}</span></span>\n                          <span class='file-size-td file-size'>{{data.size}} bytes</span>\n                          <span class='e-icons e-file-remove-btn' title='Remove'></span> <br/>\n                          <progress id='progressBar' class='progressbar' value='0' max='100'></progress>\n                          <span class='percent-td percent'></span>\n                      </ng-template>\n                </ejs-uploader>\n                    </div> `,\n              </div>\n                <div class=\"e-card-separator\" id=\"bottom-separator\"></div>\n                \n            </div>\n      </form>\n  </div>\n</div>\n</div>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}