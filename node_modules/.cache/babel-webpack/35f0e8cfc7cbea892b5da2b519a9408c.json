{"ast":null,"code":"const instances = 'ej2_instances';\nlet uid = 0;\nlet isBlazorPlatform = false;\n/**\n * Function to check whether the platform is blazor or not.\n *\n * @returns {void} result\n * @private\n */\n\nfunction disableBlazorMode() {\n  isBlazorPlatform = false;\n}\n/**\n * Create Instance from constructor function with desired parameters.\n *\n * @param {Function} classFunction - Class function to which need to create instance\n * @param {any[]} params - Parameters need to passed while creating instance\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction createInstance(classFunction, params) {\n  const arrayParam = params;\n  arrayParam.unshift(undefined);\n  return new (Function.prototype.bind.apply(classFunction, arrayParam))();\n}\n/**\n * To run a callback function immediately after the browser has completed other operations.\n *\n * @param {Function} handler - callback function to be triggered.\n * @returns {Function} ?\n * @private\n */\n\n\nfunction setImmediate(handler) {\n  let unbind; // eslint-disable-next-line\n\n  const num = new Uint16Array(5);\n  const intCrypto = window.msCrypto || window.crypto;\n  intCrypto.getRandomValues(num);\n  let secret = 'ej2' + combineArray(num); // eslint-disable-next-line\n\n  let messageHandler = event => {\n    if (event.source === window && typeof event.data === 'string' && event.data.length <= 32 && event.data === secret) {\n      handler();\n      unbind();\n    }\n  };\n\n  window.addEventListener('message', messageHandler, false);\n  window.postMessage(secret, '*');\n  return unbind = () => {\n    window.removeEventListener('message', messageHandler);\n    handler = messageHandler = secret = undefined;\n  };\n}\n/**\n * To get nameSpace value from the desired object.\n *\n * @param {string} nameSpace - String value to the get the inner object\n * @param {any} obj - Object to get the inner object value.\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction getValue(nameSpace, obj) {\n  // eslint-disable-next-line\n  let value = obj;\n  const splits = nameSpace.replace(/\\[/g, '.').replace(/\\]/g, '').split('.');\n\n  for (let i = 0; i < splits.length && !isUndefined(value); i++) {\n    value = value[splits[i]];\n  }\n\n  return value;\n}\n/**\n * To set value for the nameSpace in desired object.\n *\n * @param {string} nameSpace - String value to the get the inner object\n * @param {any} value - Value that you need to set.\n * @param {any} obj - Object to get the inner object value.\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction setValue(nameSpace, value, obj) {\n  const keys = nameSpace.replace(/\\[/g, '.').replace(/\\]/g, '').split('.'); // eslint-disable-next-line\n\n  const start = obj || {}; // eslint-disable-next-line\n\n  let fromObj = start;\n  let i;\n  const length = keys.length;\n  let key;\n\n  for (i = 0; i < length; i++) {\n    key = keys[i];\n\n    if (i + 1 === length) {\n      fromObj[key] = value === undefined ? {} : value;\n    } else if (isNullOrUndefined(fromObj[key])) {\n      fromObj[key] = {};\n    }\n\n    fromObj = fromObj[key];\n  }\n\n  return start;\n}\n/**\n * Delete an item from Object\n *\n * @param {any} obj - Object in which we need to delete an item.\n * @param {string} key - String value to the get the inner object\n * @returns {void} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction deleteObject(obj, key) {\n  delete obj[key];\n}\n/**\n * Check weather the given argument is only object.\n *\n * @param {any} obj - Object which is need to check.\n * @returns {boolean} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction isObject(obj) {\n  const objCon = {};\n  return !isNullOrUndefined(obj) && obj.constructor === objCon.constructor;\n}\n/**\n * To get enum value by giving the string.\n *\n * @param {any} enumObject - Enum object.\n * @param {string} enumValue - Enum value to be searched\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction getEnumValue(enumObject, enumValue) {\n  // eslint-disable-next-line\n  return enumObject[enumValue];\n}\n/**\n * Merge the source object into destination object.\n *\n * @param {any} source - source object which is going to merge with destination object\n * @param {any} destination - object need to be merged\n * @returns {void} ?\n * @private\n */\n\n\nfunction merge(source, destination) {\n  if (!isNullOrUndefined(destination)) {\n    const temrObj = source;\n    const tempProp = destination;\n    const keys = Object.keys(destination);\n    const deepmerge = 'deepMerge';\n\n    for (const key of keys) {\n      if (!isNullOrUndefined(temrObj[deepmerge]) && temrObj[deepmerge].indexOf(key) !== -1 && (isObject(tempProp[key]) || Array.isArray(tempProp[key]))) {\n        extend(temrObj[key], temrObj[key], tempProp[key], true);\n      } else {\n        temrObj[key] = tempProp[key];\n      }\n    }\n  }\n}\n/**\n * Extend the two object with newer one.\n *\n * @param {any} copied - Resultant object after merged\n * @param {Object} first - First object need to merge\n * @param {Object} second - Second object need to merge\n * @param {boolean} deep ?\n * @returns {Object} ?\n * @private\n */\n\n\nfunction extend(copied, first, second, deep) {\n  const result = copied && typeof copied === 'object' ? copied : {};\n  let length = arguments.length;\n\n  if (deep) {\n    length = length - 1;\n  }\n\n  for (let i = 1; i < length; i++) {\n    // eslint-disable-next-line\n    if (!arguments[i]) {\n      continue;\n    } // eslint-disable-next-line\n\n\n    let obj1 = arguments[i];\n    Object.keys(obj1).forEach(key => {\n      const src = result[key];\n      const copy = obj1[key];\n      let clone;\n      const isArrayChanged = Array.isArray(copy) && Array.isArray(src) && copy.length !== src.length; // eslint-disable-next-line\n\n      const blazorEventExtend = isBlazor() ? !(src instanceof Event) && !isArrayChanged : true;\n\n      if (deep && blazorEventExtend && (isObject(copy) || Array.isArray(copy))) {\n        if (isObject(copy)) {\n          clone = src ? src : {}; // eslint-disable-next-line\n\n          if (Array.isArray(clone) && clone.hasOwnProperty('isComplexArray')) {\n            extend(clone, {}, copy, deep);\n          } else {\n            result[key] = extend(clone, {}, copy, deep);\n          }\n        } else {\n          /* istanbul ignore next */\n          clone = isBlazor() ? src && Object.keys(copy).length : src ? src : [];\n          result[key] = extend([], clone, copy, deep);\n        }\n      } else {\n        result[key] = copy;\n      }\n    });\n  }\n\n  return result;\n}\n/**\n * To check whether the object is null or undefined.\n *\n * @param {Object} value - To check the object is null or undefined\n * @returns {boolean} ?\n * @private\n */\n\n\nfunction isNullOrUndefined(value) {\n  return value === undefined || value === null;\n}\n/**\n * To check whether the object is undefined.\n *\n * @param {Object} value - To check the object is undefined\n * @returns {boolean} ?\n * @private\n */\n\n\nfunction isUndefined(value) {\n  return 'undefined' === typeof value;\n}\n/**\n * To return the generated unique name\n *\n * @param {string} definedName - To concatenate the unique id to provided name\n * @returns {string} ?\n * @private\n */\n\n\nfunction getUniqueID(definedName) {\n  return definedName + '_' + uid++;\n}\n/**\n * It limits the rate at which a function can fire. The function will fire only once every provided second instead of as quickly.\n *\n * @param {Function} eventFunction - Specifies the function to run when the event occurs\n * @param {number} delay - A number that specifies the milliseconds for function delay call option\n * @returns {Function} ?\n * @private\n */\n\n\nfunction debounce(eventFunction, delay) {\n  // eslint-disable-next-line\n  let out;\n  return function () {\n    // eslint-disable-next-line\n    const args = arguments;\n\n    const later = () => {\n      out = null;\n      return eventFunction.apply(this, args);\n    };\n\n    clearTimeout(out);\n    out = setTimeout(later, delay);\n  };\n}\n/**\n * To convert the object to string for query url\n *\n * @param  {Object} data ?\n * @returns {string} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction queryParams(data) {\n  const array = [];\n  const keys = Object.keys(data);\n\n  for (const key of keys) {\n    array.push(encodeURIComponent(key) + '=' + encodeURIComponent('' + data[key]));\n  }\n\n  return array.join('&');\n}\n/**\n * To check whether the given array contains object.\n *\n * @param {any} value - Specifies the T type array to be checked.\n * @returns {boolean} ?\n * @private\n */\n\n\nfunction isObjectArray(value) {\n  const parser = Object.prototype.toString;\n\n  if (parser.call(value) === '[object Array]') {\n    if (parser.call(value[0]) === '[object Object]') {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * To check whether the  child element is descendant to parent element or parent and child are same element.\n *\n * @param {Element} child - Specifies the child element to compare with parent.\n * @param {Element} parent - Specifies the parent element.\n * @returns {boolean} ?\n * @private\n */\n\n\nfunction compareElementParent(child, parent) {\n  const node = child;\n\n  if (node === parent) {\n    return true;\n  } else if (node === document || !node) {\n    return false;\n  } else {\n    return compareElementParent(node.parentNode, parent);\n  }\n}\n/**\n * To throw custom error message.\n *\n * @param {string} message - Specifies the error message to be thrown.\n * @returns {void} ?\n * @private\n */\n\n\nfunction throwError(message) {\n  try {\n    throw new Error(message);\n  } catch (e) {\n    // eslint-disable-next-line\n    throw e.message + '\\n' + e.stack;\n  }\n}\n/**\n * This function is used to print given element\n *\n * @param {Element} element - Specifies the print content element.\n * @param {Window} printWindow - Specifies the print window.\n * @returns {Window} ?\n * @private\n */\n\n\nfunction print(element, printWindow) {\n  const div = document.createElement('div');\n  const links = [].slice.call(document.getElementsByTagName('head')[0].querySelectorAll('base, link, style'));\n  let reference = '';\n\n  if (isNullOrUndefined(printWindow)) {\n    printWindow = window.open('', 'print', 'height=452,width=1024,tabbar=no');\n  }\n\n  div.appendChild(element.cloneNode(true));\n\n  for (let i = 0, len = links.length; i < len; i++) {\n    reference += links[i].outerHTML;\n  }\n\n  printWindow.document.write('<!DOCTYPE html> <html><head>' + reference + '</head><body>' + div.innerHTML + '<script> (function() { window.ready = true; })(); </script>' + '</body></html>');\n  printWindow.document.close();\n  printWindow.focus(); // eslint-disable-next-line\n\n  const interval = setInterval(() => {\n    if (printWindow.ready) {\n      printWindow.print();\n      printWindow.close();\n      clearInterval(interval);\n    }\n  }, 500);\n  return printWindow;\n}\n/**\n * Function to normalize the units applied to the element.\n *\n * @param {number|string} value ?\n * @returns {string} result\n * @private\n */\n\n\nfunction formatUnit(value) {\n  const result = value + '';\n\n  if (result === 'auto' || result.indexOf('%') !== -1 || result.indexOf('px') !== -1) {\n    return result;\n  }\n\n  return result + 'px';\n}\n/**\n * Function to check whether the platform is blazor or not.\n *\n * @returns {void} result\n * @private\n */\n\n\nfunction enableBlazorMode() {\n  isBlazorPlatform = true;\n}\n/**\n * Function to check whether the platform is blazor or not.\n *\n * @returns {boolean} result\n * @private\n */\n\n\nfunction isBlazor() {\n  return isBlazorPlatform;\n}\n/**\n * Function to convert xPath to DOM element in blazor platform\n *\n * @returns {HTMLElement} result\n * @param {HTMLElement | object} element ?\n * @private\n */\n\n\nfunction getElement(element) {\n  const xPath = 'xPath';\n\n  if (!(element instanceof Node) && isBlazor() && !isNullOrUndefined(element[xPath])) {\n    return document.evaluate(element[xPath], document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n  }\n\n  return element;\n}\n/**\n * Function to fetch the Instances of a HTML element for the given component.\n *\n * @param {string | HTMLElement} element ?\n * @param {any} component ?\n * @returns {Object} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction getInstance(element, component) {\n  // eslint-disable-next-line\n  let elem = typeof element === 'string' ? document.querySelector(element) : element;\n\n  if (elem[instances]) {\n    for (const inst of elem[instances]) {\n      if (inst instanceof component) {\n        return inst;\n      }\n    }\n  }\n\n  return null;\n}\n/**\n * Function to add instances for the given element.\n *\n * @param {string | HTMLElement} element ?\n * @param {Object} instance ?\n * @returns {void} ?\n * @private\n */\n\n\nfunction addInstance(element, instance) {\n  // eslint-disable-next-line\n  let elem = typeof element === 'string' ? document.querySelector(element) : element;\n\n  if (elem[instances]) {\n    elem[instances].push(instance);\n  } else {\n    elem[instances] = [instance];\n  }\n}\n/**\n * Function to generate the unique id.\n *\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction uniqueID() {\n  if (typeof window === 'undefined') {\n    return;\n  } // eslint-disable-next-line\n\n\n  let num = new Uint16Array(5);\n  const intCrypto = window.msCrypto || window.crypto;\n  return intCrypto.getRandomValues(num);\n}\n/**\n *\n * @param {Int16Array} num ?\n * @returns {string} ?\n */\n\n\nfunction combineArray(num) {\n  let ret = '';\n\n  for (let i = 0; i < 5; i++) {\n    ret += (i ? ',' : '') + num[i];\n  }\n\n  return ret;\n}\n/**\n * Parser\n */\n\n\nconst defaultNumberingSystem = {\n  'latn': {\n    '_digits': '0123456789',\n    '_type': 'numeric'\n  }\n};\nconst defaultNumberSymbols = {\n  'decimal': '.',\n  'group': ',',\n  'percentSign': '%',\n  'plusSign': '+',\n  'minusSign': '-',\n  'infinity': '∞',\n  'nan': 'NaN',\n  'exponential': 'E'\n};\nconst latnNumberSystem = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n/**\n * Interface for parser base\n *\n * @private\n */\n\nclass ParserBase {\n  /**\n   * Returns the cldr object for the culture specifies\n   *\n   * @param {Object} obj - Specifies the object from which culture object to be acquired.\n   * @param {string} cName - Specifies the culture name.\n   * @returns {Object} ?\n   */\n  static getMainObject(obj, cName) {\n    const value = isBlazor() ? cName : 'main.' + cName;\n    return getValue(value, obj);\n  }\n  /**\n   * Returns the numbering system object from given cldr data.\n   *\n   * @param {Object} obj - Specifies the object from which number system is acquired.\n   * @returns {Object} ?\n   */\n\n\n  static getNumberingSystem(obj) {\n    return getValue('supplemental.numberingSystems', obj) || this.numberingSystems;\n  }\n  /**\n   * Returns the reverse of given object keys or keys specified.\n   *\n   * @param {Object} prop - Specifies the object to be reversed.\n   * @param {number[]} keys - Optional parameter specifies the custom keyList for reversal.\n   * @returns {Object} ?\n   */\n\n\n  static reverseObject(prop, keys) {\n    const propKeys = keys || Object.keys(prop);\n    const res = {};\n\n    for (const key of propKeys) {\n      // eslint-disable-next-line\n      if (!res.hasOwnProperty(prop[key])) {\n        // eslint-disable-next-line\n        res[prop[key]] = key;\n      }\n    }\n\n    return res;\n  }\n  /**\n   * Returns the symbol regex by skipping the escape sequence.\n   *\n   * @param {string[]} props - Specifies the array values to be skipped.\n   * @returns {RegExp} ?\n   */\n\n\n  static getSymbolRegex(props) {\n    const regexStr = props.map(str => {\n      return str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\n    }).join('|');\n    return new RegExp(regexStr, 'g');\n  }\n  /**\n   *\n   * @param {Object} prop ?\n   * @returns {Object} ?\n   */\n\n\n  static getSymbolMatch(prop) {\n    const matchKeys = Object.keys(defaultNumberSymbols);\n    const ret = {};\n\n    for (const key of matchKeys) {\n      // eslint-disable-next-line\n      ret[prop[key]] = defaultNumberSymbols[key];\n    }\n\n    return ret;\n  }\n  /**\n   * Returns regex string for provided value\n   *\n   * @param {string} val ?\n   * @returns {string} ?\n   */\n\n\n  static constructRegex(val) {\n    const len = val.length;\n    let ret = '';\n\n    for (let i = 0; i < len; i++) {\n      if (i !== len - 1) {\n        ret += val[i] + '|';\n      } else {\n        ret += val[i];\n      }\n    }\n\n    return ret;\n  }\n  /**\n   * Returns the replaced value of matching regex and obj mapper.\n   *\n   * @param {string} value - Specifies the  values to be replaced.\n   * @param {RegExp} regex - Specifies the  regex to search.\n   * @param {Object} obj - Specifies the  object matcher to be replace value parts.\n   * @returns {string} ?\n   */\n\n\n  static convertValueParts(value, regex, obj) {\n    return value.replace(regex, str => {\n      // eslint-disable-next-line\n      return obj[str];\n    });\n  }\n  /**\n   * Returns default numbering system object for formatting from cldr data\n   *\n   * @param {Object} obj ?\n   * @returns {NumericObject} ?\n   */\n\n\n  static getDefaultNumberingSystem(obj) {\n    const ret = {};\n    ret.obj = getValue('numbers', obj);\n    ret.nSystem = getValue('defaultNumberingSystem', ret.obj);\n    return ret;\n  }\n  /**\n   * Returns the replaced value of matching regex and obj mapper.\n   *\n   * @param {Object} curObj ?\n   * @param {Object} numberSystem ?\n   * @param {boolean} needSymbols ?\n   * @param {boolean} blazorMode ?\n   * @returns {Object} ?\n   */\n\n\n  static getCurrentNumericOptions(curObj, numberSystem, needSymbols, blazorMode) {\n    const ret = {};\n    const cur = this.getDefaultNumberingSystem(curObj);\n\n    if (!isUndefined(cur.nSystem) || blazorMode) {\n      const digits = blazorMode ? getValue('obj.mapperDigits', cur) : getValue(cur.nSystem + '._digits', numberSystem);\n\n      if (!isUndefined(digits)) {\n        ret.numericPair = this.reverseObject(digits, latnNumberSystem);\n        ret.numberParseRegex = new RegExp(this.constructRegex(digits), 'g');\n        ret.numericRegex = '[' + digits[0] + '-' + digits[9] + ']';\n\n        if (needSymbols) {\n          ret.numericRegex = digits[0] + '-' + digits[9];\n          ret.symbolNumberSystem = getValue(blazorMode ? 'numberSymbols' : 'symbols-numberSystem-' + cur.nSystem, cur.obj);\n          ret.symbolMatch = this.getSymbolMatch(ret.symbolNumberSystem);\n          ret.numberSystem = cur.nSystem;\n        }\n      }\n    }\n\n    return ret;\n  }\n  /**\n   * Returns number mapper object for the provided cldr data\n   *\n   * @param {Object} curObj ?\n   * @param {Object} numberSystem ?\n   * @param {boolean} isNumber ?\n   * @returns {NumberMapper} ?\n   */\n  // eslint-disable-next-line\n\n\n  static getNumberMapper(curObj, numberSystem, isNumber) {\n    const ret = {\n      mapper: {}\n    };\n    const cur = this.getDefaultNumberingSystem(curObj);\n\n    if (!isUndefined(cur.nSystem)) {\n      ret.numberSystem = cur.nSystem;\n      ret.numberSymbols = getValue('symbols-numberSystem-' + cur.nSystem, cur.obj);\n      ret.timeSeparator = getValue('timeSeparator', ret.numberSymbols);\n      const digits = getValue(cur.nSystem + '._digits', numberSystem);\n\n      if (!isUndefined(digits)) {\n        for (const i of latnNumberSystem) {\n          // eslint-disable-next-line\n          ret.mapper[i] = digits[i];\n        }\n      }\n    }\n\n    return ret;\n  }\n\n}\n\nParserBase.nPair = 'numericPair';\nParserBase.nRegex = 'numericRegex';\nParserBase.numberingSystems = defaultNumberingSystem;\n/**\n * @private\n */\n\nconst blazorCurrencyData = {\n  'DJF': 'Fdj',\n  'ERN': 'Nfk',\n  'ETB': 'Br',\n  'NAD': '$',\n  'ZAR': 'R',\n  'XAF': 'FCFA',\n  'GHS': 'GH₵',\n  'XDR': 'XDR',\n  'AED': 'د.إ.‏',\n  'BHD': 'د.ب.‏',\n  'DZD': 'د.ج.‏',\n  'EGP': 'ج.م.‏',\n  'ILS': '₪',\n  'IQD': 'د.ع.‏',\n  'JOD': 'د.ا.‏',\n  'KMF': 'CF',\n  'KWD': 'د.ك.‏',\n  'LBP': 'ل.ل.‏',\n  'LYD': 'د.ل.‏',\n  'MAD': 'د.م.‏',\n  'MRU': 'أ.م.',\n  'OMR': 'ر.ع.‏',\n  'QAR': 'ر.ق.‏',\n  'SAR': 'ر.س.‏',\n  'SDG': 'ج.س.',\n  'SOS': 'S',\n  'SSP': '£',\n  'SYP': 'ل.س.‏',\n  'TND': 'د.ت.‏',\n  'YER': 'ر.ي.‏',\n  'CLP': '$',\n  'INR': '₹',\n  'TZS': 'TSh',\n  'EUR': '€',\n  'AZN': '₼',\n  'RUB': '₽',\n  'BYN': 'Br',\n  'ZMW': 'K',\n  'BGN': 'лв.',\n  'NGN': '₦',\n  'XOF': 'CFA',\n  'BDT': '৳',\n  'CNY': '¥',\n  'BAM': 'КМ',\n  'UGX': 'USh',\n  'USD': '$',\n  'CZK': 'Kč',\n  'GBP': '£',\n  'DKK': 'kr.',\n  'KES': 'Ksh',\n  'CHF': 'CHF',\n  'MVR': 'ރ.',\n  'BTN': 'Nu.',\n  'XCD': 'EC$',\n  'AUD': '$',\n  'BBD': '$',\n  'BIF': 'FBu',\n  'BMD': '$',\n  'BSD': '$',\n  'BWP': 'P',\n  'BZD': '$',\n  'CAD': '$',\n  'NZD': '$',\n  'FJD': '$',\n  'FKP': '£',\n  'GIP': '£',\n  'GMD': 'D',\n  'GYD': '$',\n  'HKD': '$',\n  'IDR': 'Rp',\n  'JMD': '$',\n  'KYD': '$',\n  'LRD': '$',\n  'MGA': 'Ar',\n  'MOP': 'MOP$',\n  'MUR': 'Rs',\n  'MWK': 'MK',\n  'MYR': 'RM',\n  'PGK': 'K',\n  'PHP': '₱',\n  'PKR': 'Rs',\n  'RWF': 'RF',\n  'SBD': '$',\n  'SCR': 'SR',\n  'SEK': 'kr',\n  'SGD': '$',\n  'SHP': '£',\n  'SLL': 'Le',\n  'ANG': 'NAf.',\n  'SZL': 'E',\n  'TOP': 'T$',\n  'TTD': '$',\n  'VUV': 'VT',\n  'WST': 'WS$',\n  'ARS': '$',\n  'BOB': 'Bs',\n  'BRL': 'R$',\n  'COP': '$',\n  'CRC': '₡',\n  'CUP': '$',\n  'DOP': '$',\n  'GTQ': 'Q',\n  'HNL': 'L',\n  'MXN': '$',\n  'NIO': 'C$',\n  'PAB': 'B/.',\n  'PEN': 'S/',\n  'PYG': '₲',\n  'UYU': '$',\n  'VES': 'Bs.S',\n  'IRR': 'ريال',\n  'GNF': 'FG',\n  'CDF': 'FC',\n  'HTG': 'G',\n  'XPF': 'FCFP',\n  'HRK': 'kn',\n  'HUF': 'Ft',\n  'AMD': '֏',\n  'ISK': 'kr',\n  'JPY': '¥',\n  'GEL': '₾',\n  'CVE': '​',\n  'KZT': '₸',\n  'KHR': '៛',\n  'KPW': '₩',\n  'KRW': '₩',\n  'KGS': 'сом',\n  'AOA': 'Kz',\n  'LAK': '₭',\n  'MZN': 'MTn',\n  'MKD': 'ден',\n  'MNT': '₮',\n  'BND': '$',\n  'MMK': 'K',\n  'NOK': 'kr',\n  'NPR': 'रु',\n  'AWG': 'Afl.',\n  'SRD': '$',\n  'PLN': 'zł',\n  'AFN': '؋',\n  'STN': 'Db',\n  'MDL': 'L',\n  'RON': 'lei',\n  'UAH': '₴',\n  'LKR': 'රු.',\n  'ALL': 'Lekë',\n  'RSD': 'дин.',\n  'TJS': 'смн',\n  'THB': '฿',\n  'TMT': 'm.',\n  'TRY': '₺',\n  'UZS': 'сўм',\n  'VND': '₫',\n  'TWD': 'NT$'\n};\n/**\n *\n * @param {string} currencyCode ?\n * @returns {string} ?\n */\n\nfunction getBlazorCurrencySymbol(currencyCode) {\n  return getValue(currencyCode || '', blazorCurrencyData);\n}\n/***\n * Hijri parser\n */\n// eslint-disable-next-line\n\n\nvar HijriParser;\n\n(function (HijriParser) {\n  const dateCorrection = [28607, 28636, 28665, 28695, 28724, 28754, 28783, 28813, 28843, 28872, 28901, 28931, 28960, 28990, 29019, 29049, 29078, 29108, 29137, 29167, 29196, 29226, 29255, 29285, 29315, 29345, 29375, 29404, 29434, 29463, 29492, 29522, 29551, 29580, 29610, 29640, 29669, 29699, 29729, 29759, 29788, 29818, 29847, 29876, 29906, 29935, 29964, 29994, 30023, 30053, 30082, 30112, 30141, 30171, 30200, 30230, 30259, 30289, 30318, 30348, 30378, 30408, 30437, 30467, 30496, 30526, 30555, 30585, 30614, 30644, 30673, 30703, 30732, 30762, 30791, 30821, 30850, 30880, 30909, 30939, 30968, 30998, 31027, 31057, 31086, 31116, 31145, 31175, 31204, 31234, 31263, 31293, 31322, 31352, 31381, 31411, 31441, 31471, 31500, 31530, 31559, 31589, 31618, 31648, 31676, 31706, 31736, 31766, 31795, 31825, 31854, 31884, 31913, 31943, 31972, 32002, 32031, 32061, 32090, 32120, 32150, 32180, 32209, 32239, 32268, 32298, 32327, 32357, 32386, 32416, 32445, 32475, 32504, 32534, 32563, 32593, 32622, 32652, 32681, 32711, 32740, 32770, 32799, 32829, 32858, 32888, 32917, 32947, 32976, 33006, 33035, 33065, 33094, 33124, 33153, 33183, 33213, 33243, 33272, 33302, 33331, 33361, 33390, 33420, 33450, 33479, 33509, 33539, 33568, 33598, 33627, 33657, 33686, 33716, 33745, 33775, 33804, 33834, 33863, 33893, 33922, 33952, 33981, 34011, 34040, 34069, 34099, 34128, 34158, 34187, 34217, 34247, 34277, 34306, 34336, 34365, 34395, 34424, 34454, 34483, 34512, 34542, 34571, 34601, 34631, 34660, 34690, 34719, 34749, 34778, 34808, 34837, 34867, 34896, 34926, 34955, 34985, 35015, 35044, 35074, 35103, 35133, 35162, 35192, 35222, 35251, 35280, 35310, 35340, 35370, 35399, 35429, 35458, 35488, 35517, 35547, 35576, 35605, 35635, 35665, 35694, 35723, 35753, 35782, 35811, 35841, 35871, 35901, 35930, 35960, 35989, 36019, 36048, 36078, 36107, 36136, 36166, 36195, 36225, 36254, 36284, 36314, 36343, 36373, 36403, 36433, 36462, 36492, 36521, 36551, 36580, 36610, 36639, 36669, 36698, 36728, 36757, 36786, 36816, 36845, 36875, 36904, 36934, 36963, 36993, 37022, 37052, 37081, 37111, 37141, 37170, 37200, 37229, 37259, 37288, 37318, 37347, 37377, 37406, 37436, 37465, 37495, 37524, 37554, 37584, 37613, 37643, 37672, 37701, 37731, 37760, 37790, 37819, 37849, 37878, 37908, 37938, 37967, 37997, 38027, 38056, 38085, 38115, 38144, 38174, 38203, 38233, 38262, 38292, 38322, 38351, 38381, 38410, 38440, 38469, 38499, 38528, 38558, 38587, 38617, 38646, 38676, 38705, 38735, 38764, 38794, 38823, 38853, 38882, 38912, 38941, 38971, 39001, 39030, 39059, 39089, 39118, 39148, 39178, 39208, 39237, 39267, 39297, 39326, 39355, 39385, 39414, 39444, 39473, 39503, 39532, 39562, 39592, 39621, 39650, 39680, 39709, 39739, 39768, 39798, 39827, 39857, 39886, 39916, 39946, 39975, 40005, 40035, 40064, 40094, 40123, 40153, 40182, 40212, 40241, 40271, 40300, 40330, 40359, 40389, 40418, 40448, 40477, 40507, 40536, 40566, 40595, 40625, 40655, 40685, 40714, 40744, 40773, 40803, 40832, 40862, 40892, 40921, 40951, 40980, 41009, 41039, 41068, 41098, 41127, 41157, 41186, 41216, 41245, 41275, 41304, 41334, 41364, 41393, 41422, 41452, 41481, 41511, 41540, 41570, 41599, 41629, 41658, 41688, 41718, 41748, 41777, 41807, 41836, 41865, 41894, 41924, 41953, 41983, 42012, 42042, 42072, 42102, 42131, 42161, 42190, 42220, 42249, 42279, 42308, 42337, 42367, 42397, 42426, 42456, 42485, 42515, 42545, 42574, 42604, 42633, 42662, 42692, 42721, 42751, 42780, 42810, 42839, 42869, 42899, 42929, 42958, 42988, 43017, 43046, 43076, 43105, 43135, 43164, 43194, 43223, 43253, 43283, 43312, 43342, 43371, 43401, 43430, 43460, 43489, 43519, 43548, 43578, 43607, 43637, 43666, 43696, 43726, 43755, 43785, 43814, 43844, 43873, 43903, 43932, 43962, 43991, 44021, 44050, 44080, 44109, 44139, 44169, 44198, 44228, 44258, 44287, 44317, 44346, 44375, 44405, 44434, 44464, 44493, 44523, 44553, 44582, 44612, 44641, 44671, 44700, 44730, 44759, 44788, 44818, 44847, 44877, 44906, 44936, 44966, 44996, 45025, 45055, 45084, 45114, 45143, 45172, 45202, 45231, 45261, 45290, 45320, 45350, 45380, 45409, 45439, 45468, 45498, 45527, 45556, 45586, 45615, 45644, 45674, 45704, 45733, 45763, 45793, 45823, 45852, 45882, 45911, 45940, 45970, 45999, 46028, 46058, 46088, 46117, 46147, 46177, 46206, 46236, 46265, 46295, 46324, 46354, 46383, 46413, 46442, 46472, 46501, 46531, 46560, 46590, 46620, 46649, 46679, 46708, 46738, 46767, 46797, 46826, 46856, 46885, 46915, 46944, 46974, 47003, 47033, 47063, 47092, 47122, 47151, 47181, 47210, 47240, 47269, 47298, 47328, 47357, 47387, 47417, 47446, 47476, 47506, 47535, 47565, 47594, 47624, 47653, 47682, 47712, 47741, 47771, 47800, 47830, 47860, 47890, 47919, 47949, 47978, 48008, 48037, 48066, 48096, 48125, 48155, 48184, 48214, 48244, 48273, 48303, 48333, 48362, 48392, 48421, 48450, 48480, 48509, 48538, 48568, 48598, 48627, 48657, 48687, 48717, 48746, 48776, 48805, 48834, 48864, 48893, 48922, 48952, 48982, 49011, 49041, 49071, 49100, 49130, 49160, 49189, 49218, 49248, 49277, 49306, 49336, 49365, 49395, 49425, 49455, 49484, 49514, 49543, 49573, 49602, 49632, 49661, 49690, 49720, 49749, 49779, 49809, 49838, 49868, 49898, 49927, 49957, 49986, 50016, 50045, 50075, 50104, 50133, 50163, 50192, 50222, 50252, 50281, 50311, 50340, 50370, 50400, 50429, 50459, 50488, 50518, 50547, 50576, 50606, 50635, 50665, 50694, 50724, 50754, 50784, 50813, 50843, 50872, 50902, 50931, 50960, 50990, 51019, 51049, 51078, 51108, 51138, 51167, 51197, 51227, 51256, 51286, 51315, 51345, 51374, 51403, 51433, 51462, 51492, 51522, 51552, 51582, 51611, 51641, 51670, 51699, 51729, 51758, 51787, 51816, 51846, 51876, 51906, 51936, 51965, 51995, 52025, 52054, 52083, 52113, 52142, 52171, 52200, 52230, 52260, 52290, 52319, 52349, 52379, 52408, 52438, 52467, 52497, 52526, 52555, 52585, 52614, 52644, 52673, 52703, 52733, 52762, 52792, 52822, 52851, 52881, 52910, 52939, 52969, 52998, 53028, 53057, 53087, 53116, 53146, 53176, 53205, 53235, 53264, 53294, 53324, 53353, 53383, 53412, 53441, 53471, 53500, 53530, 53559, 53589, 53619, 53648, 53678, 53708, 53737, 53767, 53796, 53825, 53855, 53884, 53913, 53943, 53973, 54003, 54032, 54062, 54092, 54121, 54151, 54180, 54209, 54239, 54268, 54297, 54327, 54357, 54387, 54416, 54446, 54476, 54505, 54535, 54564, 54593, 54623, 54652, 54681, 54711, 54741, 54770, 54800, 54830, 54859, 54889, 54919, 54948, 54977, 55007, 55036, 55066, 55095, 55125, 55154, 55184, 55213, 55243, 55273, 55302, 55332, 55361, 55391, 55420, 55450, 55479, 55508, 55538, 55567, 55597, 55627, 55657, 55686, 55716, 55745, 55775, 55804, 55834, 55863, 55892, 55922, 55951, 55981, 56011, 56040, 56070, 56100, 56129, 56159, 56188, 56218, 56247, 56276, 56306, 56335, 56365, 56394, 56424, 56454, 56483, 56513, 56543, 56572, 56601, 56631, 56660, 56690, 56719, 56749, 56778, 56808, 56837, 56867, 56897, 56926, 56956, 56985, 57015, 57044, 57074, 57103, 57133, 57162, 57192, 57221, 57251, 57280, 57310, 57340, 57369, 57399, 57429, 57458, 57487, 57517, 57546, 57576, 57605, 57634, 57664, 57694, 57723, 57753, 57783, 57813, 57842, 57871, 57901, 57930, 57959, 57989, 58018, 58048, 58077, 58107, 58137, 58167, 58196, 58226, 58255, 58285, 58314, 58343, 58373, 58402, 58432, 58461, 58491, 58521, 58551, 58580, 58610, 58639, 58669, 58698, 58727, 58757, 58786, 58816, 58845, 58875, 58905, 58934, 58964, 58994, 59023, 59053, 59082, 59111, 59141, 59170, 59200, 59229, 59259, 59288, 59318, 59348, 59377, 59407, 59436, 59466, 59495, 59525, 59554, 59584, 59613, 59643, 59672, 59702, 59731, 59761, 59791, 59820, 59850, 59879, 59909, 59939, 59968, 59997, 60027, 60056, 60086, 60115, 60145, 60174, 60204, 60234, 60264, 60293, 60323, 60352, 60381, 60411, 60440, 60469, 60499, 60528, 60558, 60588, 60618, 60648, 60677, 60707, 60736, 60765, 60795, 60824, 60853, 60883, 60912, 60942, 60972, 61002, 61031, 61061, 61090, 61120, 61149, 61179, 61208, 61237, 61267, 61296, 61326, 61356, 61385, 61415, 61445, 61474, 61504, 61533, 61563, 61592, 61621, 61651, 61680, 61710, 61739, 61769, 61799, 61828, 61858, 61888, 61917, 61947, 61976, 62006, 62035, 62064, 62094, 62123, 62153, 62182, 62212, 62242, 62271, 62301, 62331, 62360, 62390, 62419, 62448, 62478, 62507, 62537, 62566, 62596, 62625, 62655, 62685, 62715, 62744, 62774, 62803, 62832, 62862, 62891, 62921, 62950, 62980, 63009, 63039, 63069, 63099, 63128, 63157, 63187, 63216, 63246, 63275, 63305, 63334, 63363, 63393, 63423, 63453, 63482, 63512, 63541, 63571, 63600, 63630, 63659, 63689, 63718, 63747, 63777, 63807, 63836, 63866, 63895, 63925, 63955, 63984, 64014, 64043, 64073, 64102, 64131, 64161, 64190, 64220, 64249, 64279, 64309, 64339, 64368, 64398, 64427, 64457, 64486, 64515, 64545, 64574, 64603, 64633, 64663, 64692, 64722, 64752, 64782, 64811, 64841, 64870, 64899, 64929, 64958, 64987, 65017, 65047, 65076, 65106, 65136, 65166, 65195, 65225, 65254, 65283, 65313, 65342, 65371, 65401, 65431, 65460, 65490, 65520, 65549, 65579, 65608, 65638, 65667, 65697, 65726, 65755, 65785, 65815, 65844, 65874, 65903, 65933, 65963, 65992, 66022, 66051, 66081, 66110, 66140, 66169, 66199, 66228, 66258, 66287, 66317, 66346, 66376, 66405, 66435, 66465, 66494, 66524, 66553, 66583, 66612, 66641, 66671, 66700, 66730, 66760, 66789, 66819, 66849, 66878, 66908, 66937, 66967, 66996, 67025, 67055, 67084, 67114, 67143, 67173, 67203, 67233, 67262, 67292, 67321, 67351, 67380, 67409, 67439, 67468, 67497, 67527, 67557, 67587, 67617, 67646, 67676, 67705, 67735, 67764, 67793, 67823, 67852, 67882, 67911, 67941, 67971, 68000, 68030, 68060, 68089, 68119, 68148, 68177, 68207, 68236, 68266, 68295, 68325, 68354, 68384, 68414, 68443, 68473, 68502, 68532, 68561, 68591, 68620, 68650, 68679, 68708, 68738, 68768, 68797, 68827, 68857, 68886, 68916, 68946, 68975, 69004, 69034, 69063, 69092, 69122, 69152, 69181, 69211, 69240, 69270, 69300, 69330, 69359, 69388, 69418, 69447, 69476, 69506, 69535, 69565, 69595, 69624, 69654, 69684, 69713, 69743, 69772, 69802, 69831, 69861, 69890, 69919, 69949, 69978, 70008, 70038, 70067, 70097, 70126, 70156, 70186, 70215, 70245, 70274, 70303, 70333, 70362, 70392, 70421, 70451, 70481, 70510, 70540, 70570, 70599, 70629, 70658, 70687, 70717, 70746, 70776, 70805, 70835, 70864, 70894, 70924, 70954, 70983, 71013, 71042, 71071, 71101, 71130, 71159, 71189, 71218, 71248, 71278, 71308, 71337, 71367, 71397, 71426, 71455, 71485, 71514, 71543, 71573, 71602, 71632, 71662, 71691, 71721, 71751, 71781, 71810, 71839, 71869, 71898, 71927, 71957, 71986, 72016, 72046, 72075, 72105, 72135, 72164, 72194, 72223, 72253, 72282, 72311, 72341, 72370, 72400, 72429, 72459, 72489, 72518, 72548, 72577, 72607, 72637, 72666, 72695, 72725, 72754, 72784, 72813, 72843, 72872, 72902, 72931, 72961, 72991, 73020, 73050, 73080, 73109, 73139, 73168, 73197, 73227, 73256, 73286, 73315, 73345, 73375, 73404, 73434, 73464, 73493, 73523, 73552, 73581, 73611, 73640, 73669, 73699, 73729, 73758, 73788, 73818, 73848, 73877, 73907, 73936, 73965, 73995, 74024, 74053, 74083, 74113, 74142, 74172, 74202, 74231, 74261, 74291, 74320, 74349, 74379, 74408, 74437, 74467, 74497, 74526, 74556, 74586, 74615, 74645, 74675, 74704, 74733, 74763, 74792, 74822, 74851, 74881, 74910, 74940, 74969, 74999, 75029, 75058, 75088, 75117, 75147, 75176, 75206, 75235, 75264, 75294, 75323, 75353, 75383, 75412, 75442, 75472, 75501, 75531, 75560, 75590, 75619, 75648, 75678, 75707, 75737, 75766, 75796, 75826, 75856, 75885, 75915, 75944, 75974, 76003, 76032, 76062, 76091, 76121, 76150, 76180, 76210, 76239, 76269, 76299, 76328, 76358, 76387, 76416, 76446, 76475, 76505, 76534, 76564, 76593, 76623, 76653, 76682, 76712, 76741, 76771, 76801, 76830, 76859, 76889, 76918, 76948, 76977, 77007, 77036, 77066, 77096, 77125, 77155, 77185, 77214, 77243, 77273, 77302, 77332, 77361, 77390, 77420, 77450, 77479, 77509, 77539, 77569, 77598, 77627, 77657, 77686, 77715, 77745, 77774, 77804, 77833, 77863, 77893, 77923, 77952, 77982, 78011, 78041, 78070, 78099, 78129, 78158, 78188, 78217, 78247, 78277, 78307, 78336, 78366, 78395, 78425, 78454, 78483, 78513, 78542, 78572, 78601, 78631, 78661, 78690, 78720, 78750, 78779, 78808, 78838, 78867, 78897, 78926, 78956, 78985, 79015, 79044, 79074, 79104, 79133, 79163, 79192, 79222, 79251, 79281, 79310, 79340, 79369, 79399, 79428, 79458, 79487, 79517, 79546, 79576, 79606, 79635, 79665, 79695, 79724, 79753, 79783, 79812, 79841, 79871, 79900, 79930, 79960, 79990];\n  /**\n   *\n   * @param {Date} gDate ?\n   * @returns {Object} ?\n   */\n\n  function getHijriDate(gDate) {\n    let day = gDate.getDate();\n    let month = gDate.getMonth();\n    let year = gDate.getFullYear();\n    let tMonth = month + 1;\n    let tYear = year;\n\n    if (tMonth < 3) {\n      tYear -= 1;\n      tMonth += 12;\n    }\n\n    let yPrefix = Math.floor(tYear / 100.);\n    let julilanOffset = yPrefix - Math.floor(yPrefix / 4.) - 2;\n    const julianNumber = Math.floor(365.25 * (tYear + 4716)) + Math.floor(30.6001 * (tMonth + 1)) + day - julilanOffset - 1524;\n    yPrefix = Math.floor((julianNumber - 1867216.25) / 36524.25);\n    julilanOffset = yPrefix - Math.floor(yPrefix / 4.) + 1;\n    const b = julianNumber + julilanOffset + 1524;\n    let c = Math.floor((b - 122.1) / 365.25);\n    const d = Math.floor(365.25 * c);\n    const tempMonth = Math.floor((b - d) / 30.6001);\n    day = b - d - Math.floor(30.6001 * tempMonth);\n    month = Math.floor((b - d) / 20.6001);\n\n    if (month > 13) {\n      c += 1;\n      month -= 12;\n    }\n\n    month -= 1;\n    year = c - 4716;\n    const modifiedJulianDate = julianNumber - 2400000; // date calculation for year after 2077\n\n    const iyear = 10631. / 30.;\n    let z = julianNumber - 1948084;\n    const cyc = Math.floor(z / 10631.);\n    z = z - 10631 * cyc;\n    const j = Math.floor((z - 0.1335) / iyear);\n    const iy = 30 * cyc + j;\n    z = z - Math.floor(j * iyear + 0.1335);\n    let im = Math.floor((z + 28.5001) / 29.5);\n    /* istanbul ignore next */\n\n    if (im === 13) {\n      im = 12;\n    }\n\n    const tempDay = z - Math.floor(29.5001 * im - 29);\n    let i = 0;\n\n    for (; i < dateCorrection.length; i++) {\n      if (dateCorrection[i] > modifiedJulianDate) {\n        break;\n      }\n    }\n\n    const iln = i + 16260;\n    const ii = Math.floor((iln - 1) / 12);\n    let hYear = ii + 1;\n    let hmonth = iln - 12 * ii;\n    let hDate = modifiedJulianDate - dateCorrection[i - 1] + 1;\n\n    if ((hDate + '').length > 2) {\n      hDate = tempDay;\n      hmonth = im;\n      hYear = iy;\n    }\n\n    return {\n      year: hYear,\n      month: hmonth,\n      date: hDate\n    };\n  }\n\n  HijriParser.getHijriDate = getHijriDate;\n  /**\n   *\n   * @param {number} year ?\n   * @param {number} month ?\n   * @param {number} day ?\n   * @returns {Date} ?\n   */\n\n  function toGregorian(year, month, day) {\n    const iy = year;\n    const im = month;\n    const id = day;\n    const ii = iy - 1;\n    const iln = ii * 12 + 1 + (im - 1);\n    const i = iln - 16260;\n    const mcjdn = id + dateCorrection[i - 1] - 1;\n    const julianDate = mcjdn + 2400000;\n    const z = Math.floor(julianDate + 0.5);\n    let a = Math.floor((z - 1867216.25) / 36524.25);\n    a = z + 1 + a - Math.floor(a / 4);\n    const b = a + 1524;\n    const c = Math.floor((b - 122.1) / 365.25);\n    const d = Math.floor(365.25 * c);\n    const e = Math.floor((b - d) / 30.6001);\n    const gDay = b - d - Math.floor(e * 30.6001);\n    let gMonth = e - (e > 13.5 ? 13 : 1);\n    const gYear = c - (gMonth > 2.5 ? 4716 : 4715);\n    /* istanbul ignore next */\n\n    if (gYear <= 0) {\n      gMonth--;\n    } // No year zero\n\n\n    return new Date(gYear + '/' + gMonth + '/' + gDay);\n  }\n\n  HijriParser.toGregorian = toGregorian;\n})(HijriParser || (HijriParser = {}));\n\nconst abbreviateRegexGlobal = /\\/MMMMM|MMMM|MMM|a|LLLL|LLL|EEEEE|EEEE|E|K|cccc|ccc|WW|W|G+|z+/gi;\nconst standalone = 'stand-alone';\nconst weekdayKey = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\nconst timeSetter = {\n  m: 'getMinutes',\n  h: 'getHours',\n  H: 'getHours',\n  s: 'getSeconds',\n  d: 'getDate',\n  f: 'getMilliseconds'\n};\nconst datePartMatcher = {\n  'M': 'month',\n  'd': 'day',\n  'E': 'weekday',\n  'c': 'weekday',\n  'y': 'year',\n  'm': 'minute',\n  'h': 'hour',\n  'H': 'hour',\n  's': 'second',\n  'L': 'month',\n  'a': 'designator',\n  'z': 'timeZone',\n  'Z': 'timeZone',\n  'G': 'era',\n  'f': 'milliseconds'\n};\nconst timeSeparator = 'timeSeparator';\n/* tslint:disable no-any */\n\n/**\n * Date Format is a framework provides support for date formatting.\n *\n * @private\n */\n\nclass DateFormat {\n  /**\n   * Returns the formatter function for given skeleton.\n   *\n   * @param {string} culture -  Specifies the culture name to be which formatting.\n   * @param {DateFormatOptions} option - Specific the format in which date  will format.\n   * @param {Object} cldr - Specifies the global cldr data collection.\n   * @returns {Function} ?\n   */\n  static dateFormat(culture, option, cldr) {\n    const dependable = IntlBase.getDependables(cldr, culture, option.calendar);\n    const numObject = getValue('parserObject.numbers', dependable);\n    const dateObject = dependable.dateObject;\n    const formatOptions = {\n      isIslamic: IntlBase.islamicRegex.test(option.calendar)\n    };\n\n    if (isBlazor() && option.isServerRendered) {\n      option = IntlBase.compareBlazorDateFormats(option, culture);\n    }\n\n    let resPattern = option.format || IntlBase.getResultantPattern(option.skeleton, dependable.dateObject, option.type, false, isBlazor() ? culture : '');\n    formatOptions.dateSeperator = isBlazor() ? getValue('dateSeperator', dateObject) : IntlBase.getDateSeparator(dependable.dateObject);\n\n    if (isUndefined(resPattern)) {\n      throwError('Format options or type given must be invalid');\n    } else {\n      resPattern = IntlBase.ConvertDateToWeekFormat(resPattern);\n\n      if (isBlazor()) {\n        resPattern = resPattern.replace(/tt/, 'a');\n      }\n\n      formatOptions.pattern = resPattern;\n      formatOptions.numMapper = isBlazor() ? extend({}, numObject) : ParserBase.getNumberMapper(dependable.parserObject, ParserBase.getNumberingSystem(cldr));\n      const patternMatch = resPattern.match(abbreviateRegexGlobal) || [];\n\n      for (const str of patternMatch) {\n        const len = str.length;\n        let char = str[0];\n\n        if (char === 'K') {\n          char = 'h';\n        }\n\n        switch (char) {\n          case 'E':\n          case 'c':\n            if (isBlazor()) {\n              // eslint-disable-next-line\n              formatOptions.weekday = getValue('days.' + IntlBase.monthIndex[len], dateObject);\n            } else {\n              // eslint-disable-next-line\n              formatOptions.weekday = dependable.dateObject[IntlBase.days][standalone][IntlBase.monthIndex[len]];\n            }\n\n            break;\n\n          case 'M':\n          case 'L':\n            if (isBlazor()) {\n              // eslint-disable-next-line\n              formatOptions.month = getValue('months.' + IntlBase.monthIndex[len], dateObject);\n            } else {\n              // eslint-disable-next-line\n              formatOptions.month = dependable.dateObject[IntlBase.month][standalone][IntlBase.monthIndex[len]];\n            }\n\n            break;\n\n          case 'a':\n            formatOptions.designator = isBlazor() ? getValue('dayPeriods', dateObject) : getValue('dayPeriods.format.wide', dateObject);\n            break;\n\n          case 'G':\n            // eslint-disable-next-line\n            const eText = len <= 3 ? 'eraAbbr' : len === 4 ? 'eraNames' : 'eraNarrow';\n            formatOptions.era = isBlazor() ? getValue('eras', dateObject) : getValue('eras.' + eText, dependable.dateObject);\n            break;\n\n          case 'z':\n            formatOptions.timeZone = getValue('dates.timeZoneNames', dependable.parserObject);\n            break;\n        }\n      }\n    }\n\n    return value => {\n      if (isNaN(value.getDate())) {\n        return null;\n      }\n\n      return this.intDateFormatter(value, formatOptions);\n    };\n  }\n  /**\n   * Returns formatted date string based on options passed.\n   *\n   * @param {Date} value ?\n   * @param {FormatOptions} options ?\n   * @returns {string} ?\n   */\n\n\n  static intDateFormatter(value, options) {\n    const pattern = options.pattern;\n    let ret = '';\n    const matches = pattern.match(IntlBase.dateParseRegex);\n    const dObject = this.getCurrentDateValue(value, options.isIslamic);\n\n    for (const match of matches) {\n      const length = match.length;\n      let char = match[0];\n\n      if (char === 'K') {\n        char = 'h';\n      }\n\n      let curval;\n      let curvalstr = '';\n      let isNumber;\n      let processNumber;\n      let curstr = '';\n\n      switch (char) {\n        case 'M':\n        case 'L':\n          curval = dObject.month;\n\n          if (length > 2) {\n            // eslint-disable-next-line\n            ret += options.month[curval];\n          } else {\n            isNumber = true;\n          }\n\n          break;\n\n        case 'E':\n        case 'c':\n          // eslint-disable-next-line\n          ret += options.weekday[weekdayKey[value.getDay()]];\n          break;\n\n        case 'H':\n        case 'h':\n        case 'm':\n        case 's':\n        case 'd':\n        case 'f':\n          isNumber = true;\n\n          if (char === 'd') {\n            curval = dObject.date;\n          } else if (char === 'f') {\n            isNumber = false;\n            processNumber = true; // eslint-disable-next-line\n\n            curvalstr = value[timeSetter[char]]().toString();\n            curvalstr = curvalstr.substring(0, length);\n            const curlength = curvalstr.length;\n\n            if (length !== curlength) {\n              if (length > 3) {\n                continue;\n              }\n\n              for (let i = 0; i < length - curlength; i++) {\n                curvalstr = '0' + curvalstr.toString();\n              }\n            }\n\n            curstr += curvalstr;\n          } else {\n            // eslint-disable-next-line\n            curval = value[timeSetter[char]]();\n          }\n\n          if (char === 'h') {\n            curval = curval % 12 || 12;\n          }\n\n          break;\n\n        case 'y':\n          processNumber = true;\n          curstr += dObject.year;\n\n          if (length === 2) {\n            curstr = curstr.substr(curstr.length - 2);\n          }\n\n          break;\n\n        case 'a':\n          // eslint-disable-next-line\n          let desig = value.getHours() < 12 ? 'am' : 'pm'; // eslint-disable-next-line\n\n          ret += options.designator[desig];\n          break;\n\n        case 'G':\n          // eslint-disable-next-line\n          let dec = value.getFullYear() < 0 ? 0 : 1; // eslint-disable-next-line\n\n          let retu = options.era[dec];\n\n          if (isNullOrUndefined(retu)) {\n            // eslint-disable-next-line\n            retu = options.era[dec ? 0 : 1];\n          }\n\n          ret += retu || '';\n          break;\n\n        case '\\'':\n          ret += match === '\\'\\'' ? '\\'' : match.replace(/'/g, '');\n          break;\n\n        case 'z':\n          // eslint-disable-next-line\n          let timezone = value.getTimezoneOffset(); // eslint-disable-next-line\n\n          let pattern = length < 4 ? '+H;-H' : options.timeZone.hourFormat;\n          pattern = pattern.replace(/:/g, options.numMapper.timeSeparator);\n\n          if (timezone === 0) {\n            ret += options.timeZone.gmtZeroFormat;\n          } else {\n            processNumber = true;\n            curstr = this.getTimeZoneValue(timezone, pattern);\n          }\n\n          curstr = options.timeZone.gmtFormat.replace(/\\{0\\}/, curstr);\n          break;\n\n        case ':':\n          // eslint-disable-next-line\n          ret += options.numMapper.numberSymbols[timeSeparator];\n          break;\n\n        case '/':\n          ret += options.dateSeperator;\n          break;\n\n        case 'W':\n          isNumber = true;\n          curval = IntlBase.getWeekOfYear(value);\n          break;\n\n        default:\n          ret += match;\n      }\n\n      if (isNumber) {\n        processNumber = true;\n        curstr = this.checkTwodigitNumber(curval, length);\n      }\n\n      if (processNumber) {\n        ret += ParserBase.convertValueParts(curstr, IntlBase.latnParseRegex, options.numMapper.mapper);\n      }\n    }\n\n    return ret;\n  }\n\n  static getCurrentDateValue(value, isIslamic) {\n    if (isIslamic) {\n      return HijriParser.getHijriDate(value);\n    }\n\n    return {\n      year: value.getFullYear(),\n      month: value.getMonth() + 1,\n      date: value.getDate()\n    };\n  }\n  /**\n   * Returns two digit numbers for given value and length\n   *\n   * @param {number} val ?\n   * @param {number} len ?\n   * @returns {string} ?\n   */\n\n\n  static checkTwodigitNumber(val, len) {\n    const ret = val + '';\n\n    if (len === 2 && ret.length !== 2) {\n      return '0' + ret;\n    }\n\n    return ret;\n  }\n  /**\n   * Returns the value of the Time Zone.\n   *\n   * @param {number} tVal ?\n   * @param {string} pattern ?\n   * @returns {string} ?\n   * @private\n   */\n\n\n  static getTimeZoneValue(tVal, pattern) {\n    const splt = pattern.split(';');\n    let curPattern = splt[tVal > 0 ? 1 : 0];\n    const no = Math.abs(tVal);\n    return curPattern = curPattern.replace(/HH?|mm/g, str => {\n      const len = str.length;\n      const ishour = str.indexOf('H') !== -1;\n      return this.checkTwodigitNumber(Math.floor(ishour ? no / 60 : no % 60), len);\n    });\n  }\n\n}\n\nconst errorText = {\n  'ms': 'minimumSignificantDigits',\n  'ls': 'maximumSignificantDigits',\n  'mf': 'minimumFractionDigits',\n  'lf': 'maximumFractionDigits'\n};\nconst percentSign = 'percentSign';\nconst minusSign = 'minusSign';\nconst mapper$1 = ['infinity', 'nan', 'group', 'decimal', 'exponential'];\n/**\n * Module for number formatting.\n *\n * @private\n */\n\nclass NumberFormat {\n  /**\n   * Returns the formatter function for given skeleton.\n   *\n   * @param {string} culture -  Specifies the culture name to be which formatting.\n   * @param {NumberFormatOptions} option - Specific the format in which number  will format.\n   * @param {Object} cldr - Specifies the global cldr data collection.\n   * @returns {Function} ?\n   */\n  static numberFormatter(culture, option, cldr) {\n    const fOptions = extend({}, option);\n    let cOptions = {};\n    const dOptions = {};\n    let symbolPattern;\n    const dependable = IntlBase.getDependables(cldr, culture, '', true);\n    const numObject = dependable.numericObject;\n    dOptions.numberMapper = isBlazor() ? extend({}, numObject) : ParserBase.getNumberMapper(dependable.parserObject, ParserBase.getNumberingSystem(cldr), true);\n    dOptions.currencySymbol = isBlazor() ? getValue('currencySymbol', numObject) : IntlBase.getCurrencySymbol(dependable.numericObject, fOptions.currency || defaultCurrencyCode, option.altSymbol);\n    /* eslint-disable  @typescript-eslint/no-explicit-any */\n\n    dOptions.percentSymbol = isBlazor() ? getValue('numberSymbols.percentSign', numObject) : dOptions.numberMapper.numberSymbols[percentSign];\n    dOptions.minusSymbol = isBlazor() ? getValue('numberSymbols.minusSign', numObject) : dOptions.numberMapper.numberSymbols[minusSign];\n    const symbols = dOptions.numberMapper.numberSymbols;\n\n    if (option.format && !IntlBase.formatRegex.test(option.format)) {\n      cOptions = IntlBase.customFormat(option.format, dOptions, dependable.numericObject);\n    } else {\n      extend(fOptions, IntlBase.getProperNumericSkeleton(option.format || 'N'));\n      fOptions.isCurrency = fOptions.type === 'currency';\n      fOptions.isPercent = fOptions.type === 'percent';\n\n      if (!isBlazor()) {\n        symbolPattern = IntlBase.getSymbolPattern(fOptions.type, dOptions.numberMapper.numberSystem, dependable.numericObject, fOptions.isAccount);\n      }\n\n      fOptions.groupOne = this.checkValueRange(fOptions.maximumSignificantDigits, fOptions.minimumSignificantDigits, true);\n      this.checkValueRange(fOptions.maximumFractionDigits, fOptions.minimumFractionDigits, false, true);\n\n      if (!isUndefined(fOptions.fractionDigits)) {\n        fOptions.minimumFractionDigits = fOptions.maximumFractionDigits = fOptions.fractionDigits;\n      }\n\n      if (isUndefined(fOptions.useGrouping)) {\n        fOptions.useGrouping = true;\n      }\n\n      if (fOptions.isCurrency && !isBlazor()) {\n        symbolPattern = symbolPattern.replace(/\\u00A4/g, IntlBase.defaultCurrency);\n      }\n\n      if (!isBlazor()) {\n        const split = symbolPattern.split(';');\n        cOptions.nData = IntlBase.getFormatData(split[1] || '-' + split[0], true, dOptions.currencySymbol);\n        cOptions.pData = IntlBase.getFormatData(split[0], false, dOptions.currencySymbol);\n\n        if (fOptions.useGrouping) {\n          fOptions.groupSeparator = symbols[mapper$1[2]];\n          fOptions.groupData = this.getGroupingDetails(split[0]);\n        }\n      } else {\n        cOptions.nData = extend({}, {}, getValue(fOptions.type + 'nData', numObject));\n        cOptions.pData = extend({}, {}, getValue(fOptions.type + 'pData', numObject));\n\n        if (fOptions.type === 'currency' && option.currency) {\n          IntlBase.replaceBlazorCurrency([cOptions.pData, cOptions.nData], dOptions.currencySymbol, option.currency);\n        }\n      }\n\n      const minFrac = isUndefined(fOptions.minimumFractionDigits);\n\n      if (minFrac) {\n        fOptions.minimumFractionDigits = cOptions.nData.minimumFraction;\n      }\n\n      if (isUndefined(fOptions.maximumFractionDigits)) {\n        const mval = cOptions.nData.maximumFraction;\n        fOptions.maximumFractionDigits = isUndefined(mval) && fOptions.isPercent ? 0 : mval;\n      }\n\n      const mfrac = fOptions.minimumFractionDigits;\n      const lfrac = fOptions.maximumFractionDigits;\n\n      if (!isUndefined(mfrac) && !isUndefined(lfrac)) {\n        if (mfrac > lfrac) {\n          fOptions.maximumFractionDigits = mfrac;\n        }\n      }\n    }\n\n    extend(cOptions.nData, fOptions);\n    extend(cOptions.pData, fOptions);\n    return value => {\n      if (isNaN(value)) {\n        return symbols[mapper$1[1]];\n      } else if (!isFinite(value)) {\n        return symbols[mapper$1[0]];\n      }\n\n      return this.intNumberFormatter(value, cOptions, dOptions);\n    };\n  }\n  /**\n   * Returns grouping details for the pattern provided\n   *\n   * @param {string} pattern ?\n   * @returns {GroupDetails} ?\n   */\n\n\n  static getGroupingDetails(pattern) {\n    const ret = {};\n    const match = pattern.match(IntlBase.negativeDataRegex);\n\n    if (match && match[4]) {\n      const pattern = match[4];\n      const p = pattern.lastIndexOf(',');\n\n      if (p !== -1) {\n        const temp = pattern.split('.')[0];\n        ret.primary = temp.length - p - 1;\n        const s = pattern.lastIndexOf(',', p - 1);\n\n        if (s !== -1) {\n          ret.secondary = p - 1 - s;\n        }\n      }\n    }\n\n    return ret;\n  }\n  /**\n   * Returns if the provided integer range is valid.\n   *\n   * @param {number} val1 ?\n   * @param {number} val2 ?\n   * @param {boolean} checkbothExist ?\n   * @param {boolean} isFraction ?\n   * @returns {boolean} ?\n   */\n\n\n  static checkValueRange(val1, val2, checkbothExist, isFraction) {\n    const decide = isFraction ? 'f' : 's';\n    let dint = 0;\n    const str1 = errorText['l' + decide]; // eslint-disable-next-line\n\n    let str2 = errorText['m' + decide];\n\n    if (!isUndefined(val1)) {\n      this.checkRange(val1, str1, isFraction);\n      dint++;\n    }\n\n    if (!isUndefined(val2)) {\n      this.checkRange(val2, str2, isFraction);\n      dint++;\n    }\n\n    if (dint === 2) {\n      if (val1 < val2) {\n        throwError(str2 + 'specified must be less than the' + str1);\n      } else {\n        return true;\n      }\n    } else if (checkbothExist && dint === 1) {\n      throwError('Both' + str2 + 'and' + str2 + 'must be present');\n    }\n\n    return false;\n  }\n  /**\n   * Check if the provided fraction range is valid\n   *\n   * @param {number} val ?\n   * @param {string} text ?\n   * @param {boolean} isFraction ?\n   * @returns {void} ?\n   */\n\n\n  static checkRange(val, text, isFraction) {\n    const range = isFraction ? [0, 20] : [1, 21];\n\n    if (val < range[0] || val > range[1]) {\n      throwError(text + 'value must be within the range' + range[0] + 'to' + range[1]);\n    }\n  }\n  /**\n   * Returns formatted numeric string for provided formatting options\n   *\n   * @param {number} value ?\n   * @param {base.GenericFormatOptions} fOptions ?\n   * @param {CommonOptions} dOptions ?\n   * @returns {string} ?\n   */\n\n\n  static intNumberFormatter(value, fOptions, dOptions) {\n    let curData;\n\n    if (isUndefined(fOptions.nData.type)) {\n      return undefined;\n    } else {\n      if (value < 0) {\n        value = value * -1;\n        curData = fOptions.nData;\n      } else if (value === 0) {\n        curData = fOptions.zeroData || fOptions.pData;\n      } else {\n        curData = fOptions.pData;\n      }\n\n      let fValue = '';\n\n      if (curData.isPercent) {\n        value = value * 100;\n      }\n\n      if (curData.groupOne) {\n        fValue = this.processSignificantDigits(value, curData.minimumSignificantDigits, curData.maximumSignificantDigits);\n      } else {\n        fValue = this.processFraction(value, curData.minimumFractionDigits, curData.maximumFractionDigits);\n\n        if (curData.minimumIntegerDigits) {\n          fValue = this.processMinimumIntegers(fValue, curData.minimumIntegerDigits);\n        }\n      }\n\n      if (curData.type === 'scientific') {\n        fValue = value.toExponential(curData.maximumFractionDigits);\n        fValue = fValue.replace('e', dOptions.numberMapper.numberSymbols[mapper$1[4]]);\n      }\n\n      fValue = fValue.replace('.', dOptions.numberMapper.numberSymbols[mapper$1[3]]);\n\n      if (curData.useGrouping) {\n        /* eslint-disable  @typescript-eslint/no-explicit-any */\n        fValue = this.groupNumbers(fValue, curData.groupData.primary, curData.groupSeparator || ',', dOptions.numberMapper.numberSymbols[mapper$1[3]] || '.', curData.groupData.secondary);\n      }\n\n      fValue = ParserBase.convertValueParts(fValue, IntlBase.latnParseRegex, dOptions.numberMapper.mapper);\n\n      if (curData.nlead === 'N/A') {\n        return curData.nlead;\n      } else {\n        return curData.nlead + fValue + curData.nend;\n      }\n    }\n  }\n  /**\n   * Returns significant digits processed numeric string\n   *\n   * @param {number} value ?\n   * @param {number} min ?\n   * @param {number} max ?\n   * @returns {string} ?\n   */\n\n\n  static processSignificantDigits(value, min, max) {\n    let temp = value + '';\n    let tn;\n    const length = temp.length;\n\n    if (length < min) {\n      return value.toPrecision(min);\n    } else {\n      temp = value.toPrecision(max);\n      tn = +temp;\n      return tn + '';\n    }\n  }\n  /**\n   * Returns grouped numeric string\n   *\n   * @param {string} val ?\n   * @param {number} level1 ?\n   * @param {string} sep ?\n   * @param {string} decimalSymbol ?\n   * @param {number} level2 ?\n   * @returns {string} ?\n   */\n\n\n  static groupNumbers(val, level1, sep, decimalSymbol, level2) {\n    let flag = !isNullOrUndefined(level2) && level2 !== 0;\n    const split = val.split(decimalSymbol);\n    const prefix = split[0];\n    let length = prefix.length;\n    let str = '';\n\n    while (length > level1) {\n      str = prefix.slice(length - level1, length) + (str.length ? sep + str : '');\n      length -= level1;\n\n      if (flag) {\n        level1 = level2;\n        flag = false;\n      }\n    }\n\n    split[0] = prefix.slice(0, length) + (str.length ? sep : '') + str;\n    return split.join(decimalSymbol);\n  }\n  /**\n   * Returns fraction processed numeric string\n   *\n   * @param {number} value ?\n   * @param {number} min ?\n   * @param {number} max ?\n   * @returns {string} ?\n   */\n\n\n  static processFraction(value, min, max) {\n    const temp = (value + '').split('.')[1];\n    const length = temp ? temp.length : 0;\n\n    if (min && length < min) {\n      let ret = '';\n\n      if (length === 0) {\n        ret = value.toFixed(min);\n      } else {\n        ret += value;\n\n        for (let j = 0; j < min - length; j++) {\n          ret += '0';\n        }\n\n        return ret;\n      }\n\n      return value.toFixed(min);\n    } else if (!isNullOrUndefined(max) && (length > max || max === 0)) {\n      return value.toFixed(max);\n    }\n\n    return value + '';\n  }\n  /**\n   * Returns integer processed numeric string\n   *\n   * @param {string} value ?\n   * @param {number} min ?\n   * @returns {string} ?\n   */\n\n\n  static processMinimumIntegers(value, min) {\n    const temp = value.split('.');\n    let lead = temp[0];\n    const len = lead.length;\n\n    if (len < min) {\n      for (let i = 0; i < min - len; i++) {\n        lead = '0' + lead;\n      }\n\n      temp[0] = lead;\n    }\n\n    return temp.join('.');\n  }\n\n}\n\nconst standalone$1 = 'stand-alone';\nconst latnRegex = /^[0-9]*$/;\nconst timeSetter$1 = {\n  minute: 'setMinutes',\n  hour: 'setHours',\n  second: 'setSeconds',\n  day: 'setDate',\n  month: 'setMonth',\n  milliseconds: 'setMilliseconds'\n};\nconst month = 'months';\n/* tslint:disable no-any */\n\n/**\n * Date Parser.\n *\n * @private\n */\n\nclass DateParser {\n  /**\n   * Returns the parser function for given skeleton.\n   *\n   * @param {string} culture -  Specifies the culture name to be which formatting.\n   * @param {DateFormatOptions} option - Specific the format in which string date  will be parsed.\n   * @param {Object} cldr - Specifies the global cldr data collection.\n   * @returns {Function} ?\n   */\n  static dateParser(culture, option, cldr) {\n    const dependable = IntlBase.getDependables(cldr, culture, option.calendar);\n    const numOptions = ParserBase.getCurrentNumericOptions(dependable.parserObject, ParserBase.getNumberingSystem(cldr), false, isBlazor());\n    let parseOptions = {};\n\n    if (isBlazor() && option.isServerRendered) {\n      option = IntlBase.compareBlazorDateFormats(option, culture);\n    }\n\n    let resPattern = option.format || IntlBase.getResultantPattern(option.skeleton, dependable.dateObject, option.type, false, isBlazor() ? culture : '');\n    let regexString = '';\n    let hourOnly;\n\n    if (isUndefined(resPattern)) {\n      throwError('Format options or type given must be invalid');\n    } else {\n      resPattern = IntlBase.ConvertDateToWeekFormat(resPattern);\n      parseOptions = {\n        isIslamic: IntlBase.islamicRegex.test(option.calendar),\n        pattern: resPattern,\n        evalposition: {},\n        culture: culture\n      };\n      const patternMatch = resPattern.match(IntlBase.dateParseRegex) || [];\n      const length = patternMatch.length;\n      let gmtCorrection = 0;\n      let zCorrectTemp = 0;\n      let isgmtTraversed = false;\n      const nRegx = numOptions.numericRegex; // eslint-disable-next-line\n\n      let numMapper = isBlazor() ? dependable.parserObject.numbers : ParserBase.getNumberMapper(dependable.parserObject, ParserBase.getNumberingSystem(cldr));\n\n      for (let i = 0; i < length; i++) {\n        const str = patternMatch[i];\n        const len = str.length;\n        const char = str[0] === 'K' ? 'h' : str[0];\n        let isNumber;\n        let canUpdate; // eslint-disable-next-line\n\n        let charKey = datePartMatcher[char];\n        const optional = len === 2 ? '' : '?';\n\n        if (isgmtTraversed) {\n          gmtCorrection = zCorrectTemp;\n          isgmtTraversed = false;\n        }\n\n        switch (char) {\n          case 'E':\n          case 'c':\n            // eslint-disable-next-line\n            let weekData;\n\n            if (isBlazor()) {\n              // eslint-disable-next-line\n              weekData = getValue('days.' + IntlBase.monthIndex[len], dependable.dateObject);\n            } else {\n              // eslint-disable-next-line\n              weekData = dependable.dateObject[IntlBase.days][standalone$1][IntlBase.monthIndex[len]];\n            } // eslint-disable-next-line\n\n\n            let weekObject = ParserBase.reverseObject(weekData); // tslint:enable\n\n            regexString += '(' + Object.keys(weekObject).join('|') + ')';\n            break;\n\n          case 'M':\n          case 'L':\n          case 'd':\n          case 'm':\n          case 's':\n          case 'h':\n          case 'H':\n          case 'f':\n            canUpdate = true;\n\n            if ((char === 'M' || char === 'L') && len > 2) {\n              let monthData;\n\n              if (isBlazor()) {\n                // eslint-disable-next-line\n                monthData = getValue('months.' + IntlBase.monthIndex[len], dependable.dateObject);\n              } else {\n                // eslint-disable-next-line\n                monthData = dependable.dateObject[month][standalone$1][IntlBase.monthIndex[len]];\n              } // eslint-disable-next-line\n\n\n              parseOptions[charKey] = ParserBase.reverseObject(monthData); // eslint-disable-next-line\n\n              regexString += '(' + Object.keys(parseOptions[charKey]).join('|') + ')';\n            } else if (char === 'f') {\n              if (len > 3) {\n                continue;\n              }\n\n              isNumber = true;\n              regexString += '(' + nRegx + nRegx + '?' + nRegx + '?' + ')';\n            } else {\n              isNumber = true;\n              regexString += '(' + nRegx + nRegx + optional + ')';\n            }\n\n            if (char === 'h') {\n              parseOptions.hour12 = true;\n            }\n\n            break;\n\n          case 'W':\n            // eslint-disable-next-line\n            let opt = len === 1 ? '?' : '';\n            regexString += '(' + nRegx + opt + nRegx + ')';\n            break;\n\n          case 'y':\n            canUpdate = isNumber = true;\n\n            if (len === 2) {\n              regexString += '(' + nRegx + nRegx + ')';\n            } else {\n              regexString += '(' + nRegx + '{' + len + ',})';\n            }\n\n            break;\n\n          case 'a':\n            canUpdate = true; // eslint-disable-next-line\n\n            let periodValur = isBlazor() ? getValue('dayPeriods', dependable.dateObject) : getValue('dayPeriods.format.wide', dependable.dateObject); // eslint-disable-next-line\n\n            parseOptions[charKey] = ParserBase.reverseObject(periodValur); // eslint-disable-next-line\n\n            regexString += '(' + Object.keys(parseOptions[charKey]).join('|') + ')';\n            break;\n\n          case 'G':\n            canUpdate = true; // eslint-disable-next-line\n\n            let eText = len <= 3 ? 'eraAbbr' : len === 4 ? 'eraNames' : 'eraNarrow'; // eslint-disable-next-line\n\n            parseOptions[charKey] = ParserBase.reverseObject(isBlazor() ? getValue('eras', dependable.dateObject) : getValue('eras.' + eText, dependable.dateObject)); // eslint-disable-next-line\n\n            regexString += '(' + Object.keys(parseOptions[charKey]).join('|') + '?)';\n            break;\n\n          case 'z':\n            // eslint-disable-next-line\n            let tval = new Date().getTimezoneOffset();\n            canUpdate = tval !== 0; // eslint-disable-next-line\n\n            parseOptions[charKey] = getValue('dates.timeZoneNames', dependable.parserObject); // eslint-disable-next-line\n\n            let tzone = parseOptions[charKey];\n            hourOnly = len < 4; // eslint-disable-next-line\n\n            let hpattern = hourOnly ? '+H;-H' : tzone.hourFormat;\n            hpattern = hpattern.replace(/:/g, numMapper.timeSeparator);\n            regexString += '(' + this.parseTimeZoneRegx(hpattern, tzone, nRegx) + ')?';\n            isgmtTraversed = true;\n            zCorrectTemp = hourOnly ? 6 : 12;\n            break;\n\n          case '\\'':\n            // eslint-disable-next-line\n            let iString = str.replace(/'/g, '');\n            regexString += '(' + iString + ')?';\n            break;\n\n          default:\n            regexString += '([\\\\D])';\n            break;\n        }\n\n        if (canUpdate) {\n          parseOptions.evalposition[charKey] = {\n            isNumber: isNumber,\n            pos: i + 1 + gmtCorrection,\n            hourOnly: hourOnly\n          };\n        }\n\n        if (i === length - 1 && !isNullOrUndefined(regexString)) {\n          parseOptions.parserRegex = new RegExp('^' + regexString + '$', 'i');\n        }\n      }\n    }\n\n    return value => {\n      const parsedDateParts = this.internalDateParse(value, parseOptions, numOptions);\n\n      if (isNullOrUndefined(parsedDateParts) || !Object.keys(parsedDateParts).length) {\n        return null;\n      }\n\n      if (parseOptions.isIslamic) {\n        let dobj = {};\n        let tYear = parsedDateParts.year;\n        const tDate = parsedDateParts.day;\n        const tMonth = parsedDateParts.month;\n        const ystrig = tYear ? tYear + '' : '';\n        const is2DigitYear = ystrig.length === 2;\n\n        if (!tYear || !tMonth || !tDate || is2DigitYear) {\n          dobj = HijriParser.getHijriDate(new Date());\n        }\n\n        if (is2DigitYear) {\n          tYear = parseInt((dobj.year + '').slice(0, 2) + ystrig, 10);\n        } // tslint:disable-next-line\n\n\n        const dateObject = HijriParser.toGregorian(tYear || dobj.year, tMonth || dobj.month, tDate || dobj.date);\n        parsedDateParts.year = dateObject.getFullYear();\n        parsedDateParts.month = dateObject.getMonth() + 1;\n        parsedDateParts.day = dateObject.getDate();\n      }\n\n      return this.getDateObject(parsedDateParts);\n    };\n  }\n  /* tslint:disable */\n\n  /**\n   * Returns date object for provided date options\n   *\n   * @param {DateParts} options ?\n   * @param {Date} value ?\n   * @returns {Date} ?\n   */\n\n\n  static getDateObject(options, value) {\n    const res = value || new Date();\n    res.setMilliseconds(0);\n    const tKeys = ['hour', 'minute', 'second', 'milliseconds', 'month', 'day'];\n    let y = options.year;\n    const desig = options.designator;\n    const tzone = options.timeZone;\n\n    if (!isUndefined(y)) {\n      const len = (y + '').length;\n\n      if (len <= 2) {\n        const century = Math.floor(res.getFullYear() / 100) * 100;\n        y += century;\n      }\n\n      res.setFullYear(y);\n    }\n\n    for (const key of tKeys) {\n      // eslint-disable-next-line\n      let tValue = options[key];\n\n      if (isUndefined(tValue) && key === 'day') {\n        res.setDate(1);\n      }\n\n      if (!isUndefined(tValue)) {\n        if (key === 'month') {\n          tValue -= 1;\n\n          if (tValue < 0 || tValue > 11) {\n            return new Date('invalid');\n          }\n\n          const pDate = res.getDate();\n          res.setDate(1); // eslint-disable-next-line\n\n          res[timeSetter$1[key]](tValue);\n          const lDate = new Date(res.getFullYear(), tValue + 1, 0).getDate();\n          res.setDate(pDate < lDate ? pDate : lDate);\n        } else {\n          if (key === 'day') {\n            const lastDay = new Date(res.getFullYear(), res.getMonth() + 1, 0).getDate();\n\n            if (tValue < 1 || tValue > lastDay) {\n              return null;\n            }\n          } // eslint-disable-next-line\n\n\n          res[timeSetter$1[key]](tValue);\n        }\n      }\n    }\n\n    if (!isUndefined(desig)) {\n      const hour = res.getHours();\n\n      if (desig === 'pm') {\n        res.setHours(hour + (hour === 12 ? 0 : 12));\n      } else if (hour === 12) {\n        res.setHours(0);\n      }\n    }\n\n    if (!isUndefined(tzone)) {\n      const tzValue = tzone - res.getTimezoneOffset();\n\n      if (tzValue !== 0) {\n        res.setMinutes(res.getMinutes() + tzValue);\n      }\n    }\n\n    return res;\n  }\n  /**\n   * Returns date parsing options for provided value along with parse and numeric options\n   *\n   * @param {string} value ?\n   * @param {ParseOptions} parseOptions ?\n   * @param {NumericOptions} num ?\n   * @returns {DateParts} ?\n   */\n\n\n  static internalDateParse(value, parseOptions, num) {\n    const matches = value.match(parseOptions.parserRegex);\n    const retOptions = {\n      'hour': 0,\n      'minute': 0,\n      'second': 0\n    };\n\n    if (isNullOrUndefined(matches)) {\n      return null;\n    } else {\n      const props = Object.keys(parseOptions.evalposition);\n\n      for (const prop of props) {\n        const curObject = parseOptions.evalposition[prop];\n        let matchString = matches[curObject.pos];\n\n        if (curObject.isNumber) {\n          // eslint-disable-next-line\n          retOptions[prop] = this.internalNumberParser(matchString, num);\n        } else {\n          if (prop === 'timeZone' && !isUndefined(matchString)) {\n            const pos = curObject.pos;\n            let val;\n            const tmatch = matches[pos + 1];\n            const flag = !isUndefined(tmatch);\n\n            if (curObject.hourOnly) {\n              val = this.getZoneValue(flag, tmatch, matches[pos + 4], num) * 60;\n            } else {\n              val = this.getZoneValue(flag, tmatch, matches[pos + 7], num) * 60;\n              val += this.getZoneValue(flag, matches[pos + 4], matches[pos + 10], num);\n            }\n\n            if (!isNullOrUndefined(val)) {\n              retOptions[prop] = val;\n            }\n          } else {\n            // eslint-disable-next-line\n            matchString = prop === 'month' && !parseOptions.isIslamic && (parseOptions.culture === 'en' || parseOptions.culture === 'en-GB' || parseOptions.culture === 'en-US') ? matchString[0].toUpperCase() + matchString.substring(1).toLowerCase() : matchString; // eslint-disable-next-line\n\n            retOptions[prop] = parseOptions[prop][matchString];\n          }\n        }\n      }\n\n      if (parseOptions.hour12) {\n        retOptions.hour12 = true;\n      }\n    }\n\n    return retOptions;\n  }\n  /**\n   * Returns parsed number for provided Numeric string and Numeric Options\n   *\n   * @param {string} value ?\n   * @param {NumericOptions} option ?\n   * @returns {number} ?\n   */\n\n\n  static internalNumberParser(value, option) {\n    value = ParserBase.convertValueParts(value, option.numberParseRegex, option.numericPair);\n\n    if (latnRegex.test(value)) {\n      return +value;\n    }\n\n    return null;\n  }\n  /**\n   * Returns parsed time zone RegExp for provided hour format and time zone\n   *\n   * @param {string} hourFormat ?\n   * @param {base.TimeZoneOptions} tZone ?\n   * @param {string} nRegex ?\n   * @returns {string} ?\n   */\n\n\n  static parseTimeZoneRegx(hourFormat, tZone, nRegex) {\n    const pattern = tZone.gmtFormat;\n    let ret;\n    const cRegex = '(' + nRegex + ')' + '(' + nRegex + ')';\n    let splitStr;\n    ret = hourFormat.replace('+', '\\\\+');\n\n    if (hourFormat.indexOf('HH') !== -1) {\n      ret = ret.replace(/HH|mm/g, '(' + cRegex + ')');\n    } else {\n      ret = ret.replace(/H|m/g, '(' + cRegex + '?)');\n    } // eslint-disable-next-line\n\n\n    splitStr = ret.split(';').map(str => {\n      return pattern.replace('{0}', str);\n    });\n    ret = splitStr.join('|') + '|' + tZone.gmtZeroFormat;\n    return ret;\n  }\n  /**\n   * Returns zone based value.\n   *\n   * @param {boolean} flag ?\n   * @param {string} val1 ?\n   * @param {string} val2 ?\n   * @param {NumericOptions} num ?\n   * @returns {number} ?\n   */\n\n\n  static getZoneValue(flag, val1, val2, num) {\n    const ival = flag ? val1 : val2;\n\n    if (!ival) {\n      return 0;\n    }\n\n    const value = this.internalNumberParser(ival, num);\n\n    if (flag) {\n      return -value;\n    }\n\n    return value;\n  }\n\n}\n\nconst parseRegex = /^([^0-9]*)(([0-9,]*[0-9]+)(\\.[0-9]+)?)([Ee][+-]?[0-9]+)?([^0-9]*)$/;\nconst groupRegex = /,/g;\nconst keys = ['minusSign', 'infinity'];\n/**\n * Module for Number Parser.\n *\n * @private\n */\n\nclass NumberParser {\n  /**\n   * Returns the parser function for given skeleton.\n   *\n   * @param {string} culture -  Specifies the culture name to be which formatting.\n   * @param {NumberFormatOptions} option - Specific the format in which number  will parsed.\n   * @param {Object} cldr - Specifies the global cldr data collection.\n   * @returns {Function} ?\n   */\n  static numberParser(culture, option, cldr) {\n    const dependable = IntlBase.getDependables(cldr, culture, '', true);\n    const parseOptions = {\n      custom: true\n    };\n    let numOptions;\n\n    if (IntlBase.formatRegex.test(option.format) || !option.format) {\n      extend(parseOptions, IntlBase.getProperNumericSkeleton(option.format || 'N'));\n      parseOptions.custom = false;\n\n      if (!parseOptions.fractionDigits) {\n        if (option.maximumFractionDigits) {\n          parseOptions.maximumFractionDigits = option.maximumFractionDigits;\n        }\n      }\n    } else {\n      extend(parseOptions, IntlBase.customFormat(option.format, null, null));\n    }\n\n    const numbers = getValue('numbers', dependable.parserObject); // eslint-disable-next-line\n\n    numOptions = ParserBase.getCurrentNumericOptions(dependable.parserObject, ParserBase.getNumberingSystem(cldr), true, isBlazor());\n    parseOptions.symbolRegex = ParserBase.getSymbolRegex(Object.keys(numOptions.symbolMatch)); // eslint-disable-next-line\n\n    parseOptions.infinity = numOptions.symbolNumberSystem[keys[1]];\n    let symbolpattern;\n\n    if (!isBlazor()) {\n      symbolpattern = IntlBase.getSymbolPattern(parseOptions.type, numOptions.numberSystem, dependable.numericObject, parseOptions.isAccount);\n\n      if (symbolpattern) {\n        symbolpattern = symbolpattern.replace(/\\u00A4/g, IntlBase.defaultCurrency);\n        const split = symbolpattern.split(';');\n        parseOptions.nData = IntlBase.getFormatData(split[1] || '-' + split[0], true, '');\n        parseOptions.pData = IntlBase.getFormatData(split[0], true, '');\n      }\n    } else {\n      parseOptions.nData = extend({}, {}, getValue(parseOptions.type + 'nData', numbers));\n      parseOptions.pData = extend({}, {}, getValue(parseOptions.type + 'pData', numbers));\n\n      if (parseOptions.type === 'currency' && option.currency) {\n        IntlBase.replaceBlazorCurrency([parseOptions.pData, parseOptions.nData], getValue('currencySymbol', numbers), option.currency);\n      }\n    }\n\n    return value => {\n      return this.getParsedNumber(value, parseOptions, numOptions);\n    };\n  }\n  /**\n   * Returns parsed number for the provided formatting options\n   *\n   * @param {string} value ?\n   * @param {NumericParts} options ?\n   * @param {NumericOptions} numOptions ?\n   * @returns {number} ?\n   */\n\n\n  static getParsedNumber(value, options, numOptions) {\n    let isNegative;\n    let isPercent;\n    let tempValue;\n    let lead;\n    let end;\n    let ret;\n\n    if (value.indexOf(options.infinity) !== -1) {\n      return Infinity;\n    } else {\n      value = ParserBase.convertValueParts(value, options.symbolRegex, numOptions.symbolMatch);\n      value = ParserBase.convertValueParts(value, numOptions.numberParseRegex, numOptions.numericPair);\n      value = value.indexOf('-') !== -1 ? value.replace('-.', '-0.') : value;\n\n      if (value.indexOf('.') === 0) {\n        value = '0' + value;\n      }\n\n      const matches = value.match(parseRegex);\n\n      if (isNullOrUndefined(matches)) {\n        return NaN;\n      }\n\n      lead = matches[1];\n      tempValue = matches[2];\n      const exponent = matches[5];\n      end = matches[6];\n      isNegative = options.custom ? lead === options.nData.nlead && end === options.nData.nend : lead.indexOf(options.nData.nlead) !== -1 && end.indexOf(options.nData.nend) !== -1;\n      isPercent = isNegative ? options.nData.isPercent : options.pData.isPercent;\n      tempValue = tempValue.replace(groupRegex, '');\n\n      if (exponent) {\n        tempValue += exponent;\n      }\n\n      ret = +tempValue;\n\n      if (options.type === 'percent' || isPercent) {\n        ret = ret / 100;\n      }\n\n      if (options.custom || options.fractionDigits) {\n        ret = parseFloat(ret.toFixed(options.custom ? isNegative ? options.nData.maximumFractionDigits : options.pData.maximumFractionDigits : options.fractionDigits));\n      }\n\n      if (options.maximumFractionDigits) {\n        ret = this.convertMaxFracDigits(tempValue, options, ret, isNegative);\n      }\n\n      if (isNegative) {\n        ret *= -1;\n      }\n\n      return ret;\n    }\n  }\n\n  static convertMaxFracDigits(value, options, ret, isNegative) {\n    let decimalSplitValue = value.split('.');\n\n    if (decimalSplitValue[1] && decimalSplitValue[1].length > options.maximumFractionDigits) {\n      ret = +ret.toFixed(options.custom ? isNegative ? options.nData.maximumFractionDigits : options.pData.maximumFractionDigits : options.maximumFractionDigits);\n    }\n\n    return ret;\n  }\n\n}\n\nclass Observer {\n  constructor(context) {\n    this.ranArray = [];\n    this.boundedEvents = {};\n\n    if (isNullOrUndefined(context)) {\n      return;\n    }\n\n    this.context = context;\n  }\n  /**\n   * To attach handler for given property in current context.\n   *\n   * @param {string} property - specifies the name of the event.\n   * @param {Function} handler - Specifies the handler function to be called while event notified.\n   * @param {Object} context - Specifies the context binded to the handler.\n   * @param {string} id - specifies the random generated id.\n   * @returns {void}\n   */\n\n\n  on(property, handler, context, id) {\n    if (isNullOrUndefined(handler)) {\n      return;\n    }\n\n    const cntxt = context || this.context;\n\n    if (this.notExist(property)) {\n      this.boundedEvents[property] = [{\n        handler: handler,\n        context: cntxt\n      }];\n      return;\n    }\n\n    if (!isNullOrUndefined(id)) {\n      if (this.ranArray.indexOf(id) === -1) {\n        this.ranArray.push(id);\n        this.boundedEvents[property].push({\n          handler: handler,\n          context: cntxt,\n          id: id\n        });\n      }\n    } else if (!this.isHandlerPresent(this.boundedEvents[property], handler)) {\n      this.boundedEvents[property].push({\n        handler: handler,\n        context: cntxt\n      });\n    }\n  }\n  /**\n   * To remove handlers from a event attached using on() function.\n   *\n   * @param {string} property - specifies the name of the event.\n   * @param {Function} handler - Optional argument specifies the handler function to be called while event notified.\n   * @param {string} id - specifies the random generated id.\n   * @returns {void} ?\n   */\n\n\n  off(property, handler, id) {\n    if (this.notExist(property)) {\n      return;\n    }\n\n    const curObject = getValue(property, this.boundedEvents);\n\n    if (handler) {\n      for (let i = 0; i < curObject.length; i++) {\n        if (id) {\n          if (curObject[i].id === id) {\n            curObject.splice(i, 1);\n            const indexLocation = this.ranArray.indexOf(id);\n\n            if (indexLocation !== -1) {\n              this.ranArray.splice(indexLocation, 1);\n            }\n\n            break;\n          }\n        } else if (handler === curObject[i].handler) {\n          curObject.splice(i, 1);\n          break;\n        }\n      }\n    } else {\n      delete this.boundedEvents[property];\n    }\n  }\n  /**\n   * To notify the handlers in the specified event.\n   *\n   * @param {string} property - Specifies the event to be notify.\n   * @param {Object} argument - Additional parameters to pass while calling the handler.\n   * @param {Function} successHandler - this function will invoke after event successfully triggered\n   * @param {Function} errorHandler - this function will invoke after event if it was failure to call.\n   * @returns {void} ?\n   */\n\n\n  notify(property, argument, successHandler, errorHandler) {\n    if (this.notExist(property)) {\n      if (successHandler) {\n        successHandler.call(this, argument);\n      }\n\n      return;\n    }\n\n    if (argument) {\n      argument.name = property;\n    }\n\n    const blazor = 'Blazor';\n    const curObject = getValue(property, this.boundedEvents).slice(0);\n\n    if (window[blazor]) {\n      return this.blazorCallback(curObject, argument, successHandler, errorHandler, 0);\n    } else {\n      for (const cur of curObject) {\n        cur.handler.call(cur.context, argument);\n      }\n\n      if (successHandler) {\n        successHandler.call(this, argument);\n      }\n    }\n  }\n\n  blazorCallback(objs, argument, successHandler, errorHandler, index) {\n    const isTrigger = index === objs.length - 1;\n\n    if (index < objs.length) {\n      const obj = objs[index];\n      const promise = obj.handler.call(obj.context, argument);\n\n      if (promise && typeof promise.then === 'function') {\n        if (!successHandler) {\n          return promise;\n        }\n\n        promise.then(data => {\n          data = typeof data === 'string' && this.isJson(data) ? JSON.parse(data, this.dateReviver) : data;\n          extend(argument, argument, data, true);\n\n          if (successHandler && isTrigger) {\n            successHandler.call(obj.context, argument);\n          } else {\n            return this.blazorCallback(objs, argument, successHandler, errorHandler, index + 1);\n          }\n        }).catch(data => {\n          if (errorHandler) {\n            errorHandler.call(obj.context, typeof data === 'string' && this.isJson(data) ? JSON.parse(data, this.dateReviver) : data);\n          }\n        });\n      } else if (successHandler && isTrigger) {\n        successHandler.call(obj.context, argument);\n      } else {\n        return this.blazorCallback(objs, argument, successHandler, errorHandler, index + 1);\n      }\n    }\n  } // eslint-disable-next-line\n\n\n  dateReviver(key, value) {\n    const dPattern = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}/;\n\n    if (isBlazor && typeof value === 'string' && value.match(dPattern) !== null) {\n      return new Date(value);\n    }\n\n    return value;\n  }\n\n  isJson(value) {\n    try {\n      JSON.parse(value);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * To destroy handlers in the event\n   *\n   * @returns {void} ?\n   */\n\n\n  destroy() {\n    this.boundedEvents = this.context = undefined;\n  }\n  /**\n   * Returns if the property exists.\n   *\n   * @param {string} prop ?\n   * @returns {boolean} ?\n   */\n\n\n  notExist(prop) {\n    // eslint-disable-next-line\n    return this.boundedEvents.hasOwnProperty(prop) === false || this.boundedEvents[prop].length <= 0;\n  }\n  /**\n   * Returns if the handler is present.\n   *\n   * @param {BoundOptions[]} boundedEvents ?\n   * @param {Function} handler ?\n   * @returns {boolean} ?\n   */\n\n\n  isHandlerPresent(boundedEvents, handler) {\n    for (const cur of boundedEvents) {\n      if (cur.handler === handler) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n/**\n * Specifies the observer used for external change detection.\n */\n\n\nconst onIntlChange = new Observer();\n/**\n * Specifies the default rtl status for EJ2 components.\n */\n\nlet rightToLeft = false;\n/**\n * Specifies the CLDR data loaded for internationalization functionalities.\n *\n * @private\n */\n\nconst cldrData = {};\n/**\n * Specifies the default culture value to be considered.\n *\n * @private\n */\n\nlet defaultCulture = 'en-US';\n/**\n * Specifies default currency code to be considered\n *\n * @private\n */\n\nlet defaultCurrencyCode = 'USD';\nconst mapper = ['numericObject', 'dateObject'];\n/**\n * Internationalization class provides support to parse and format the number and date object to the desired format.\n * ```typescript\n * // To set the culture globally\n * setCulture('en-GB');\n *\n * // To set currency code globally\n * setCurrencyCode('EUR');\n *\n * //Load cldr data\n * loadCldr(gregorainData);\n * loadCldr(timeZoneData);\n * loadCldr(numbersData);\n * loadCldr(numberSystemData);\n *\n * // To use formatter in component side\n * let Intl:Internationalization = new Internationalization();\n *\n * // Date formatting\n * let dateFormatter: Function = Intl.getDateFormat({skeleton:'long',type:'dateTime'});\n * dateFormatter(new Date('11/2/2016'));\n * dateFormatter(new Date('25/2/2030'));\n * Intl.formatDate(new Date(),{skeleton:'E'});\n *\n * //Number formatting\n * let numberFormatter: Function = Intl.getNumberFormat({skeleton:'C5'})\n * numberFormatter(24563334);\n * Intl.formatNumber(123123,{skeleton:'p2'});\n *\n * // Date parser\n * let dateParser: Function = Intl.getDateParser({skeleton:'short',type:'time'});\n * dateParser('10:30 PM');\n * Intl.parseDate('10',{skeleton:'H'});\n * ```\n */\n\nclass Internationalization {\n  constructor(cultureName) {\n    if (cultureName) {\n      this.culture = cultureName;\n    }\n  }\n  /**\n   * Returns the format function for given options.\n   *\n   * @param {DateFormatOptions} options - Specifies the format options in which the format function will return.\n   * @returns {Function} ?\n   */\n\n\n  getDateFormat(options) {\n    return DateFormat.dateFormat(this.getCulture(), options || {\n      type: 'date',\n      skeleton: 'short'\n    }, cldrData);\n  }\n  /**\n   * Returns the format function for given options.\n   *\n   * @param {NumberFormatOptions} options - Specifies the format options in which the format function will return.\n   * @returns {Function} ?\n   */\n\n\n  getNumberFormat(options) {\n    if (options && !options.currency) {\n      options.currency = defaultCurrencyCode;\n    }\n\n    if (isBlazor() && options && !options.format) {\n      options.minimumFractionDigits = 0;\n    }\n\n    return NumberFormat.numberFormatter(this.getCulture(), options || {}, cldrData);\n  }\n  /**\n   * Returns the parser function for given options.\n   *\n   * @param {DateFormatOptions} options - Specifies the format options in which the parser function will return.\n   * @returns {Function} ?\n   */\n\n\n  getDateParser(options) {\n    return DateParser.dateParser(this.getCulture(), options || {\n      skeleton: 'short',\n      type: 'date'\n    }, cldrData);\n  }\n  /**\n   * Returns the parser function for given options.\n   *\n   * @param {NumberFormatOptions} options - Specifies the format options in which the parser function will return.\n   * @returns {Function} ?\n   */\n\n\n  getNumberParser(options) {\n    if (isBlazor() && options && !options.format) {\n      options.minimumFractionDigits = 0;\n    }\n\n    return NumberParser.numberParser(this.getCulture(), options || {\n      format: 'N'\n    }, cldrData);\n  }\n  /**\n   * Returns the formatted string based on format options.\n   *\n   * @param {number} value - Specifies the number to format.\n   * @param {NumberFormatOptions} option - Specifies the format options in which the number will be formatted.\n   * @returns {string} ?\n   */\n\n\n  formatNumber(value, option) {\n    return this.getNumberFormat(option)(value);\n  }\n  /**\n   * Returns the formatted date string based on format options.\n   *\n   * @param {Date} value - Specifies the number to format.\n   * @param {DateFormatOptions} option - Specifies the format options in which the number will be formatted.\n   * @returns {string} ?\n   */\n\n\n  formatDate(value, option) {\n    return this.getDateFormat(option)(value);\n  }\n  /**\n   * Returns the date object for given date string and options.\n   *\n   * @param {string} value - Specifies the string to parse.\n   * @param {DateFormatOptions} option - Specifies the parse options in which the date string will be parsed.\n   * @returns {Date} ?\n   */\n\n\n  parseDate(value, option) {\n    return this.getDateParser(option)(value);\n  }\n  /**\n   * Returns the number object from the given string value and options.\n   *\n   * @param {string} value - Specifies the string to parse.\n   * @param {NumberFormatOptions} option - Specifies the parse options in which the  string number  will be parsed.\n   * @returns {number} ?\n   */\n\n\n  parseNumber(value, option) {\n    return this.getNumberParser(option)(value);\n  }\n  /**\n   * Returns Native Date Time Pattern\n   *\n   * @param {DateFormatOptions} option - Specifies the parse options for resultant date time pattern.\n   * @param {boolean} isExcelFormat - Specifies format value to be converted to excel pattern.\n   * @returns {string} ?\n   * @private\n   */\n\n\n  getDatePattern(option, isExcelFormat) {\n    return IntlBase.getActualDateTimeFormat(this.getCulture(), option, cldrData, isExcelFormat);\n  }\n  /**\n   * Returns Native Number Pattern\n   *\n   * @param {NumberFormatOptions} option - Specifies the parse options for resultant number pattern.\n   * @param {boolean} isExcel ?\n   * @returns {string} ?\n   * @private\n   */\n\n\n  getNumberPattern(option, isExcel) {\n    return IntlBase.getActualNumberFormat(this.getCulture(), option, cldrData, isExcel);\n  }\n  /**\n   * Returns the First Day of the Week\n   *\n   * @returns {number} ?\n   */\n\n\n  getFirstDayOfWeek() {\n    return IntlBase.getWeekData(this.getCulture(), cldrData);\n  }\n  /**\n   * Returns the culture\n   *\n   * @returns {string} ?\n   */\n\n\n  getCulture() {\n    return this.culture || defaultCulture;\n  }\n\n}\n/**\n * Set the default culture to all EJ2 components\n *\n * @param {string} cultureName - Specifies the culture name to be set as default culture.\n * @returns {void} ?\n */\n\n\nfunction setCulture(cultureName) {\n  defaultCulture = cultureName;\n  onIntlChange.notify('notifyExternalChange', {\n    'locale': defaultCulture\n  });\n}\n/**\n * Set the default currency code to all EJ2 components\n *\n * @param {string} currencyCode Specifies the culture name to be set as default culture.\n * @returns {void} ?\n */\n\n\nfunction setCurrencyCode(currencyCode) {\n  defaultCurrencyCode = currencyCode;\n  onIntlChange.notify('notifyExternalChange', {\n    'currencyCode': defaultCurrencyCode\n  });\n}\n/**\n * Load the CLDR data into context\n *\n * @param {Object[]} data Specifies the CLDR data's to be used for formatting and parser.\n * @returns {void} ?\n */\n\n\nfunction loadCldr(...data) {\n  for (const obj of data) {\n    extend(cldrData, obj, {}, true);\n  }\n}\n/**\n * To enable or disable RTL functionality for all components globally.\n *\n * @param {boolean} status - Optional argument Specifies the status value to enable or disable rtl option.\n * @returns {void} ?\n */\n\n\nfunction enableRtl(status = true) {\n  rightToLeft = status;\n  onIntlChange.notify('notifyExternalChange', {\n    enableRtl: rightToLeft\n  });\n}\n/**\n * To get the numeric CLDR object for given culture\n *\n * @param {string} locale - Specifies the locale for which numericObject to be returned.\n * @param {string} type ?\n * @returns {Object} ?\n * @ignore\n * @private\n */\n\n\nfunction getNumericObject(locale, type) {\n  // eslint-disable-next-line\n  let numObject = IntlBase.getDependables(cldrData, locale, '', true)[mapper[0]]; // eslint-disable-next-line\n\n  const dateObject = IntlBase.getDependables(cldrData, locale, '')[mapper[1]];\n  const numSystem = getValue('defaultNumberingSystem', numObject);\n  const symbPattern = isBlazor() ? getValue('numberSymbols', numObject) : getValue('symbols-numberSystem-' + numSystem, numObject);\n  const pattern = IntlBase.getSymbolPattern(type || 'decimal', numSystem, numObject, false);\n  return extend(symbPattern, IntlBase.getFormatData(pattern, true, '', true), {\n    'dateSeparator': IntlBase.getDateSeparator(dateObject)\n  });\n}\n/**\n * To get the numeric CLDR  number base object for given culture\n *\n * @param {string} locale - Specifies the locale for which numericObject to be returned.\n * @param {string} currency - Specifies the currency for which numericObject to be returned.\n * @returns {string} ?\n * @ignore\n * @private\n */\n\n\nfunction getNumberDependable(locale, currency) {\n  // eslint-disable-next-line\n  const numObject = IntlBase.getDependables(cldrData, locale, '', true); // eslint-disable-next-line\n\n  return IntlBase.getCurrencySymbol(numObject.numericObject, currency);\n}\n/**\n * To get the default date CLDR object.\n *\n * @param {string} mode ?\n * @returns {Object} ?\n * @ignore\n * @private\n */\n\n\nfunction getDefaultDateObject(mode) {\n  // eslint-disable-next-line\n  return IntlBase.getDependables(cldrData, '', mode, false)[mapper[1]];\n}\n\nconst blazorCultureFormats = {\n  'en-US': {\n    'd': 'M/d/y',\n    'D': 'EEEE, MMMM d, y',\n    'f': 'EEEE, MMMM d, y h:mm a',\n    'F': 'EEEE, MMMM d, y h:mm:s a',\n    'g': 'M/d/y h:mm a',\n    'G': 'M/d/yyyy h:mm:ss tt',\n    'm': 'MMMM d',\n    'M': 'MMMM d',\n    'r': 'ddd, dd MMM yyyy HH\\':\\'mm\\':\\'ss \\'GMT\\'',\n    'R': 'ddd, dd MMM yyyy HH\\':\\'mm\\':\\'ss \\'GMT\\'',\n    's': 'yyyy\\'-\\'MM\\'-\\'dd\\'T\\'HH\\':\\'mm\\':\\'ss',\n    't': 'h:mm tt',\n    'T': 'h:m:s tt',\n    'u': 'yyyy\\'-\\'MM\\'-\\'dd HH\\':\\'mm\\':\\'ss\\'Z\\'',\n    'U': 'dddd, MMMM d, yyyy h:mm:ss tt',\n    'y': 'MMMM yyyy',\n    'Y': 'MMMM yyyy'\n  }\n};\n/**\n * Date base common constants and function for date parser and formatter.\n */\n// eslint-disable-next-line\n\nvar IntlBase;\n\n(function (IntlBase) {\n  // tslint:disable-next-line:max-line-length\n  IntlBase.negativeDataRegex = /^(('[^']+'|''|[^*#@0,.E])*)(\\*.)?((([#,]*[0,]*0+)(\\.0*[0-9]*#*)?)|([#,]*@+#*))(E\\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;\n  IntlBase.customRegex = /^(('[^']+'|''|[^*#@0,.])*)(\\*.)?((([0#,]*[0,]*[0#]*)(\\.[0#]*)?)|([#,]*@+#*))(E\\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;\n  IntlBase.latnParseRegex = /0|1|2|3|4|5|6|7|8|9/g;\n  const fractionRegex = /[0-9]/g;\n  IntlBase.defaultCurrency = '$';\n  const mapper = ['infinity', 'nan', 'group', 'decimal'];\n  const patternRegex = /G|M|L|H|c|'| a|yy|y|EEEE|E/g;\n  const patternMatch = {\n    'G': '',\n    'M': 'm',\n    'L': 'm',\n    'H': 'h',\n    'c': 'd',\n    '\\'': '\"',\n    ' a': ' AM/PM',\n    'yy': 'yy',\n    'y': 'yyyy',\n    'EEEE': 'dddd',\n    'E': 'ddd'\n  };\n  IntlBase.dateConverterMapper = /dddd|ddd/ig;\n  const defaultFirstDay = 'sun';\n  IntlBase.islamicRegex = /^islamic/;\n  const firstDayMapper = {\n    'sun': 0,\n    'mon': 1,\n    'tue': 2,\n    'wed': 3,\n    'thu': 4,\n    'fri': 5,\n    'sat': 6\n  };\n  IntlBase.formatRegex = /(^[ncpae]{1})([0-1]?[0-9]|20)?$/i;\n  IntlBase.currencyFormatRegex = /(^[ca]{1})([0-1]?[0-9]|20)?$/i;\n  IntlBase.curWithoutNumberRegex = /(c|a)$/ig;\n  const typeMapper = {\n    '$': 'isCurrency',\n    '%': 'isPercent',\n    '-': 'isNegative',\n    0: 'nlead',\n    1: 'nend'\n  };\n  IntlBase.dateParseRegex = /([a-z])\\1*|'([^']|'')+'|''|./gi;\n  IntlBase.basicPatterns = ['short', 'medium', 'long', 'full'];\n  /* tslint:disable:quotemark */\n\n  IntlBase.defaultObject = {\n    'dates': {\n      'calendars': {\n        'gregorian': {\n          'months': {\n            'stand-alone': {\n              'abbreviated': {\n                '1': 'Jan',\n                '2': 'Feb',\n                '3': 'Mar',\n                '4': 'Apr',\n                '5': 'May',\n                '6': 'Jun',\n                '7': 'Jul',\n                '8': 'Aug',\n                '9': 'Sep',\n                '10': 'Oct',\n                '11': 'Nov',\n                '12': 'Dec'\n              },\n              'narrow': {\n                '1': 'J',\n                '2': 'F',\n                '3': 'M',\n                '4': 'A',\n                '5': 'M',\n                '6': 'J',\n                '7': 'J',\n                '8': 'A',\n                '9': 'S',\n                '10': 'O',\n                '11': 'N',\n                '12': 'D'\n              },\n              'wide': {\n                '1': 'January',\n                '2': 'February',\n                '3': 'March',\n                '4': 'April',\n                '5': 'May',\n                '6': 'June',\n                '7': 'July',\n                '8': 'August',\n                '9': 'September',\n                '10': 'October',\n                '11': 'November',\n                '12': 'December'\n              }\n            }\n          },\n          'days': {\n            'stand-alone': {\n              'abbreviated': {\n                'sun': 'Sun',\n                'mon': 'Mon',\n                'tue': 'Tue',\n                'wed': 'Wed',\n                'thu': 'Thu',\n                'fri': 'Fri',\n                'sat': 'Sat'\n              },\n              'narrow': {\n                'sun': 'S',\n                'mon': 'M',\n                'tue': 'T',\n                'wed': 'W',\n                'thu': 'T',\n                'fri': 'F',\n                'sat': 'S'\n              },\n              'short': {\n                'sun': 'Su',\n                'mon': 'Mo',\n                'tue': 'Tu',\n                'wed': 'We',\n                'thu': 'Th',\n                'fri': 'Fr',\n                'sat': 'Sa'\n              },\n              'wide': {\n                'sun': 'Sunday',\n                'mon': 'Monday',\n                'tue': 'Tuesday',\n                'wed': 'Wednesday',\n                'thu': 'Thursday',\n                'fri': 'Friday',\n                'sat': 'Saturday'\n              }\n            }\n          },\n          'dayPeriods': {\n            'format': {\n              'wide': {\n                'am': 'AM',\n                'pm': 'PM'\n              }\n            }\n          },\n          'eras': {\n            'eraNames': {\n              '0': 'Before Christ',\n              '0-alt-variant': 'Before Common Era',\n              '1': 'Anno Domini',\n              '1-alt-variant': 'Common Era'\n            },\n            'eraAbbr': {\n              '0': 'BC',\n              '0-alt-variant': 'BCE',\n              '1': 'AD',\n              '1-alt-variant': 'CE'\n            },\n            'eraNarrow': {\n              '0': 'B',\n              '0-alt-variant': 'BCE',\n              '1': 'A',\n              '1-alt-variant': 'CE'\n            }\n          },\n          'dateFormats': {\n            'full': 'EEEE, MMMM d, y',\n            'long': 'MMMM d, y',\n            'medium': 'MMM d, y',\n            'short': 'M/d/yy'\n          },\n          'timeFormats': {\n            'full': 'h:mm:ss a zzzz',\n            'long': 'h:mm:ss a z',\n            'medium': 'h:mm:ss a',\n            'short': 'h:mm a'\n          },\n          'dateTimeFormats': {\n            'full': '{1} \\'at\\' {0}',\n            'long': '{1} \\'at\\' {0}',\n            'medium': '{1}, {0}',\n            'short': '{1}, {0}',\n            'availableFormats': {\n              'd': 'd',\n              'E': 'ccc',\n              'Ed': 'd E',\n              'Ehm': 'E h:mm a',\n              'EHm': 'E HH:mm',\n              'Ehms': 'E h:mm:ss a',\n              'EHms': 'E HH:mm:ss',\n              'Gy': 'y G',\n              'GyMMM': 'MMM y G',\n              'GyMMMd': 'MMM d, y G',\n              'GyMMMEd': 'E, MMM d, y G',\n              'h': 'h a',\n              'H': 'HH',\n              'hm': 'h:mm a',\n              'Hm': 'HH:mm',\n              'hms': 'h:mm:ss a',\n              'Hms': 'HH:mm:ss',\n              'hmsv': 'h:mm:ss a v',\n              'Hmsv': 'HH:mm:ss v',\n              'hmv': 'h:mm a v',\n              'Hmv': 'HH:mm v',\n              'M': 'L',\n              'Md': 'M/d',\n              'MEd': 'E, M/d',\n              'MMM': 'LLL',\n              'MMMd': 'MMM d',\n              'MMMEd': 'E, MMM d',\n              'MMMMd': 'MMMM d',\n              'ms': 'mm:ss',\n              'y': 'y',\n              'yM': 'M/y',\n              'yMd': 'M/d/y',\n              'yMEd': 'E, M/d/y',\n              'yMMM': 'MMM y',\n              'yMMMd': 'MMM d, y',\n              'yMMMEd': 'E, MMM d, y',\n              'yMMMM': 'MMMM y'\n            }\n          }\n        },\n        'islamic': {\n          'months': {\n            'stand-alone': {\n              'abbreviated': {\n                '1': 'Muh.',\n                '2': 'Saf.',\n                '3': 'Rab. I',\n                '4': 'Rab. II',\n                '5': 'Jum. I',\n                '6': 'Jum. II',\n                '7': 'Raj.',\n                '8': 'Sha.',\n                '9': 'Ram.',\n                '10': 'Shaw.',\n                '11': 'Dhuʻl-Q.',\n                '12': 'Dhuʻl-H.'\n              },\n              'narrow': {\n                '1': '1',\n                '2': '2',\n                '3': '3',\n                '4': '4',\n                '5': '5',\n                '6': '6',\n                '7': '7',\n                '8': '8',\n                '9': '9',\n                '10': '10',\n                '11': '11',\n                '12': '12'\n              },\n              'wide': {\n                '1': 'Muharram',\n                '2': 'Safar',\n                '3': 'Rabiʻ I',\n                '4': 'Rabiʻ II',\n                '5': 'Jumada I',\n                '6': 'Jumada II',\n                '7': 'Rajab',\n                '8': 'Shaʻban',\n                '9': 'Ramadan',\n                '10': 'Shawwal',\n                '11': 'Dhuʻl-Qiʻdah',\n                '12': 'Dhuʻl-Hijjah'\n              }\n            }\n          },\n          'days': {\n            'stand-alone': {\n              'abbreviated': {\n                'sun': 'Sun',\n                'mon': 'Mon',\n                'tue': 'Tue',\n                'wed': 'Wed',\n                'thu': 'Thu',\n                'fri': 'Fri',\n                'sat': 'Sat'\n              },\n              'narrow': {\n                'sun': 'S',\n                'mon': 'M',\n                'tue': 'T',\n                'wed': 'W',\n                'thu': 'T',\n                'fri': 'F',\n                'sat': 'S'\n              },\n              'short': {\n                'sun': 'Su',\n                'mon': 'Mo',\n                'tue': 'Tu',\n                'wed': 'We',\n                'thu': 'Th',\n                'fri': 'Fr',\n                'sat': 'Sa'\n              },\n              'wide': {\n                'sun': 'Sunday',\n                'mon': 'Monday',\n                'tue': 'Tuesday',\n                'wed': 'Wednesday',\n                'thu': 'Thursday',\n                'fri': 'Friday',\n                'sat': 'Saturday'\n              }\n            }\n          },\n          'dayPeriods': {\n            'format': {\n              'wide': {\n                'am': 'AM',\n                'pm': 'PM'\n              }\n            }\n          },\n          'eras': {\n            'eraNames': {\n              '0': 'AH'\n            },\n            'eraAbbr': {\n              '0': 'AH'\n            },\n            'eraNarrow': {\n              '0': 'AH'\n            }\n          },\n          'dateFormats': {\n            'full': 'EEEE, MMMM d, y G',\n            'long': 'MMMM d, y G',\n            'medium': 'MMM d, y G',\n            'short': 'M/d/y GGGGG'\n          },\n          'timeFormats': {\n            'full': 'h:mm:ss a zzzz',\n            'long': 'h:mm:ss a z',\n            'medium': 'h:mm:ss a',\n            'short': 'h:mm a'\n          },\n          'dateTimeFormats': {\n            'full': '{1} \\'at\\' {0}',\n            'long': '{1} \\'at\\' {0}',\n            'medium': '{1}, {0}',\n            'short': '{1}, {0}',\n            'availableFormats': {\n              'd': 'd',\n              'E': 'ccc',\n              'Ed': 'd E',\n              'Ehm': 'E h:mm a',\n              'EHm': 'E HH:mm',\n              'Ehms': 'E h:mm:ss a',\n              'EHms': 'E HH:mm:ss',\n              'Gy': 'y G',\n              'GyMMM': 'MMM y G',\n              'GyMMMd': 'MMM d, y G',\n              'GyMMMEd': 'E, MMM d, y G',\n              'h': 'h a',\n              'H': 'HH',\n              'hm': 'h:mm a',\n              'Hm': 'HH:mm',\n              'hms': 'h:mm:ss a',\n              'Hms': 'HH:mm:ss',\n              'M': 'L',\n              'Md': 'M/d',\n              'MEd': 'E, M/d',\n              'MMM': 'LLL',\n              'MMMd': 'MMM d',\n              'MMMEd': 'E, MMM d',\n              'MMMMd': 'MMMM d',\n              'ms': 'mm:ss',\n              'y': 'y G',\n              'yyyy': 'y G',\n              'yyyyM': 'M/y GGGGG',\n              'yyyyMd': 'M/d/y GGGGG',\n              'yyyyMEd': 'E, M/d/y GGGGG',\n              'yyyyMMM': 'MMM y G',\n              'yyyyMMMd': 'MMM d, y G',\n              'yyyyMMMEd': 'E, MMM d, y G',\n              'yyyyMMMM': 'MMMM y G',\n              'yyyyQQQ': 'QQQ y G',\n              'yyyyQQQQ': 'QQQQ y G'\n            }\n          }\n        }\n      },\n      'timeZoneNames': {\n        'hourFormat': '+HH:mm;-HH:mm',\n        'gmtFormat': 'GMT{0}',\n        'gmtZeroFormat': 'GMT'\n      }\n    },\n    'numbers': {\n      'currencies': {\n        'USD': {\n          'displayName': 'US Dollar',\n          'symbol': '$',\n          'symbol-alt-narrow': '$'\n        },\n        'EUR': {\n          'displayName': 'Euro',\n          'symbol': '€',\n          'symbol-alt-narrow': '€'\n        },\n        'GBP': {\n          'displayName': 'British Pound',\n          'symbol-alt-narrow': '£'\n        }\n      },\n      'defaultNumberingSystem': 'latn',\n      'minimumGroupingDigits': '1',\n      'symbols-numberSystem-latn': {\n        'decimal': '.',\n        'group': ',',\n        'list': ';',\n        'percentSign': '%',\n        'plusSign': '+',\n        'minusSign': '-',\n        'exponential': 'E',\n        'superscriptingExponent': '×',\n        'perMille': '‰',\n        'infinity': '∞',\n        'nan': 'NaN',\n        'timeSeparator': ':'\n      },\n      'decimalFormats-numberSystem-latn': {\n        'standard': '#,##0.###'\n      },\n      'percentFormats-numberSystem-latn': {\n        'standard': '#,##0%'\n      },\n      'currencyFormats-numberSystem-latn': {\n        'standard': '¤#,##0.00',\n        'accounting': '¤#,##0.00;(¤#,##0.00)'\n      },\n      'scientificFormats-numberSystem-latn': {\n        'standard': '#E0'\n      }\n    }\n  };\n  IntlBase.blazorDefaultObject = {\n    'numbers': {\n      'mapper': {\n        '0': '0',\n        '1': '1',\n        '2': '2',\n        '3': '3',\n        '4': '4',\n        '5': '5',\n        '6': '6',\n        '7': '7',\n        '8': '8',\n        '9': '9'\n      },\n      'mapperDigits': '0123456789',\n      'numberSymbols': {\n        'decimal': '.',\n        'group': ',',\n        'plusSign': '+',\n        'minusSign': '-',\n        'percentSign': '%',\n        'nan': 'NaN',\n        'timeSeparator': ':',\n        'infinity': '∞'\n      },\n      'timeSeparator': ':',\n      'currencySymbol': '$',\n      'currencypData': {\n        'nlead': '$',\n        'nend': '',\n        'groupSeparator': ',',\n        'groupData': {\n          'primary': 3\n        },\n        'maximumFraction': 2,\n        'minimumFraction': 2\n      },\n      'percentpData': {\n        'nlead': '',\n        'nend': '%',\n        'groupSeparator': ',',\n        'groupData': {\n          'primary': 3\n        },\n        'maximumFraction': 2,\n        'minimumFraction': 2\n      },\n      'percentnData': {\n        'nlead': '-',\n        'nend': '%',\n        'groupSeparator': ',',\n        'groupData': {\n          'primary': 3\n        },\n        'maximumFraction': 2,\n        'minimumFraction': 2\n      },\n      'currencynData': {\n        'nlead': '($',\n        'nend': ')',\n        'groupSeparator': ',',\n        'groupData': {\n          'primary': 3\n        },\n        'maximumFraction': 2,\n        'minimumFraction': 2\n      },\n      'decimalnData': {\n        'nlead': '-',\n        'nend': '',\n        'groupData': {\n          'primary': 3\n        },\n        'maximumFraction': 2,\n        'minimumFraction': 2\n      },\n      'decimalpData': {\n        'nlead': '',\n        'nend': '',\n        'groupData': {\n          'primary': 3\n        },\n        'maximumFraction': 2,\n        'minimumFraction': 2\n      }\n    },\n    'dates': {\n      'dayPeriods': {\n        'am': 'AM',\n        'pm': 'PM'\n      },\n      'dateSeperator': '/',\n      'days': {\n        'abbreviated': {\n          'sun': 'Sun',\n          'mon': 'Mon',\n          'tue': 'Tue',\n          'wed': 'Wed',\n          'thu': 'Thu',\n          'fri': 'Fri',\n          'sat': 'Sat'\n        },\n        'short': {\n          'sun': 'Su',\n          'mon': 'Mo',\n          'tue': 'Tu',\n          'wed': 'We',\n          'thu': 'Th',\n          'fri': 'Fr',\n          'sat': 'Sa'\n        },\n        'wide': {\n          'sun': 'Sunday',\n          'mon': 'Monday',\n          'tue': 'Tuesday',\n          'wed': 'Wednesday',\n          'thu': 'Thursday',\n          'fri': 'Friday',\n          'sat': 'Saturday'\n        }\n      },\n      'months': {\n        'abbreviated': {\n          '1': 'Jan',\n          '2': 'Feb',\n          '3': 'Mar',\n          '4': 'Apr',\n          '5': 'May',\n          '6': 'Jun',\n          '7': 'Jul',\n          '8': 'Aug',\n          '9': 'Sep',\n          '10': 'Oct',\n          '11': 'Nov',\n          '12': 'Dec'\n        },\n        'wide': {\n          '1': 'January',\n          '2': 'February',\n          '3': 'March',\n          '4': 'April',\n          '5': 'May',\n          '6': 'June',\n          '7': 'July',\n          '8': 'August',\n          '9': 'September',\n          '10': 'October',\n          '11': 'November',\n          '12': 'December'\n        }\n      },\n      'eras': {\n        '1': 'AD'\n      }\n    }\n  };\n  /* tslint:enable:quotemark */\n\n  IntlBase.monthIndex = {\n    3: 'abbreviated',\n    4: 'wide',\n    5: 'narrow',\n    1: 'abbreviated'\n  };\n  /**\n   *\n   */\n\n  IntlBase.month = 'months';\n  IntlBase.days = 'days';\n  /**\n   * Default numerber Object\n   */\n\n  IntlBase.patternMatcher = {\n    C: 'currency',\n    P: 'percent',\n    N: 'decimal',\n    A: 'currency',\n    E: 'scientific'\n  };\n  /**\n   * Returns the resultant pattern based on the skeleton, dateObject and the type provided\n   *\n   * @private\n   * @param {string} skeleton ?\n   * @param {Object} dateObject ?\n   * @param {string} type ?\n   * @param {boolean} isIslamic ?\n   * @param {string} blazorCulture ?\n   * @returns {string} ?\n   */\n\n  function getResultantPattern(skeleton, dateObject, type, isIslamic, blazorCulture) {\n    let resPattern;\n    const iType = type || 'date';\n\n    if (blazorCulture) {\n      resPattern = compareBlazorDateFormats({\n        skeleton: skeleton\n      }, blazorCulture).format || compareBlazorDateFormats({\n        skeleton: 'd'\n      }, 'en-US').format;\n    } else {\n      if (IntlBase.basicPatterns.indexOf(skeleton) !== -1) {\n        resPattern = getValue(iType + 'Formats.' + skeleton, dateObject);\n\n        if (iType === 'dateTime') {\n          const dPattern = getValue('dateFormats.' + skeleton, dateObject);\n          const tPattern = getValue('timeFormats.' + skeleton, dateObject);\n          resPattern = resPattern.replace('{1}', dPattern).replace('{0}', tPattern);\n        }\n      } else {\n        resPattern = getValue('dateTimeFormats.availableFormats.' + skeleton, dateObject);\n      }\n\n      if (isUndefined(resPattern) && skeleton === 'yMd') {\n        resPattern = 'M/d/y';\n      }\n    }\n\n    return resPattern;\n  }\n\n  IntlBase.getResultantPattern = getResultantPattern;\n  /**\n   * Returns the dependable object for provided cldr data and culture\n   *\n   * @private\n   * @param {Object} cldr ?\n   * @param {string} culture ?\n   * @param {string} mode ?\n   * @param {boolean} isNumber ?\n   * @returns {any} ?\n   */\n\n  function getDependables(cldr, culture, mode, isNumber) {\n    const ret = {};\n    const calendartype = mode || 'gregorian';\n    ret.parserObject = ParserBase.getMainObject(cldr, culture) || (isBlazor() ? IntlBase.blazorDefaultObject : IntlBase.defaultObject);\n\n    if (isNumber) {\n      ret.numericObject = getValue('numbers', ret.parserObject);\n    } else {\n      const dateString = isBlazor() ? 'dates' : 'dates.calendars.' + calendartype;\n      ret.dateObject = getValue(dateString, ret.parserObject);\n    }\n\n    return ret;\n  }\n\n  IntlBase.getDependables = getDependables;\n  /**\n   * Returns the symbol pattern for provided parameters\n   *\n   * @private\n   * @param {string} type ?\n   * @param {string} numSystem ?\n   * @param {Object} obj ?\n   * @param {boolean} isAccount ?\n   * @returns {string} ?\n   */\n\n  function getSymbolPattern(type, numSystem, obj, isAccount) {\n    return getValue(type + 'Formats-numberSystem-' + numSystem + (isAccount ? '.accounting' : '.standard'), obj) || (isAccount ? getValue(type + 'Formats-numberSystem-' + numSystem + '.standard', obj) : '');\n  }\n\n  IntlBase.getSymbolPattern = getSymbolPattern;\n  /**\n   *\n   * @param {string} format ?\n   * @returns {string} ?\n   */\n\n  function ConvertDateToWeekFormat(format) {\n    const convertMapper = format.match(IntlBase.dateConverterMapper);\n\n    if (convertMapper && isBlazor()) {\n      const tempString = convertMapper[0].length === 3 ? 'EEE' : 'EEEE';\n      return format.replace(IntlBase.dateConverterMapper, tempString);\n    }\n\n    return format;\n  }\n\n  IntlBase.ConvertDateToWeekFormat = ConvertDateToWeekFormat;\n  /**\n   *\n   * @param {DateFormatOptions} formatOptions ?\n   * @param {string} culture ?\n   * @returns {DateFormatOptions} ?\n   */\n\n  function compareBlazorDateFormats(formatOptions, culture) {\n    const format = formatOptions.format || formatOptions.skeleton;\n    let curFormatMapper = getValue((culture || 'en-US') + '.' + format, blazorCultureFormats);\n\n    if (!curFormatMapper) {\n      curFormatMapper = getValue('en-US.' + format, blazorCultureFormats);\n    }\n\n    if (curFormatMapper) {\n      curFormatMapper = ConvertDateToWeekFormat(curFormatMapper);\n      formatOptions.format = curFormatMapper.replace(/tt/, 'a');\n    }\n\n    return formatOptions;\n  }\n\n  IntlBase.compareBlazorDateFormats = compareBlazorDateFormats;\n  /**\n   * Returns proper numeric skeleton\n   *\n   * @private\n   * @param {string} skeleton ?\n   * @returns {any} ?\n   */\n\n  function getProperNumericSkeleton(skeleton) {\n    const matches = skeleton.match(IntlBase.formatRegex);\n    const ret = {};\n    const pattern = matches[1].toUpperCase();\n    ret.isAccount = pattern === 'A'; // eslint-disable-next-line\n\n    ret.type = IntlBase.patternMatcher[pattern];\n\n    if (skeleton.length > 1) {\n      ret.fractionDigits = parseInt(matches[2], 10);\n    }\n\n    return ret;\n  }\n\n  IntlBase.getProperNumericSkeleton = getProperNumericSkeleton;\n  /**\n   * Returns format data for number formatting like minimum fraction, maximum fraction, etc..,\n   *\n   * @private\n   * @param {string} pattern ?\n   * @param {boolean} needFraction ?\n   * @param {string} cSymbol ?\n   * @param {boolean} fractionOnly ?\n   * @returns {any} ?\n   */\n\n  function getFormatData(pattern, needFraction, cSymbol, fractionOnly) {\n    const nData = fractionOnly ? {} : {\n      nlead: '',\n      nend: ''\n    };\n    const match = pattern.match(IntlBase.customRegex);\n\n    if (match) {\n      if (!fractionOnly) {\n        nData.nlead = changeCurrencySymbol(match[1], cSymbol);\n        nData.nend = changeCurrencySymbol(match[10], cSymbol);\n        nData.groupPattern = match[4];\n      }\n\n      const fraction = match[7];\n\n      if (fraction && needFraction) {\n        const fmatch = fraction.match(fractionRegex);\n\n        if (!isNullOrUndefined(fmatch)) {\n          nData.minimumFraction = fmatch.length;\n        } else {\n          nData.minimumFraction = 0;\n        }\n\n        nData.maximumFraction = fraction.length - 1;\n      }\n    }\n\n    return nData;\n  }\n\n  IntlBase.getFormatData = getFormatData;\n  /**\n   * Changes currency symbol\n   *\n   * @private\n   * @param {string} val ?\n   * @param {string} sym ?\n   * @returns {string} ?\n   */\n\n  function changeCurrencySymbol(val, sym) {\n    if (val) {\n      return val.replace(IntlBase.defaultCurrency, sym);\n    }\n\n    return '';\n  }\n\n  IntlBase.changeCurrencySymbol = changeCurrencySymbol;\n  /**\n   * Returns currency symbol based on currency code ?\n   *\n   * @private\n   * @param {Object} numericObject ?\n   * @param {string} currencyCode ?\n   * @param {string} altSymbol ?\n   * @returns {string} ?\n   */\n\n  function getCurrencySymbol(numericObject, currencyCode, altSymbol) {\n    const symbol = altSymbol ? '.' + altSymbol : '.symbol';\n    const getCurrency = getValue('currencies.' + currencyCode + symbol, numericObject) || getValue('currencies.' + currencyCode + '.symbol-alt-narrow', numericObject) || '$';\n    return getCurrency;\n  }\n\n  IntlBase.getCurrencySymbol = getCurrencySymbol;\n  /**\n   * Returns formatting options for custom number format\n   *\n   * @private\n   * @param {string} format ?\n   * @param {CommonOptions} dOptions ?\n   * @param {any} obj ?\n   * @returns {any} ?\n   */\n\n  function customFormat(format, dOptions, obj) {\n    const options = {};\n    const formatSplit = format.split(';');\n    const data = ['pData', 'nData', 'zeroData'];\n\n    for (let i = 0; i < formatSplit.length; i++) {\n      // eslint-disable-next-line\n      options[data[i]] = customNumberFormat(formatSplit[i], dOptions, obj);\n    }\n\n    if (isNullOrUndefined(options.nData)) {\n      options.nData = extend({}, options.pData);\n      options.nData.nlead = isNullOrUndefined(dOptions) ? '-' + options.nData.nlead : dOptions.minusSymbol + options.nData.nlead;\n    }\n\n    return options;\n  }\n\n  IntlBase.customFormat = customFormat;\n  /**\n   * Returns custom formatting options\n   *\n   * @private\n   * @param {string} format ?\n   * @param {CommonOptions} dOptions ?\n   * @param {Object} numObject ?\n   * @returns {any} ?\n   */\n\n  function customNumberFormat(format, dOptions, numObject) {\n    const cOptions = {\n      type: 'decimal',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    };\n    const pattern = format.match(IntlBase.customRegex);\n\n    if (isNullOrUndefined(pattern) || pattern[5] === '' && format !== 'N/A') {\n      cOptions.type = undefined;\n      return cOptions;\n    }\n\n    cOptions.nlead = pattern[1];\n    cOptions.nend = pattern[10];\n    let integerPart = pattern[6];\n    cOptions.useGrouping = integerPart.indexOf(',') !== -1;\n    integerPart = integerPart.replace(/,/g, '');\n    const fractionPart = pattern[7];\n\n    if (integerPart.indexOf('0') !== -1) {\n      cOptions.minimumIntegerDigits = integerPart.length - integerPart.indexOf('0');\n    }\n\n    if (!isNullOrUndefined(fractionPart)) {\n      cOptions.minimumFractionDigits = fractionPart.lastIndexOf('0');\n      cOptions.maximumFractionDigits = fractionPart.lastIndexOf('#');\n\n      if (cOptions.minimumFractionDigits === -1) {\n        cOptions.minimumFractionDigits = 0;\n      }\n\n      if (cOptions.maximumFractionDigits === -1 || cOptions.maximumFractionDigits < cOptions.minimumFractionDigits) {\n        cOptions.maximumFractionDigits = cOptions.minimumFractionDigits;\n      }\n    }\n\n    if (!isNullOrUndefined(dOptions)) {\n      extend(cOptions, isCurrencyPercent([cOptions.nlead, cOptions.nend], '$', dOptions.currencySymbol));\n\n      if (!cOptions.isCurrency) {\n        extend(cOptions, isCurrencyPercent([cOptions.nlead, cOptions.nend], '%', dOptions.percentSymbol));\n      }\n    } else {\n      extend(cOptions, isCurrencyPercent([cOptions.nlead, cOptions.nend], '%', '%'));\n    }\n\n    if (!isNullOrUndefined(numObject)) {\n      const symbolPattern = getSymbolPattern(cOptions.type, dOptions.numberMapper.numberSystem, numObject, false);\n\n      if (cOptions.useGrouping) {\n        // eslint-disable-next-line\n        cOptions.groupSeparator = dOptions.numberMapper.numberSymbols[mapper[2]];\n        cOptions.groupData = NumberFormat.getGroupingDetails(symbolPattern.split(';')[0]);\n      }\n\n      cOptions.nlead = cOptions.nlead.replace(/'/g, '');\n      cOptions.nend = cOptions.nend.replace(/'/g, '');\n    }\n\n    return cOptions;\n  }\n\n  IntlBase.customNumberFormat = customNumberFormat;\n  /**\n   * Returns formatting options for currency or percent type\n   *\n   * @private\n   * @param {string[]} parts ?\n   * @param {string} actual ?\n   * @param {string} symbol ?\n   * @returns {any} ?\n   */\n\n  function isCurrencyPercent(parts, actual, symbol) {\n    const options = {\n      nlead: parts[0],\n      nend: parts[1]\n    };\n\n    for (let i = 0; i < 2; i++) {\n      const part = parts[i];\n      const loc = part.indexOf(actual);\n\n      if (loc !== -1 && (loc < part.indexOf('\\'') || loc > part.lastIndexOf('\\''))) {\n        // eslint-disable-next-line\n        options[typeMapper[i]] = part.substr(0, loc) + symbol + part.substr(loc + 1); // eslint-disable-next-line\n\n        options[typeMapper[actual]] = true;\n        options.type = options.isCurrency ? 'currency' : 'percent';\n        break;\n      }\n    }\n\n    return options;\n  }\n\n  IntlBase.isCurrencyPercent = isCurrencyPercent;\n  /**\n   * Returns culture based date separator\n   *\n   * @private\n   * @param {Object} dateObj ?\n   * @returns {string} ?\n   */\n\n  function getDateSeparator(dateObj) {\n    const value = (getValue('dateFormats.short', dateObj) || '').match(/[d‏M‏]([^d‏M])[d‏M‏]/i);\n    return value ? value[1] : '/';\n  }\n\n  IntlBase.getDateSeparator = getDateSeparator;\n  /**\n   * Returns Native Date Time pattern\n   *\n   * @private\n   * @param {string} culture ?\n   * @param {DateFormatOptions} options ?\n   * @param {Object} cldr ?\n   * @param {boolean} isExcelFormat ?\n   * @returns {string} ?\n   */\n\n  function getActualDateTimeFormat(culture, options, cldr, isExcelFormat) {\n    const dependable = getDependables(cldr, culture, options.calendar);\n\n    if (isBlazor()) {\n      options = compareBlazorDateFormats(options, culture);\n    }\n\n    let actualPattern = options.format || getResultantPattern(options.skeleton, dependable.dateObject, options.type);\n\n    if (isExcelFormat) {\n      actualPattern = actualPattern.replace(patternRegex, pattern => {\n        // eslint-disable-next-line\n        return patternMatch[pattern];\n      });\n\n      if (actualPattern.indexOf('z') !== -1) {\n        const tLength = actualPattern.match(/z/g).length;\n        let timeZonePattern;\n        const options = {\n          'timeZone': {}\n        };\n        options.numMapper = ParserBase.getNumberMapper(dependable.parserObject, ParserBase.getNumberingSystem(cldr));\n        options.timeZone = getValue('dates.timeZoneNames', dependable.parserObject);\n        const value = new Date();\n        const timezone = value.getTimezoneOffset();\n        let pattern = tLength < 4 ? '+H;-H' : options.timeZone.hourFormat;\n        pattern = pattern.replace(/:/g, options.numMapper.timeSeparator);\n\n        if (timezone === 0) {\n          timeZonePattern = options.timeZone.gmtZeroFormat;\n        } else {\n          timeZonePattern = DateFormat.getTimeZoneValue(timezone, pattern);\n          timeZonePattern = options.timeZone.gmtFormat.replace(/\\{0\\}/, timeZonePattern);\n        }\n\n        actualPattern = actualPattern.replace(/[z]+/, '\"' + timeZonePattern + '\"');\n      }\n\n      actualPattern = actualPattern.replace(/ $/, '');\n    }\n\n    return actualPattern;\n  }\n\n  IntlBase.getActualDateTimeFormat = getActualDateTimeFormat;\n  /**\n   *\n   * @param {string} actual ?\n   * @param {any} option ?\n   * @returns {any} ?\n   */\n  // eslint-disable-next-line\n\n  function processSymbol(actual, option) {\n    if (actual.indexOf(',') !== -1) {\n      // eslint-disable-next-line\n      let split = actual.split(',');\n      actual = split[0] + getValue('numberMapper.numberSymbols.group', option) + split[1].replace('.', getValue('numberMapper.numberSymbols.decimal', option));\n    } else {\n      actual = actual.replace('.', getValue('numberMapper.numberSymbols.decimal', option));\n    }\n\n    return actual;\n  }\n  /**\n   * Returns Native Number pattern\n   *\n   * @private\n   * @param {string} culture ?\n   * @param {NumberFormatOptions} options ?\n   * @param {Object} cldr ?\n   * @param {boolean} isExcel ?\n   * @returns {string} ?\n   */\n\n\n  function getActualNumberFormat(culture, options, cldr, isExcel) {\n    const dependable = getDependables(cldr, culture, '', true);\n    const parseOptions = {\n      custom: true\n    };\n    const numrericObject = dependable.numericObject;\n    let minFrac;\n    const curObj = {};\n    const curMatch = (options.format || '').match(IntlBase.currencyFormatRegex);\n    const type = IntlBase.formatRegex.test(options.format) ? getProperNumericSkeleton(options.format || 'N') : {};\n    const dOptions = {};\n\n    if (curMatch) {\n      dOptions.numberMapper = isBlazor() ? extend({}, dependable.numericObject) : ParserBase.getNumberMapper(dependable.parserObject, ParserBase.getNumberingSystem(cldr), true);\n      const curCode = isBlazor() ? getValue('currencySymbol', dependable.numericObject) : getCurrencySymbol(dependable.numericObject, options.currency || defaultCurrencyCode, options.altSymbol);\n      let symbolPattern = getSymbolPattern('currency', dOptions.numberMapper.numberSystem, dependable.numericObject, /a/i.test(options.format));\n      symbolPattern = symbolPattern.replace(/\\u00A4/g, curCode);\n      const split = symbolPattern.split(';');\n      curObj.hasNegativePattern = isBlazor() ? true : split.length > 1;\n      curObj.nData = isBlazor() ? getValue(type.type + 'nData', numrericObject) : getFormatData(split[1] || '-' + split[0], true, curCode);\n      curObj.pData = isBlazor() ? getValue(type.type + 'pData', numrericObject) : getFormatData(split[0], false, curCode);\n\n      if (!curMatch[2] && !options.minimumFractionDigits && !options.maximumFractionDigits) {\n        minFrac = getFormatData(symbolPattern.split(';')[0], true, '', true).minimumFraction;\n      }\n    }\n\n    let actualPattern;\n\n    if (IntlBase.formatRegex.test(options.format) || !options.format) {\n      extend(parseOptions, getProperNumericSkeleton(options.format || 'N'));\n      parseOptions.custom = false;\n      actualPattern = '###0';\n\n      if (parseOptions.fractionDigits || options.minimumFractionDigits || options.maximumFractionDigits || minFrac) {\n        const defaultMinimum = 0;\n\n        if (parseOptions.fractionDigits) {\n          options.minimumFractionDigits = options.maximumFractionDigits = parseOptions.fractionDigits;\n        }\n\n        actualPattern = fractionDigitsPattern(actualPattern, minFrac || parseOptions.fractionDigits || options.minimumFractionDigits || defaultMinimum, options.maximumFractionDigits || defaultMinimum);\n      }\n\n      if (options.minimumIntegerDigits) {\n        actualPattern = minimumIntegerPattern(actualPattern, options.minimumIntegerDigits);\n      }\n\n      if (options.useGrouping) {\n        actualPattern = groupingPattern(actualPattern);\n      }\n\n      if (parseOptions.type === 'currency' || parseOptions.type && isBlazor()) {\n        if (isBlazor() && parseOptions.type !== 'currency') {\n          curObj.pData = getValue(parseOptions.type + 'pData', numrericObject);\n          curObj.nData = getValue(parseOptions.type + 'nData', numrericObject);\n        }\n\n        const cPattern = actualPattern;\n        actualPattern = curObj.pData.nlead + cPattern + curObj.pData.nend;\n\n        if (curObj.hasNegativePattern || isBlazor()) {\n          actualPattern += ';' + curObj.nData.nlead + cPattern + curObj.nData.nend;\n        }\n      }\n\n      if (parseOptions.type === 'percent' && !isBlazor()) {\n        actualPattern += ' %';\n      }\n    } else {\n      actualPattern = options.format.replace(/'/g, '\"');\n    }\n\n    if (Object.keys(dOptions).length > 0) {\n      actualPattern = !isExcel ? processSymbol(actualPattern, dOptions) : actualPattern;\n    }\n\n    return actualPattern;\n  }\n\n  IntlBase.getActualNumberFormat = getActualNumberFormat;\n  /**\n   *\n   * @param {string} pattern ?\n   * @param {number} minDigits ?\n   * @param {number} maxDigits ?\n   * @returns {string} ?\n   */\n\n  function fractionDigitsPattern(pattern, minDigits, maxDigits) {\n    pattern += '.';\n\n    for (let a = 0; a < minDigits; a++) {\n      pattern += '0';\n    }\n\n    if (minDigits < maxDigits) {\n      const diff = maxDigits - minDigits;\n\n      for (let b = 0; b < diff; b++) {\n        pattern += '#';\n      }\n    }\n\n    return pattern;\n  }\n\n  IntlBase.fractionDigitsPattern = fractionDigitsPattern;\n  /**\n   *\n   * @param {string} pattern ?\n   * @param {number} digits ?\n   * @returns {string} ?\n   */\n\n  function minimumIntegerPattern(pattern, digits) {\n    const temp = pattern.split('.');\n    let integer = '';\n\n    for (let x = 0; x < digits; x++) {\n      integer += '0';\n    }\n\n    return temp[1] ? integer + '.' + temp[1] : integer;\n  }\n\n  IntlBase.minimumIntegerPattern = minimumIntegerPattern;\n  /**\n   *\n   * @param {string} pattern ?\n   * @returns {string} ?\n   */\n\n  function groupingPattern(pattern) {\n    const temp = pattern.split('.');\n    let integer = temp[0];\n    const no = 3 - integer.length % 3;\n    const hash = no && no === 1 ? '#' : no === 2 ? '##' : '';\n    integer = hash + integer;\n    pattern = '';\n\n    for (let x = integer.length - 1; x > 0; x = x - 3) {\n      pattern = ',' + integer[x - 2] + integer[x - 1] + integer[x] + pattern;\n    }\n\n    pattern = pattern.slice(1);\n    return temp[1] ? pattern + '.' + temp[1] : pattern;\n  }\n\n  IntlBase.groupingPattern = groupingPattern;\n  /**\n   *\n   * @param {string} culture ?\n   * @param {Object} cldr ?\n   * @returns {number} ?\n   */\n\n  function getWeekData(culture, cldr) {\n    let firstDay = defaultFirstDay;\n    const mapper = getValue('supplemental.weekData.firstDay', cldr);\n    let iCulture = culture;\n\n    if (/en-/.test(iCulture)) {\n      iCulture = iCulture.slice(3);\n    }\n\n    iCulture = iCulture.slice(0, 2).toUpperCase() + iCulture.substr(2);\n\n    if (mapper) {\n      firstDay = mapper[iCulture] || defaultFirstDay;\n    }\n\n    return firstDayMapper[firstDay];\n  }\n\n  IntlBase.getWeekData = getWeekData;\n  /**\n   * @private\n   * @param {any} pData ?\n   * @param {string} aCurrency ?\n   * @param {string} rCurrency ?\n   * @returns {void} ?\n   */\n\n  function replaceBlazorCurrency(pData, aCurrency, rCurrency) {\n    const iCurrency = getBlazorCurrencySymbol(rCurrency);\n\n    if (aCurrency !== iCurrency) {\n      for (const data of pData) {\n        data.nend = data.nend.replace(aCurrency, iCurrency);\n        data.nlead = data.nlead.replace(aCurrency, iCurrency);\n      }\n    }\n  }\n\n  IntlBase.replaceBlazorCurrency = replaceBlazorCurrency;\n  /**\n   * @private\n   * @param {Date} date ?\n   * @returns {number} ?\n   */\n\n  function getWeekOfYear(date) {\n    const newYear = new Date(date.getFullYear(), 0, 1);\n    let day = newYear.getDay();\n    let weeknum;\n    day = day >= 0 ? day : day + 7;\n    const daynum = Math.floor((date.getTime() - newYear.getTime() - (date.getTimezoneOffset() - newYear.getTimezoneOffset()) * 60000) / 86400000) + 1;\n\n    if (day < 4) {\n      weeknum = Math.floor((daynum + day - 1) / 7) + 1;\n\n      if (weeknum > 52) {\n        const nYear = new Date(this.getFullYear() + 1, 0, 1);\n        let nday = nYear.getDay();\n        nday = nday >= 0 ? nday : nday + 7;\n        weeknum = nday < 4 ? 1 : 53;\n      }\n    } else {\n      weeknum = Math.floor((daynum + day - 1) / 7);\n    }\n\n    return weeknum;\n  }\n\n  IntlBase.getWeekOfYear = getWeekOfYear;\n})(IntlBase || (IntlBase = {}));\n\nconst headerRegex = /^(.*?):[ \\t]*([^\\r\\n]*)$/gm;\nconst defaultType = 'GET';\n/**\n * Ajax class provides ability to make asynchronous HTTP request to the server\n * ```typescript\n *   var ajax = new Ajax(\"index.html\", \"GET\", true);\n *   ajax.send().then(\n *               function (value) {\n *                   console.log(value);\n *               },\n *               function (reason) {\n *                   console.log(reason);\n *               });\n * ```\n */\n\nclass Ajax {\n  /**\n   * Constructor for Ajax class\n   *\n   * @param  {string|Object} options ?\n   * @param  {string} type ?\n   * @param  {boolean} async ?\n   * @returns defaultType any\n   */\n  constructor(options, type, async, contentType) {\n    /**\n     * A boolean value indicating whether the request should be sent asynchronous or not.\n     *\n     * @default true\n     */\n    this.mode = true;\n    /**\n     * A boolean value indicating whether to ignore the promise reject.\n     *\n     * @private\n     * @default true\n     */\n\n    this.emitError = true;\n    this.options = {};\n\n    if (typeof options === 'string') {\n      this.url = options;\n      this.type = type ? type.toUpperCase() : defaultType;\n      this.mode = !isNullOrUndefined(async) ? async : true;\n    } else if (typeof options === 'object') {\n      this.options = options;\n      merge(this, this.options);\n    }\n\n    this.type = this.type ? this.type.toUpperCase() : defaultType;\n    this.contentType = this.contentType !== undefined ? this.contentType : contentType;\n  }\n  /**\n   *\n   * Send the request to server.\n   *\n   * @param {any} data - To send the user data\n   * @return {Promise} ?\n   */\n\n\n  send(data) {\n    this.data = isNullOrUndefined(data) ? this.data : data;\n    const eventArgs = {\n      cancel: false,\n      httpRequest: null\n    };\n    const promise = new Promise((resolve, reject) => {\n      this.httpRequest = new XMLHttpRequest();\n\n      this.httpRequest.onreadystatechange = () => {\n        this.stateChange(resolve, reject);\n      };\n\n      if (!isNullOrUndefined(this.onLoad)) {\n        this.httpRequest.onload = this.onLoad;\n      }\n\n      if (!isNullOrUndefined(this.onProgress)) {\n        this.httpRequest.onprogress = this.onProgress;\n      }\n      /* istanbul ignore next */\n\n\n      if (!isNullOrUndefined(this.onAbort)) {\n        this.httpRequest.onabort = this.onAbort;\n      }\n      /* istanbul ignore next */\n\n\n      if (!isNullOrUndefined(this.onError)) {\n        this.httpRequest.onerror = this.onError;\n      } //** Upload Events **/\n\n      /* istanbul ignore next */\n\n\n      if (!isNullOrUndefined(this.onUploadProgress)) {\n        this.httpRequest.upload.onprogress = this.onUploadProgress;\n      }\n\n      this.httpRequest.open(this.type, this.url, this.mode); // Set default headers\n\n      if (!isNullOrUndefined(this.data) && this.contentType !== null) {\n        this.httpRequest.setRequestHeader('Content-Type', this.contentType || 'application/json; charset=utf-8');\n      }\n\n      if (this.beforeSend) {\n        eventArgs.httpRequest = this.httpRequest;\n        this.beforeSend(eventArgs);\n      }\n\n      if (!eventArgs.cancel) {\n        this.httpRequest.send(!isNullOrUndefined(this.data) ? this.data : null);\n      }\n    });\n    return promise;\n  }\n\n  successHandler(data) {\n    if (this.onSuccess) {\n      this.onSuccess(data, this);\n    }\n\n    return data;\n  }\n\n  failureHandler(reason) {\n    if (this.onFailure) {\n      this.onFailure(this.httpRequest);\n    }\n\n    return reason;\n  }\n\n  stateChange(resolve, reject) {\n    let data = this.httpRequest.responseText;\n\n    if (this.dataType && this.dataType.toLowerCase() === 'json') {\n      if (data === '') {\n        data = undefined;\n      } else {\n        try {\n          data = JSON.parse(data);\n        } catch (error) {// no exception handle\n        }\n      }\n    }\n\n    if (this.httpRequest.readyState === 4) {\n      //success range should be 200 to 299\n      if (this.httpRequest.status >= 200 && this.httpRequest.status <= 299 || this.httpRequest.status === 304) {\n        resolve(this.successHandler(data));\n      } else {\n        if (this.emitError) {\n          reject(new Error(this.failureHandler(this.httpRequest.statusText)));\n        } else {\n          resolve();\n        }\n      }\n    }\n  }\n  /**\n   * To get the response header from XMLHttpRequest\n   *\n   * @param  {string} key Key to search in the response header\n   * @returns {string} ?\n   */\n\n\n  getResponseHeader(key) {\n    let responseHeaders;\n    let header; // eslint-disable-next-line\n\n    responseHeaders = {};\n    let headers = headerRegex.exec(this.httpRequest.getAllResponseHeaders());\n\n    while (headers) {\n      responseHeaders[headers[1].toLowerCase()] = headers[2];\n      headers = headerRegex.exec(this.httpRequest.getAllResponseHeaders());\n    } // eslint-disable-next-line\n\n\n    header = responseHeaders[key.toLowerCase()];\n    return isNullOrUndefined(header) ? null : header;\n  }\n\n}\n\nconst REGX_MOBILE = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini|mobile/i;\nconst REGX_IE = /msie|trident/i;\nconst REGX_IE11 = /Trident\\/7\\./;\nconst REGX_IOS = /(ipad|iphone|ipod touch)/i;\nconst REGX_IOS7 = /(ipad|iphone|ipod touch);.*os 7_\\d|(ipad|iphone|ipod touch);.*os 8_\\d/i;\nconst REGX_ANDROID = /android/i;\nconst REGX_WINDOWS = /trident|windows phone|edge/i;\nconst REGX_VERSION = /(version)[ /]([\\w.]+)/i;\nconst REGX_BROWSER = {\n  OPERA: /(opera|opr)(?:.*version|)[ /]([\\w.]+)/i,\n  EDGE: /(edge)(?:.*version|)[ /]([\\w.]+)/i,\n  CHROME: /(chrome|crios)[ /]([\\w.]+)/i,\n  PANTHOMEJS: /(phantomjs)[ /]([\\w.]+)/i,\n  SAFARI: /(safari)[ /]([\\w.]+)/i,\n  WEBKIT: /(webkit)[ /]([\\w.]+)/i,\n  MSIE: /(msie|trident) ([\\w.]+)/i,\n  MOZILLA: /(mozilla)(?:.*? rv:([\\w.]+)|)/i\n};\n/* istanbul ignore else  */\n\nif (typeof window !== 'undefined') {\n  window.browserDetails = window.browserDetails || {};\n}\n/**\n * Get configuration details for Browser\n *\n * @private\n */\n\n\nclass Browser {\n  static extractBrowserDetail() {\n    const browserInfo = {\n      culture: {}\n    };\n    const keys = Object.keys(REGX_BROWSER);\n    let clientInfo = [];\n\n    for (const key of keys) {\n      clientInfo = Browser.userAgent.match(REGX_BROWSER[key]);\n\n      if (clientInfo) {\n        browserInfo.name = clientInfo[1].toLowerCase() === 'opr' ? 'opera' : clientInfo[1].toLowerCase();\n        browserInfo.name = clientInfo[1].toLowerCase() === 'crios' ? 'chrome' : browserInfo.name;\n        browserInfo.version = clientInfo[2];\n        browserInfo.culture.name = browserInfo.culture.language = navigator.language; // eslint-disable-next-line\n\n        if (!!Browser.userAgent.match(REGX_IE11)) {\n          browserInfo.name = 'msie';\n          break;\n        }\n\n        const version = Browser.userAgent.match(REGX_VERSION);\n\n        if (browserInfo.name === 'safari' && version) {\n          browserInfo.version = version[2];\n        }\n\n        break;\n      }\n    }\n\n    return browserInfo;\n  }\n  /**\n   * To get events from the browser\n   *\n   * @param {string} event - type of event triggered.\n   * @returns {boolean}\n   */\n\n\n  static getEvent(event) {\n    // eslint-disable-next-line\n    const events = {\n      start: {\n        isPointer: 'pointerdown',\n        isTouch: 'touchstart',\n        isDevice: 'mousedown'\n      },\n      move: {\n        isPointer: 'pointermove',\n        isTouch: 'touchmove',\n        isDevice: 'mousemove'\n      },\n      end: {\n        isPointer: 'pointerup',\n        isTouch: 'touchend',\n        isDevice: 'mouseup'\n      },\n      cancel: {\n        isPointer: 'pointercancel',\n        isTouch: 'touchcancel',\n        isDevice: 'mouseleave'\n      }\n    };\n    return Browser.isPointer ? events[event].isPointer : Browser.isTouch ? events[event].isTouch + (!Browser.isDevice ? ' ' + events[event].isDevice : '') : events[event].isDevice;\n  }\n  /**\n   * To get the Touch start event from browser\n   *\n   * @returns {string}\n   */\n\n\n  static getTouchStartEvent() {\n    return Browser.getEvent('start');\n  }\n  /**\n   * To get the Touch end event from browser\n   *\n   * @returns {string}\n   */\n\n\n  static getTouchEndEvent() {\n    return Browser.getEvent('end');\n  }\n  /**\n   * To get the Touch move event from browser\n   *\n   * @returns {string}\n   */\n\n\n  static getTouchMoveEvent() {\n    return Browser.getEvent('move');\n  }\n  /**\n   * To cancel the touch event from browser\n   *\n   * @returns {string}\n   */\n\n\n  static getTouchCancelEvent() {\n    return Browser.getEvent('cancel');\n  }\n  /**\n   * To get the value based on provided key and regX\n   *\n   * @param {string} key ?\n   * @param {RegExp} regX ?\n   * @returns {Object} ?\n   */\n\n\n  static getValue(key, regX) {\n    const browserDetails = window.browserDetails;\n\n    if ('undefined' === typeof browserDetails[key]) {\n      return browserDetails[key] = regX.test(Browser.userAgent);\n    }\n\n    return browserDetails[key];\n  } //Properties\n\n  /**\n   * Property specifies the userAgent of the browser. Default userAgent value is based on the browser.\n   * Also we can set our own userAgent.\n   *\n   * @param {string} uA ?\n   */\n\n\n  static set userAgent(uA) {\n    Browser.uA = uA;\n    window.browserDetails = {};\n  }\n\n  static get userAgent() {\n    return Browser.uA;\n  } //Read Only Properties\n\n  /**\n   * Property is to get the browser information like Name, Version and Language\n   *\n   * @returns {BrowserInfo} ?\n   */\n\n\n  static get info() {\n    if (isUndefined(window.browserDetails.info)) {\n      return window.browserDetails.info = Browser.extractBrowserDetail();\n    }\n\n    return window.browserDetails.info;\n  }\n  /**\n   * Property is to get whether the userAgent is based IE.\n   *\n   * @returns {boolean} ?\n   */\n\n\n  static get isIE() {\n    return Browser.getValue('isIE', REGX_IE);\n  }\n  /**\n   * Property is to get whether the browser has touch support.\n   *\n   * @returns {boolean} ?\n   */\n\n\n  static get isTouch() {\n    if (isUndefined(window.browserDetails.isTouch)) {\n      return window.browserDetails.isTouch = 'ontouchstart' in window.navigator || window && window.navigator && window.navigator.maxTouchPoints > 0 || 'ontouchstart' in window;\n    }\n\n    return window.browserDetails.isTouch;\n  }\n  /**\n   * Property is to get whether the browser has Pointer support.\n   *\n   * @returns {boolean} ?\n   */\n\n\n  static get isPointer() {\n    if (isUndefined(window.browserDetails.isPointer)) {\n      return window.browserDetails.isPointer = 'pointerEnabled' in window.navigator;\n    }\n\n    return window.browserDetails.isPointer;\n  }\n  /**\n   * Property is to get whether the browser has MSPointer support.\n   *\n   * @returns {boolean} ?\n   */\n\n\n  static get isMSPointer() {\n    if (isUndefined(window.browserDetails.isMSPointer)) {\n      return window.browserDetails.isMSPointer = 'msPointerEnabled' in window.navigator;\n    }\n\n    return window.browserDetails.isMSPointer;\n  }\n  /**\n   * Property is to get whether the userAgent is device based.\n   *\n   * @returns {boolean} ?\n   */\n\n\n  static get isDevice() {\n    return Browser.getValue('isDevice', REGX_MOBILE);\n  }\n  /**\n   * Property is to get whether the userAgent is IOS.\n   *\n   * @returns {boolean} ?\n   */\n\n\n  static get isIos() {\n    return Browser.getValue('isIos', REGX_IOS);\n  }\n  /**\n   * Property is to get whether the userAgent is Ios7.\n   *\n   * @returns {boolean} ?\n   */\n\n\n  static get isIos7() {\n    return Browser.getValue('isIos7', REGX_IOS7);\n  }\n  /**\n   * Property is to get whether the userAgent is Android.\n   *\n   * @returns {boolean} ?\n   */\n\n\n  static get isAndroid() {\n    return Browser.getValue('isAndroid', REGX_ANDROID);\n  }\n  /**\n   * Property is to identify whether application ran in web view.\n   *\n   * @returns {boolean} ?\n   */\n\n\n  static get isWebView() {\n    if (isUndefined(window.browserDetails.isWebView)) {\n      window.browserDetails.isWebView = !(isUndefined(window.cordova) && isUndefined(window.PhoneGap) && isUndefined(window.phonegap) && window.forge !== 'object');\n      return window.browserDetails.isWebView;\n    }\n\n    return window.browserDetails.isWebView;\n  }\n  /**\n   * Property is to get whether the userAgent is Windows.\n   *\n   * @returns {boolean} ?\n   */\n\n\n  static get isWindows() {\n    return Browser.getValue('isWindows', REGX_WINDOWS);\n  }\n  /**\n   * Property is to get the touch start event. It returns event name based on browser.\n   *\n   * @returns {string} ?\n   */\n\n\n  static get touchStartEvent() {\n    if (isUndefined(window.browserDetails.touchStartEvent)) {\n      return window.browserDetails.touchStartEvent = Browser.getTouchStartEvent();\n    }\n\n    return window.browserDetails.touchStartEvent;\n  }\n  /**\n   * Property is to get the touch move event. It returns event name based on browser.\n   *\n   * @returns {string} ?\n   */\n\n\n  static get touchMoveEvent() {\n    if (isUndefined(window.browserDetails.touchMoveEvent)) {\n      return window.browserDetails.touchMoveEvent = Browser.getTouchMoveEvent();\n    }\n\n    return window.browserDetails.touchMoveEvent;\n  }\n  /**\n   * Property is to get the touch end event. It returns event name based on browser.\n   *\n   * @returns {string} ?\n   */\n\n\n  static get touchEndEvent() {\n    if (isUndefined(window.browserDetails.touchEndEvent)) {\n      return window.browserDetails.touchEndEvent = Browser.getTouchEndEvent();\n    }\n\n    return window.browserDetails.touchEndEvent;\n  }\n  /**\n   * Property is to cancel the touch end event.\n   *\n   * @returns {string} ?\n   */\n\n\n  static get touchCancelEvent() {\n    if (isUndefined(window.browserDetails.touchCancelEvent)) {\n      return window.browserDetails.touchCancelEvent = Browser.getTouchCancelEvent();\n    }\n\n    return window.browserDetails.touchCancelEvent;\n  }\n\n}\n/* istanbul ignore next */\n\n\nBrowser.uA = typeof navigator !== 'undefined' ? navigator.userAgent : '';\n/**\n * EventHandler class provides option to add, remove, clear and trigger events to a HTML DOM element\n * ```html\n * <div id=\"Eventdiv\">  </div>\n * <script>\n *   let node: HTMLElement = document.querySelector(\"#Eventdiv\");\n *   EventHandler.addEventListener(node, \"click\", function(){\n *       // click handler function code\n *   });\n *   EventHandler.addEventListener(node, \"onmouseover\", function(){\n *       // mouseover handler function code\n *   });\n *   EventHandler.removeEventListener(node, \"click\", function(){\n *       // click handler function code\n *   });\n *   eventObj.clearEvents();\n * </script>\n * ```\n */\n\nclass EventHandler {\n  // to get the event data based on element\n  static addOrGetEventData(element) {\n    if ('__eventList' in element) {\n      return element.__eventList.events;\n    } else {\n      element.__eventList = {};\n      return element.__eventList.events = [];\n    }\n  }\n  /**\n   * Add an event to the specified DOM element.\n   *\n   * @param {any} element - Target HTML DOM element\n   * @param {string} eventName - A string that specifies the name of the event\n   * @param {Function} listener - Specifies the function to run when the event occurs\n   * @param {Object} bindTo - A object that binds 'this' variable in the event handler\n   * @param {number} intDebounce - Specifies at what interval given event listener should be triggered.\n   * @returns {Function} ?\n   */\n\n\n  static add(element, eventName, listener, bindTo, intDebounce) {\n    const eventData = EventHandler.addOrGetEventData(element);\n    let debounceListener;\n\n    if (intDebounce) {\n      debounceListener = debounce(listener, intDebounce);\n    } else {\n      debounceListener = listener;\n    }\n\n    if (bindTo) {\n      debounceListener = debounceListener.bind(bindTo);\n    }\n\n    const event = eventName.split(' ');\n\n    for (let i = 0; i < event.length; i++) {\n      eventData.push({\n        name: event[i],\n        listener: listener,\n        debounce: debounceListener\n      });\n\n      if (Browser.isIE) {\n        element.addEventListener(event[i], debounceListener);\n      } else {\n        element.addEventListener(event[i], debounceListener, {\n          passive: false\n        });\n      }\n    }\n\n    return debounceListener;\n  }\n  /**\n   * Remove an event listener that has been attached before.\n   *\n   * @param {any} element - Specifies the target html element to remove the event\n   * @param {string} eventName - A string that specifies the name of the event to remove\n   * @param {Function} listener - Specifies the function to remove\n   * @returns {void} ?\n   */\n\n\n  static remove(element, eventName, listener) {\n    const eventData = EventHandler.addOrGetEventData(element);\n    const event = eventName.split(' ');\n\n    for (let j = 0; j < event.length; j++) {\n      let index = -1;\n      let debounceListener;\n\n      if (eventData && eventData.length !== 0) {\n        eventData.some((x, i) => {\n          return x.name === event[j] && x.listener === listener ? (index = i, debounceListener = x.debounce, true) : false;\n        });\n      }\n\n      if (index !== -1) {\n        eventData.splice(index, 1);\n      }\n\n      if (debounceListener) {\n        element.removeEventListener(event[j], debounceListener);\n      }\n    }\n  }\n  /**\n   * Clear all the event listeners that has been previously attached to the element.\n   *\n   * @param {any} element - Specifies the target html element to clear the events\n   * @returns {void} ?\n   */\n\n\n  static clearEvents(element) {\n    let eventData;\n    let copyData; // eslint-disable-next-line\n\n    eventData = EventHandler.addOrGetEventData(element); // eslint-disable-next-line\n\n    copyData = extend([], copyData, eventData);\n\n    for (let i = 0; i < copyData.length; i++) {\n      element.removeEventListener(copyData[i].name, copyData[i].debounce);\n      eventData.shift();\n    }\n  }\n  /**\n   * Trigger particular event of the element.\n   *\n   * @param {any} element - Specifies the target html element to trigger the events\n   * @param {string} eventName - Specifies the event to trigger for the specified element.\n   * Can be a custom event, or any of the standard events.\n   * @param {any} eventProp - Additional parameters to pass on to the event properties\n   * @returns {void} ?\n   */\n\n\n  static trigger(element, eventName, eventProp) {\n    const eventData = EventHandler.addOrGetEventData(element);\n\n    for (const event of eventData) {\n      if (event.name === eventName) {\n        event.debounce.call(this, eventProp);\n      }\n    }\n  }\n\n}\n/**\n * Functions related to dom operations.\n */\n\n\nconst SVG_REG = /^svg|^path|^g/;\n/**\n * Function to create Html element.\n *\n * @param {string} tagName - Name of the tag, id and class names.\n * @param {ElementProperties} properties - Object to set properties in the element.\n * @param {ElementProperties} properties.id - To set the id to the created element.\n * @param {ElementProperties} properties.className - To add classes to the element.\n * @param {ElementProperties} properties.innerHTML - To set the innerHTML to element.\n * @param {ElementProperties} properties.styles - To set the some custom styles to element.\n * @param {ElementProperties} properties.attrs - To set the attributes to element.\n * @returns {any} ?\n * @private\n */\n\nfunction createElement(tagName, properties) {\n  const element = SVG_REG.test(tagName) ? document.createElementNS('http://www.w3.org/2000/svg', tagName) : document.createElement(tagName);\n\n  if (typeof properties === 'undefined') {\n    return element;\n  }\n\n  element.innerHTML = properties.innerHTML ? properties.innerHTML : '';\n\n  if (properties.className !== undefined) {\n    element.className = properties.className;\n  }\n\n  if (properties.id !== undefined) {\n    element.id = properties.id;\n  }\n\n  if (properties.styles !== undefined) {\n    element.setAttribute('style', properties.styles);\n  }\n\n  if (properties.attrs !== undefined) {\n    attributes(element, properties.attrs);\n  }\n\n  return element;\n}\n/**\n * The function used to add the classes to array of elements\n *\n * @param  {Element[]|NodeList} elements - An array of elements that need to add a list of classes\n * @param  {string|string[]} classes - String or array of string that need to add an individual element as a class\n * @returns {any} .\n * @private\n */\n\n\nfunction addClass(elements, classes) {\n  const classList = getClassList(classes);\n\n  for (const ele of elements) {\n    for (const className of classList) {\n      if (isObject(ele)) {\n        const curClass = getValue('attributes.className', ele);\n\n        if (isNullOrUndefined(curClass)) {\n          setValue('attributes.className', className, ele);\n        } else if (!new RegExp('\\\\b' + className + '\\\\b', 'i').test(curClass)) {\n          setValue('attributes.className', curClass + ' ' + className, ele);\n        }\n      } else {\n        if (!ele.classList.contains(className)) {\n          ele.classList.add(className);\n        }\n      }\n    }\n  }\n\n  return elements;\n}\n/**\n * The function used to add the classes to array of elements\n *\n * @param  {Element[]|NodeList} elements - An array of elements that need to remove a list of classes\n * @param  {string|string[]} classes - String or array of string that need to add an individual element as a class\n * @returns {any} .\n * @private\n */\n\n\nfunction removeClass(elements, classes) {\n  const classList = getClassList(classes);\n\n  for (const ele of elements) {\n    const flag = isObject(ele);\n    const canRemove = flag ? getValue('attributes.className', ele) : ele.className !== '';\n\n    if (canRemove) {\n      for (const className of classList) {\n        if (flag) {\n          const classes = getValue('attributes.className', ele);\n          const classArr = classes.split(' ');\n          const index = classArr.indexOf(className);\n\n          if (index !== -1) {\n            classArr.splice(index, 1);\n          }\n\n          setValue('attributes.className', classArr.join(' '), ele);\n        } else {\n          ele.classList.remove(className);\n        }\n      }\n    }\n  }\n\n  return elements;\n}\n/**\n * The function used to get classlist.\n *\n * @param  {string | string[]} classes - An element the need to check visibility\n * @returns {string[]} ?\n * @private\n */\n\n\nfunction getClassList(classes) {\n  let classList = [];\n\n  if (typeof classes === 'string') {\n    classList.push(classes);\n  } else {\n    classList = classes;\n  }\n\n  return classList;\n}\n/**\n * The function used to check element is visible or not.\n *\n * @param  {Element|Node} element - An element the need to check visibility\n * @returns {boolean} ?\n * @private\n */\n\n\nfunction isVisible(element) {\n  const ele = element;\n  return ele.style.visibility === '' && ele.offsetWidth > 0;\n}\n/**\n * The function used to insert an array of elements into a first of the element.\n *\n * @param  {Element[]|NodeList} fromElements - An array of elements that need to prepend.\n * @param  {Element} toElement - An element that is going to prepend.\n * @param {boolean} isEval - ?\n * @returns {Element[] | NodeList} ?\n * @private\n */\n\n\nfunction prepend(fromElements, toElement, isEval) {\n  const docFrag = document.createDocumentFragment();\n\n  for (const ele of fromElements) {\n    docFrag.appendChild(ele);\n  }\n\n  toElement.insertBefore(docFrag, toElement.firstElementChild);\n\n  if (isEval) {\n    executeScript(toElement);\n  }\n\n  return fromElements;\n}\n/**\n * The function used to insert an array of elements into last of the element.\n *\n * @param  {Element[]|NodeList} fromElements - An array of elements that need to append.\n * @param  {Element} toElement - An element that is going to prepend.\n * @param {boolean} isEval - ?\n * @returns {Element[] | NodeList} ?\n * @private\n */\n\n\nfunction append(fromElements, toElement, isEval) {\n  const docFrag = document.createDocumentFragment();\n\n  for (const ele of fromElements) {\n    docFrag.appendChild(ele);\n  }\n\n  toElement.appendChild(docFrag);\n\n  if (isEval) {\n    executeScript(toElement);\n  }\n\n  return fromElements;\n}\n/**\n * The function is used to evaluate script from Ajax request\n *\n * @param {Element} ele - An element is going to evaluate the script\n * @returns {void} ?\n */\n\n\nfunction executeScript(ele) {\n  const eleArray = ele.querySelectorAll('script');\n  eleArray.forEach(element => {\n    const script = document.createElement('script');\n    script.text = element.innerHTML;\n    document.head.appendChild(script);\n    detach(script);\n  });\n}\n/**\n * The function used to remove the element from parentnode\n *\n * @param  {Element|Node|HTMLElement} element - An element that is going to detach from the Dom\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction detach(element) {\n  const parentNode = element.parentNode;\n\n  if (parentNode) {\n    return parentNode.removeChild(element);\n  }\n}\n/**\n * The function used to remove the element from Dom also clear the bounded events\n *\n * @param  {Element|Node|HTMLElement} element - An element remove from the Dom\n * @returns {void} ?\n * @private\n */\n\n\nfunction remove(element) {\n  const parentNode = element.parentNode;\n  EventHandler.clearEvents(element);\n  parentNode.removeChild(element);\n}\n/**\n * The function helps to set multiple attributes to an element\n *\n * @param  {Element|Node} element - An element that need to set attributes.\n * @param  {string} attributes - JSON Object that is going to as attributes.\n * @returns {Element} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction attributes(element, attributes) {\n  const keys = Object.keys(attributes);\n  const ele = element;\n\n  for (const key of keys) {\n    if (isObject(ele)) {\n      let iKey = key;\n\n      if (key === 'tabindex') {\n        iKey = 'tabIndex';\n      }\n\n      ele.attributes[iKey] = attributes[key];\n    } else {\n      ele.setAttribute(key, attributes[key]);\n    }\n  }\n\n  return ele;\n}\n/**\n * The function selects the element from giving context.\n *\n * @param  {string} selector - Selector string need fetch element\n * @param  {Document|Element} context - It is an optional type, That specifies a Dom context.\n * @param {boolean} needsVDOM ?\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction select(selector, context = document, needsVDOM) {\n  selector = querySelectId(selector);\n  return context.querySelector(selector);\n}\n/**\n * The function selects an array of element from the given context.\n *\n * @param  {string} selector - Selector string need fetch element\n * @param  {Document|Element} context - It is an optional type, That specifies a Dom context.\n * @param {boolean} needsVDOM ?\n * @returns {HTMLElement[]} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction selectAll(selector, context = document, needsVDOM) {\n  selector = querySelectId(selector);\n  const nodeList = context.querySelectorAll(selector);\n  return nodeList;\n}\n/**\n * The function selects an id of element from the given context.\n *\n * @param  {string} selector - Selector string need fetch element\n * @returns {string} ?\n * @private\n */\n\n\nfunction querySelectId(selector) {\n  if (selector.match(/#[0-9]/g)) {\n    const idList = selector.split(',');\n\n    for (let i = 0; i < idList.length; i++) {\n      const list = idList[i].split(' ');\n\n      for (let j = 0; j < list.length; j++) {\n        if (list[j].indexOf('#') > -1) {\n          if (!list[j].match(/\\[.*\\]/)) {\n            const splitId = list[j].split('#');\n\n            if (splitId[1].match(/^\\d/)) {\n              const setId = list[j].split('.');\n              setId[0] = setId[0].replace(/#/, '[id=\\'') + '\\']';\n              list[j] = setId.join('.');\n            }\n          }\n        }\n      }\n\n      idList[i] = list.join(' ');\n    }\n\n    return idList.join(',');\n  }\n\n  return selector;\n}\n/**\n * Returns single closest parent element based on class selector.\n *\n * @param  {Element} element - An element that need to find the closest element.\n * @param  {string} selector - A classSelector of closest element.\n * @returns {Element} ?\n * @private\n */\n\n\nfunction closest(element, selector) {\n  let el = element;\n\n  if (typeof el.closest === 'function') {\n    return el.closest(selector);\n  }\n\n  while (el && el.nodeType === 1) {\n    if (matches(el, selector)) {\n      return el;\n    }\n\n    el = el.parentNode;\n  }\n\n  return null;\n}\n/**\n * Returns all sibling elements of the given element.\n *\n * @param  {Element|Node} element - An element that need to get siblings.\n * @returns {Element[]} ?\n * @private\n */\n\n\nfunction siblings(element) {\n  const siblings = [];\n  const childNodes = Array.prototype.slice.call(element.parentNode.childNodes);\n\n  for (const curNode of childNodes) {\n    if (curNode.nodeType === Node.ELEMENT_NODE && element !== curNode) {\n      siblings.push(curNode);\n    }\n  }\n\n  return siblings;\n}\n/**\n * set the value if not exist. Otherwise set the existing value\n *\n * @param  {HTMLElement} element - An element to which we need to set value.\n * @param  {string} property - Property need to get or set.\n * @param  {string} value - value need to set.\n * @returns {string} ?\n * @private\n */\n\n\nfunction getAttributeOrDefault(element, property, value) {\n  let attrVal;\n  const isObj = isObject(element);\n\n  if (isObj) {\n    attrVal = getValue('attributes.' + property, element);\n  } else {\n    attrVal = element.getAttribute(property);\n  }\n\n  if (isNullOrUndefined(attrVal) && value) {\n    if (!isObj) {\n      element.setAttribute(property, value.toString());\n    } else {\n      element.attributes[property] = value;\n    }\n\n    attrVal = value;\n  }\n\n  return attrVal;\n}\n/**\n * Set the style attributes to Html element.\n *\n * @param {HTMLElement} element - Element which we want to set attributes\n * @param {any} attrs - Set the given attributes to element\n * @returns {void} ?\n * @private\n */\n\n\nfunction setStyleAttribute(element, attrs) {\n  if (attrs !== undefined) {\n    Object.keys(attrs).forEach(key => {\n      // eslint-disable-next-line\n      element.style[key] = attrs[key];\n    });\n  }\n}\n/**\n * Method for add and remove classes to a dom element.\n *\n * @param {Element} element - Element for add and remove classes\n * @param {string[]} addClasses - List of classes need to be add to the element\n * @param {string[]} removeClasses - List of classes need to be remove from the element\n * @returns {void} ?\n * @private\n */\n\n\nfunction classList(element, addClasses, removeClasses) {\n  addClass([element], addClasses);\n  removeClass([element], removeClasses);\n}\n/**\n * Method to check whether the element matches the given selector.\n *\n * @param {Element} element - Element to compare with the selector.\n * @param {string} selector - String selector which element will satisfy.\n * @returns {void} ?\n * @private\n */\n\n\nfunction matches(element, selector) {\n  // eslint-disable-next-line\n  let matches = element.matches || element.msMatchesSelector || element.webkitMatchesSelector;\n\n  if (matches) {\n    return matches.call(element, selector);\n  } else {\n    return [].indexOf.call(document.querySelectorAll(selector), element) !== -1;\n  }\n}\n/**\n * Method to get the html text from DOM.\n *\n * @param {HTMLElement} ele - Element to compare with the selector.\n * @param {string} innerHTML - String selector which element will satisfy.\n * @returns {void} ?\n * @private\n */\n\n\nfunction includeInnerHTML(ele, innerHTML) {\n  ele.innerHTML = innerHTML;\n}\n/**\n * Method to get the containsclass.\n *\n * @param {HTMLElement} ele - Element to compare with the selector.\n * @param {string} className - String selector which element will satisfy.\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction containsClass(ele, className) {\n  if (isObject(ele)) {\n    // eslint-disable-next-line\n    return new RegExp('\\\\b' + className + '\\\\b', 'i').test(ele.attributes.className);\n  } else {\n    return ele.classList.contains(className);\n  }\n}\n/**\n * Method to check whether the element matches the given selector.\n *\n * @param {Object} element - Element to compare with the selector.\n * @param {boolean} deep ?\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction cloneNode(element, deep) {\n  if (isObject(element)) {\n    if (deep) {\n      return extend({}, {}, element, true);\n    }\n  } else {\n    return element.cloneNode(deep);\n  }\n}\n\nconst isColEName = new RegExp(']');\n/* tslint:enable:no-any */\n\n/**\n * Base library module is common module for Framework modules like touch,keyboard and etc.,\n *\n * @private\n */\n\nclass Base {\n  /**\n   * Base constructor accept options and element\n   *\n   * @param {Object} options ?\n   * @param {string} element ?\n   */\n  constructor(options, element) {\n    this.isRendered = false;\n    this.isComplexArraySetter = false;\n    this.isServerRendered = false;\n    this.allowServerDataBinding = true;\n    this.isProtectedOnChange = true;\n    this.properties = {};\n    this.changedProperties = {};\n    this.oldProperties = {};\n    this.bulkChanges = {};\n    this.refreshing = false;\n    this.ignoreCollectionWatch = false; // eslint-disable-next-line\n\n    this.finalUpdate = () => {};\n\n    this.childChangedProperties = {};\n    this.modelObserver = new Observer(this);\n\n    if (!isUndefined(element)) {\n      if ('string' === typeof element) {\n        this.element = document.querySelector(element);\n      } else {\n        this.element = element;\n      }\n\n      if (!isNullOrUndefined(this.element)) {\n        this.isProtectedOnChange = false;\n        this.addInstance();\n      }\n    }\n\n    if (!isUndefined(options)) {\n      this.setProperties(options, true);\n    }\n\n    this.isDestroyed = false;\n  }\n  /** Property base section */\n\n  /**\n   * Function used to set bunch of property at a time.\n   *\n   * @private\n   * @param  {Object} prop - JSON object which holds components properties.\n   * @param  {boolean} muteOnChange ? - Specifies to true when we set properties.\n   * @returns {void} ?\n   */\n\n\n  setProperties(prop, muteOnChange) {\n    const prevDetection = this.isProtectedOnChange;\n    this.isProtectedOnChange = !!muteOnChange;\n    merge(this, prop);\n\n    if (muteOnChange !== true) {\n      merge(this.changedProperties, prop);\n      this.dataBind();\n    } else if (isBlazor() && this.isRendered) {\n      this.serverDataBind(prop);\n    }\n\n    this.finalUpdate();\n    this.changedProperties = {};\n    this.oldProperties = {};\n    this.isProtectedOnChange = prevDetection;\n  }\n  /**\n   * Calls for child element data bind\n   *\n   * @param {Object} obj ?\n   * @param {Object} parent ?\n   * @returns {void} ?\n   */\n  // tslint:disable-next-line:no-any\n\n\n  static callChildDataBind(obj, parent) {\n    const keys = Object.keys(obj);\n\n    for (const key of keys) {\n      if (parent[key] instanceof Array) {\n        for (const obj of parent[key]) {\n          if (obj.dataBind !== undefined) {\n            obj.dataBind();\n          }\n        }\n      } else {\n        parent[key].dataBind();\n      }\n    }\n  }\n\n  clearChanges() {\n    this.finalUpdate();\n    this.changedProperties = {};\n    this.oldProperties = {};\n    this.childChangedProperties = {};\n  }\n  /**\n   * Bind property changes immediately to components\n   *\n   * @returns {void} ?\n   */\n\n\n  dataBind() {\n    Base.callChildDataBind(this.childChangedProperties, this);\n\n    if (Object.getOwnPropertyNames(this.changedProperties).length) {\n      const prevDetection = this.isProtectedOnChange;\n      const newChanges = this.changedProperties;\n      const oldChanges = this.oldProperties;\n      this.clearChanges();\n      this.isProtectedOnChange = true;\n      this.onPropertyChanged(newChanges, oldChanges);\n      this.isProtectedOnChange = prevDetection;\n    }\n  }\n  /* tslint:disable:no-any */\n\n\n  serverDataBind(newChanges) {\n    if (!isBlazor()) {\n      return;\n    }\n\n    newChanges = newChanges ? newChanges : {};\n    extend(this.bulkChanges, {}, newChanges, true);\n    const sfBlazor = 'sfBlazor';\n\n    if (this.allowServerDataBinding && window[sfBlazor].updateModel) {\n      window[sfBlazor].updateModel(this);\n      this.bulkChanges = {};\n    }\n  }\n  /* tslint:enable:no-any */\n\n\n  saveChanges(key, newValue, oldValue) {\n    if (isBlazor()) {\n      // tslint:disable-next-line:no-any\n      const newChanges = {};\n      newChanges[key] = newValue;\n      this.serverDataBind(newChanges);\n    }\n\n    if (this.isProtectedOnChange) {\n      return;\n    }\n\n    this.oldProperties[key] = oldValue;\n    this.changedProperties[key] = newValue;\n    this.finalUpdate();\n    this.finalUpdate = setImmediate(this.dataBind.bind(this));\n  }\n  /** Event Base Section */\n\n  /**\n   * Adds the handler to the given event listener.\n   *\n   * @param {string} eventName - A String that specifies the name of the event\n   * @param {Function} handler - Specifies the call to run when the event occurs.\n   * @returns {void} ?\n   */\n\n\n  addEventListener(eventName, handler) {\n    this.modelObserver.on(eventName, handler);\n  }\n  /**\n   * Removes the handler from the given event listener.\n   *\n   * @param {string} eventName - A String that specifies the name of the event to remove\n   * @param {Function} handler - Specifies the function to remove\n   * @returns {void} ?\n   */\n\n\n  removeEventListener(eventName, handler) {\n    this.modelObserver.off(eventName, handler);\n  }\n  /**\n   * Triggers the handlers in the specified event.\n   *\n   * @private\n   * @param {string} eventName - Specifies the event to trigger for the specified component properties.\n   * Can be a custom event, or any of the standard events.\n   * @param {Event} eventProp - Additional parameters to pass on to the event properties\n   * @param {Function} successHandler - this function will invoke after event successfully triggered\n   * @param {Function} errorHandler - this function will invoke after event if it failured to call.\n   * @returns {void} ?\n   */\n\n\n  trigger(eventName, eventProp, successHandler, errorHandler) {\n    if (this.isDestroyed !== true) {\n      const prevDetection = this.isProtectedOnChange;\n      this.isProtectedOnChange = false;\n      let data = this.modelObserver.notify(eventName, eventProp, successHandler, errorHandler);\n\n      if (isColEName.test(eventName)) {\n        const handler = getValue(eventName, this);\n\n        if (handler) {\n          const blazor = 'Blazor';\n\n          if (window[blazor]) {\n            const promise = handler.call(this, eventProp);\n\n            if (promise && typeof promise.then === 'function') {\n              if (!successHandler) {\n                data = promise;\n              } else {\n                promise.then(data => {\n                  if (successHandler) {\n                    data = typeof data === 'string' && this.modelObserver.isJson(data) ? JSON.parse(data) : data;\n                    successHandler.call(this, data);\n                  }\n                }).catch(data => {\n                  if (errorHandler) {\n                    data = typeof data === 'string' && this.modelObserver.isJson(data) ? JSON.parse(data) : data;\n                    errorHandler.call(this, data);\n                  }\n                });\n              }\n            } else if (successHandler) {\n              successHandler.call(this, eventProp);\n            }\n          } else {\n            handler.call(this, eventProp);\n\n            if (successHandler) {\n              successHandler.call(this, eventProp);\n            }\n          }\n        } else if (successHandler) {\n          successHandler.call(this, eventProp);\n        }\n      }\n\n      this.isProtectedOnChange = prevDetection;\n      return data;\n    }\n  }\n  /**\n   * To maintain instance in base class\n   *\n   * @returns {void} ?\n   */\n\n\n  addInstance() {\n    // Add module class to the root element\n    const moduleClass = 'e-' + this.getModuleName().toLowerCase();\n    addClass([this.element], ['e-lib', moduleClass]);\n\n    if (!isNullOrUndefined(this.element.ej2_instances)) {\n      this.element.ej2_instances.push(this);\n    } else {\n      setValue('ej2_instances', [this], this.element);\n    }\n  }\n  /**\n   * To remove the instance from the element\n   *\n   * @returns {void} ?\n   */\n\n\n  destroy() {\n    // eslint-disable-next-line\n    this.element.ej2_instances = this.element.ej2_instances.filter(i => {\n      return i !== this;\n    });\n    removeClass([this.element], ['e-' + this.getModuleName()]);\n\n    if (this.element.ej2_instances.length === 0) {\n      // Remove module class from the root element\n      removeClass([this.element], ['e-lib']);\n    }\n\n    this.clearChanges();\n    this.modelObserver.destroy();\n    this.isDestroyed = true;\n  }\n\n}\n/**\n * Global function to get the component instance from the rendered element.\n *\n * @param {HTMLElement} elem Specifies the HTMLElement or element id string.\n * @param {string} comp Specifies the component module name or Component.\n * @returns {any} ?\n */\n// tslint:disable-next-line:no-any\n\n\nfunction getComponent(elem, comp) {\n  let instance;\n  let i;\n  const ele = typeof elem === 'string' ? document.getElementById(elem) : elem;\n\n  for (i = 0; i < ele.ej2_instances.length; i++) {\n    instance = ele.ej2_instances[i];\n\n    if (typeof comp === 'string') {\n      const compName = instance.getModuleName();\n\n      if (comp === compName) {\n        return instance;\n      }\n    } else {\n      // tslint:disable-next-line:no-any\n      if (instance instanceof comp) {\n        return instance;\n      }\n    }\n  }\n\n  return undefined;\n}\n/**\n * Function to remove the child instances.\n *\n * @param {HTMLElement} element ?\n * @return {void}\n * @private\n */\n// tslint:disable-next-line:no-any\n\n\nfunction removeChildInstance(element) {\n  // tslint:disable-next-line:no-any\n  const childEle = [].slice.call(element.getElementsByClassName('e-control'));\n\n  for (let i = 0; i < childEle.length; i++) {\n    const compName = childEle[i].classList[1].split('e-')[1]; // tslint:disable-next-line:no-any\n\n    const compInstance = getComponent(childEle[i], compName);\n\n    if (!isUndefined(compInstance)) {\n      compInstance.destroy();\n    }\n  }\n}\n/**\n * Returns the Class Object\n *\n * @param {ClassObject} instance - instance of ClassObject\n * @param {string} curKey - key of the current instance\n * @param {Object} defaultValue - default Value\n * @param {Object[]} type ?\n * @returns {ClassObject} ?\n */\n// eslint-disable-next-line\n\n\nfunction getObject(instance, curKey, defaultValue, type) {\n  // eslint-disable-next-line\n  if (!instance.properties.hasOwnProperty(curKey) || !(instance.properties[curKey] instanceof type)) {\n    instance.properties[curKey] = createInstance(type, [instance, curKey, defaultValue]);\n  }\n\n  return instance.properties[curKey];\n}\n/**\n * Returns object array\n *\n * @param {ClassObject} instance ?\n * @param {string} curKey ?\n * @param {Object[]} defaultValue ?\n * @param {Object} type ?\n * @param {boolean} isSetter ?\n * @param {boolean} isFactory ?\n * @returns {Object[]} ?\n */\n// eslint-disable-next-line\n\n\nfunction getObjectArray(instance, curKey, defaultValue, type, isSetter, isFactory) {\n  const result = [];\n  const len = defaultValue ? defaultValue.length : 0;\n\n  for (let i = 0; i < len; i++) {\n    let curType = type;\n\n    if (isFactory) {\n      curType = type(defaultValue[i], instance);\n    }\n\n    if (isSetter) {\n      const inst = createInstance(curType, [instance, curKey, {}, true]);\n      inst.setProperties(defaultValue[i], true);\n      result.push(inst);\n    } else {\n      result.push(createInstance(curType, [instance, curKey, defaultValue[i], false]));\n    }\n  }\n\n  return result;\n}\n/**\n * Returns the properties of the object\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @returns {void} ?\n */\n\n\nfunction propertyGetter(defaultValue, curKey) {\n  return function () {\n    // eslint-disable-next-line\n    if (!this.properties.hasOwnProperty(curKey)) {\n      this.properties[curKey] = defaultValue;\n    }\n\n    return this.properties[curKey];\n  };\n}\n/**\n * Set the properties for the object\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @returns {void} ?\n */\n\n\nfunction propertySetter(defaultValue, curKey) {\n  return function (newValue) {\n    if (this.properties[curKey] !== newValue) {\n      // eslint-disable-next-line\n      let oldVal = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;\n      this.saveChanges(curKey, newValue, oldVal);\n      this.properties[curKey] = newValue;\n    }\n  };\n}\n/**\n * Returns complex objects\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n// eslint-disable-next-line\n\n\nfunction complexGetter(defaultValue, curKey, type) {\n  return function () {\n    return getObject(this, curKey, defaultValue, type);\n  };\n}\n/**\n * Sets complex objects\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n\n\nfunction complexSetter(defaultValue, curKey, type) {\n  return function (newValue) {\n    getObject(this, curKey, defaultValue, type).setProperties(newValue);\n  };\n}\n/**\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {FunctionConstructor} type ?\n * @returns {void} ?\n */\n// eslint-disable-next-line\n\n\nfunction complexFactoryGetter(defaultValue, curKey, type) {\n  return function () {\n    const curType = type({}); // eslint-disable-next-line\n\n    if (this.properties.hasOwnProperty(curKey)) {\n      return this.properties[curKey];\n    } else {\n      return getObject(this, curKey, defaultValue, curType);\n    }\n  };\n}\n/**\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n\n\nfunction complexFactorySetter(defaultValue, curKey, type) {\n  return function (newValue) {\n    const curType = type(newValue, this);\n    getObject(this, curKey, defaultValue, curType).setProperties(newValue);\n  };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n\n\nfunction complexArrayGetter(defaultValue, curKey, type) {\n  return function () {\n    // eslint-disable-next-line\n    if (!this.properties.hasOwnProperty(curKey)) {\n      const defCollection = getObjectArray(this, curKey, defaultValue, type, false);\n      this.properties[curKey] = defCollection;\n    }\n\n    const ignore = this.controlParent !== undefined && this.controlParent.ignoreCollectionWatch || this.ignoreCollectionWatch; // eslint-disable-next-line\n\n    if (!this.properties[curKey].hasOwnProperty('push') && !ignore) {\n      ['push', 'pop'].forEach(extendFunc => {\n        const descriptor = {\n          value: complexArrayDefinedCallback(extendFunc, curKey, type, this.properties[curKey]).bind(this),\n          configurable: true\n        };\n        Object.defineProperty(this.properties[curKey], extendFunc, descriptor);\n      });\n    } // eslint-disable-next-line\n\n\n    if (!this.properties[curKey].hasOwnProperty('isComplexArray')) {\n      Object.defineProperty(this.properties[curKey], 'isComplexArray', {\n        value: true\n      });\n    }\n\n    return this.properties[curKey];\n  };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n\n\nfunction complexArraySetter(defaultValue, curKey, type) {\n  return function (newValue) {\n    this.isComplexArraySetter = true;\n    const oldValueCollection = getObjectArray(this, curKey, defaultValue, type, false);\n    const newValCollection = getObjectArray(this, curKey, newValue, type, true);\n    this.isComplexArraySetter = false;\n    this.saveChanges(curKey, newValCollection, oldValueCollection);\n    this.properties[curKey] = newValCollection;\n  };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n\n\nfunction complexArrayFactorySetter(defaultValue, curKey, type) {\n  return function (newValue) {\n    // eslint-disable-next-line\n    const oldValueCollection = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;\n    const newValCollection = getObjectArray(this, curKey, newValue, type, true, true);\n    this.saveChanges(curKey, newValCollection, oldValueCollection);\n    this.properties[curKey] = newValCollection;\n  };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {FunctionConstructor} type ?\n * @returns {void} ?\n */\n\n\nfunction complexArrayFactoryGetter(defaultValue, curKey, type) {\n  return function () {\n    const curType = type({}); // eslint-disable-next-line\n\n    if (!this.properties.hasOwnProperty(curKey)) {\n      const defCollection = getObjectArray(this, curKey, defaultValue, curType, false);\n      this.properties[curKey] = defCollection;\n    }\n\n    return this.properties[curKey];\n  };\n}\n/**\n *\n * @param {string} dFunc ?\n * @param {string} curKey ?\n * @param {Object} type ?\n * @param {Object} prop ?\n * @returns {Object} ?\n */\n\n\nfunction complexArrayDefinedCallback(dFunc, curKey, type, prop) {\n  /* tslint:disable no-function-expression */\n  return function (...newValue) {\n    const keyString = this.propName ? this.getParentKey() + '.' + curKey + '-' : curKey + '-';\n\n    switch (dFunc) {\n      case 'push':\n        for (let i = 0; i < newValue.length; i++) {\n          Array.prototype[dFunc].apply(prop, [newValue[i]]);\n          const model = getArrayModel(keyString + (prop.length - 1), newValue[i], !this.controlParent, dFunc);\n          this.serverDataBind(model, newValue[i], false, dFunc);\n        }\n\n        break;\n\n      case 'pop':\n        Array.prototype[dFunc].apply(prop); // eslint-disable-next-line\n\n        let model = getArrayModel(keyString + prop.length, null, !this.controlParent, dFunc);\n        this.serverDataBind(model, {\n          ejsAction: 'pop'\n        }, false, dFunc);\n        break;\n    }\n\n    return prop;\n  };\n}\n/**\n *\n * @param {string} keyString ?\n * @param {Object} value ?\n * @param {boolean} isControlParent ?\n * @param {string} arrayFunction ?\n * @returns {Object} ?\n */\n\n\nfunction getArrayModel(keyString, value, isControlParent, arrayFunction) {\n  let modelObject = keyString;\n\n  if (isControlParent) {\n    modelObject = {};\n    modelObject[keyString] = value;\n\n    if (value && typeof value === 'object') {\n      const action = 'ejsAction';\n      modelObject[keyString][action] = arrayFunction;\n    }\n  }\n\n  return modelObject;\n} // eslint-disable-next-line\n\n/**\n * Method used to create property. General syntax below.\n *\n * @param {Object} defaultValue - Specifies the default value of property.\n * @returns {PropertyDecorator} ?\n * ```\n * @Property('TypeScript')\n * propertyName: Type;\n * ```\n * @private\n */\n\n\nfunction Property(defaultValue) {\n  return (target, key) => {\n    const propertyDescriptor = {\n      set: propertySetter(defaultValue, key),\n      get: propertyGetter(defaultValue, key),\n      enumerable: true,\n      configurable: true\n    }; //new property creation\n\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'prop', defaultValue);\n  };\n}\n/**\n * Method used to create complex property. General syntax below.\n *\n * @param  {any} defaultValue - Specifies the default value of property.\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @Complex<Type>({},Type)\n * propertyName: Type;\n * ```\n * @private\n */\n\n\nfunction Complex(defaultValue, type) {\n  return (target, key) => {\n    const propertyDescriptor = {\n      set: complexSetter(defaultValue, key, type),\n      get: complexGetter(defaultValue, key, type),\n      enumerable: true,\n      configurable: true\n    }; //new property creation\n\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'complexProp', defaultValue, type);\n  };\n}\n/**\n * Method used to create complex Factory property. General syntax below.\n *\n * @param  {Function} type - Specifies the class factory type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @ComplexFactory(defaultType, factoryFunction)\n * propertyName: Type1 | Type2;\n * ```\n * @private\n */\n\n\nfunction ComplexFactory(type) {\n  return (target, key) => {\n    const propertyDescriptor = {\n      set: complexFactorySetter({}, key, type),\n      get: complexFactoryGetter({}, key, type),\n      enumerable: true,\n      configurable: true\n    }; //new property creation\n\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'complexProp', {}, type);\n  };\n}\n/**\n * Method used to create complex array property. General syntax below.\n *\n * @param  {any} defaultValue - Specifies the default value of property.\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @Collection([], Type);\n * propertyName: Type;\n * ```\n * @private\n */\n\n\nfunction Collection(defaultValue, type) {\n  return (target, key) => {\n    const propertyDescriptor = {\n      set: complexArraySetter(defaultValue, key, type),\n      get: complexArrayGetter(defaultValue, key, type),\n      enumerable: true,\n      configurable: true\n    }; //new property creation\n\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'colProp', defaultValue, type);\n  };\n}\n/**\n * Method used to create complex factory array property. General syntax below.\n *\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyCollectionInfo} ?\n * ```\n * @Collection([], Type);\n * propertyName: Type;\n * ```\n * @private\n */\n\n\nfunction CollectionFactory(type) {\n  return (target, key) => {\n    const propertyDescriptor = {\n      set: complexArrayFactorySetter([], key, type),\n      get: complexArrayFactoryGetter([], key, type),\n      enumerable: true,\n      configurable: true\n    }; //new property creation\n\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'colProp', {}, type);\n  };\n}\n/**\n * Method used to create event property. General syntax below.\n *\n * @returns {PropertyDecorator} ?\n * ```\n * @Event(()=>{return true;})\n * ```\n * @private\n */\n\n\nfunction Event$1() {\n  return (target, key) => {\n    const eventDescriptor = {\n      set: function (newValue) {\n        const oldValue = this.properties[key];\n\n        if (oldValue !== newValue) {\n          const finalContext = getParentContext(this, key);\n\n          if (isUndefined(oldValue) === false) {\n            finalContext.context.removeEventListener(finalContext.prefix, oldValue);\n          }\n\n          finalContext.context.addEventListener(finalContext.prefix, newValue);\n          this.properties[key] = newValue;\n        }\n      },\n      get: propertyGetter(undefined, key),\n      enumerable: true,\n      configurable: true\n    };\n    Object.defineProperty(target, key, eventDescriptor);\n    addPropertyCollection(target, key, 'event');\n  };\n}\n/**\n * NotifyPropertyChanges is triggers the call back when the property has been changed.\n *\n * @param {Function} classConstructor ?\n * @returns {void} ?\n * ```\n *  @NotifyPropertyChanges\n * class DemoClass implements INotifyPropertyChanged {\n *\n *     @Property()\n *     property1: string;\n *\n *     dataBind: () => void;\n *\n *     constructor() { }\n *\n *     onPropertyChanged(newProp: any, oldProp: any) {\n *         // Called when property changed\n *     }\n * }\n * ```\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction NotifyPropertyChanges(classConstructor) {\n  /** Need to code */\n}\n/**\n * Method  used to create the builderObject for the target component.\n *\n * @param {BuildInfo} target ?\n * @param {string} key ?\n * @param {string} propertyType ?\n * @param {Object} defaultValue ?\n * @param {Function} type ?\n * @returns {void} ?\n * @private\n */\n\n\nfunction addPropertyCollection(target, key, propertyType, defaultValue, type) {\n  if (isUndefined(target.propList)) {\n    target.propList = {\n      props: [],\n      complexProps: [],\n      colProps: [],\n      events: [],\n      propNames: [],\n      complexPropNames: [],\n      colPropNames: [],\n      eventNames: []\n    };\n  } // eslint-disable-next-line\n\n\n  target.propList[propertyType + 's'].push({\n    propertyName: key,\n    defaultValue: defaultValue,\n    type: type\n  }); // eslint-disable-next-line\n\n  target.propList[propertyType + 'Names'].push(key);\n}\n/**\n * Returns an object containing the builder properties\n *\n * @param {Function} component ?\n * @returns {Object} ?\n * @private\n */\n\n\nfunction getBuilderProperties(component) {\n  if (isUndefined(component.prototype.builderObject)) {\n    component.prototype.builderObject = {\n      properties: {},\n      propCollections: [],\n      add: function () {\n        this.isPropertyArray = true;\n        this.propCollections.push(extend({}, this.properties, {}));\n      }\n    };\n    const rex = /complex/;\n\n    for (const key of Object.keys(component.prototype.propList)) {\n      for (const prop of component.prototype.propList[key]) {\n        if (rex.test(key)) {\n          component.prototype.builderObject[prop.propertyName] = function (value) {\n            const childType = {};\n            merge(childType, getBuilderProperties(prop.type));\n            value(childType);\n            let tempValue;\n\n            if (!childType.isPropertyArray) {\n              tempValue = extend({}, childType.properties, {});\n            } else {\n              tempValue = childType.propCollections;\n            }\n\n            this.properties[prop.propertyName] = tempValue;\n            childType.properties = {};\n            childType.propCollections = [];\n            childType.isPropertyArray = false;\n            return this;\n          };\n        } else {\n          component.prototype.builderObject[prop.propertyName] = function (value) {\n            this.properties[prop.propertyName] = value;\n            return this;\n          };\n        }\n      }\n    }\n  }\n\n  return component.prototype.builderObject;\n}\n/**\n * Method used to create builder for the components\n *\n * @param {any} component -specifies the target component for which builder to be created.\n * @returns {Object} ?\n * @private\n */\n\n\nfunction CreateBuilder(component) {\n  const builderFunction = function (element) {\n    this.element = element;\n    return this;\n  };\n\n  const instanceFunction = element => {\n    // eslint-disable-next-line\n    if (!builderFunction.prototype.hasOwnProperty('create')) {\n      builderFunction.prototype = getBuilderProperties(component);\n\n      builderFunction.prototype.create = function () {\n        const temp = extend({}, {}, this.properties);\n        this.properties = {};\n        return new component(temp, this.element);\n      };\n    }\n\n    return new builderFunction(element);\n  };\n\n  return instanceFunction;\n}\n/**\n * Returns parent options for the object\n *\n * @param {Object} context ?\n * @param {string} prefix ?\n * @returns {ParentOption} ?\n * @private\n */\n\n\nfunction getParentContext(context, prefix) {\n  // eslint-disable-next-line\n  if (context.hasOwnProperty('parentObj') === false) {\n    return {\n      context: context,\n      prefix: prefix\n    };\n  } else {\n    const curText = getValue('propName', context);\n\n    if (curText) {\n      prefix = curText + '-' + prefix;\n    }\n\n    return getParentContext(getValue('parentObj', context), prefix);\n  }\n}\n\nvar __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar Animation_1;\n/**\n * The Animation framework provide options to animate the html DOM elements\n * ```typescript\n *   let animeObject = new Animation({\n *      name: 'SlideLeftIn',\n *      duration: 1000\n *   });\n *   animeObject.animate('#anime1');\n *   animeObject.animate('#anime2', { duration: 500 });\n * ```\n */\n\nlet Animation = Animation_1 = class Animation extends Base {\n  constructor(options) {\n    super(options, undefined);\n    /**\n     * @private\n     */\n\n    this.easing = {\n      ease: 'cubic-bezier(0.250, 0.100, 0.250, 1.000)',\n      linear: 'cubic-bezier(0.250, 0.250, 0.750, 0.750)',\n      easeIn: 'cubic-bezier(0.420, 0.000, 1.000, 1.000)',\n      easeOut: 'cubic-bezier(0.000, 0.000, 0.580, 1.000)',\n      easeInOut: 'cubic-bezier(0.420, 0.000, 0.580, 1.000)',\n      elasticInOut: 'cubic-bezier(0.5,-0.58,0.38,1.81)',\n      elasticIn: 'cubic-bezier(0.17,0.67,0.59,1.81)',\n      elasticOut: 'cubic-bezier(0.7,-0.75,0.99,1.01)'\n    };\n  }\n  /**\n   * Applies animation to the current element.\n   *\n   * @param {string | HTMLElement} element - Element which needs to be animated.\n   * @param {AnimationModel} options - Overriding default animation settings.\n   * @returns {void} ?\n   */\n\n\n  animate(element, options) {\n    options = !options ? {} : options;\n    const model = this.getModel(options);\n\n    if (typeof element === 'string') {\n      const elements = Array.prototype.slice.call(selectAll(element, document));\n\n      for (const element of elements) {\n        model.element = element;\n        Animation_1.delayAnimation(model);\n      }\n    } else {\n      model.element = element;\n      Animation_1.delayAnimation(model);\n    }\n  }\n  /**\n   * Stop the animation effect on animated element.\n   *\n   * @param {HTMLElement} element - Element which needs to be stop the animation.\n   * @param {AnimationOptions} model - Handling the animation model at stop function.\n   * @return {void}\n   */\n\n\n  static stop(element, model) {\n    element.style.animation = '';\n    element.removeAttribute('e-animate');\n    const animationId = element.getAttribute('e-animation-id');\n\n    if (animationId) {\n      const frameId = parseInt(animationId, 10);\n      cancelAnimationFrame(frameId);\n      element.removeAttribute('e-animation-id');\n    }\n\n    if (model && model.end) {\n      model.end.call(this, model);\n    }\n  }\n  /**\n   * Set delay to animation element\n   *\n   * @param {AnimationModel} model ?\n   * @returns {void}\n   */\n\n\n  static delayAnimation(model) {\n    if (model.delay) {\n      setTimeout(() => {\n        Animation_1.applyAnimation(model);\n      }, model.delay);\n    } else {\n      Animation_1.applyAnimation(model);\n    }\n  }\n  /**\n   * Triggers animation\n   *\n   * @param {AnimationModel} model ?\n   * @returns {void}\n   */\n\n\n  static applyAnimation(model) {\n    model.timeStamp = 0;\n    let step = 0;\n    let timerId = 0;\n    let prevTimeStamp = 0;\n    const duration = model.duration;\n    model.element.setAttribute('e-animate', 'true');\n\n    const startAnimation = timeStamp => {\n      try {\n        if (timeStamp) {\n          // let step: number = model.timeStamp = timeStamp - startTime;\n\n          /** phantomjs workaround for timestamp fix */\n          prevTimeStamp = prevTimeStamp === 0 ? timeStamp : prevTimeStamp;\n          model.timeStamp = timeStamp + model.timeStamp - prevTimeStamp;\n          prevTimeStamp = timeStamp;\n          /** phantomjs workaround end */\n          // trigger animation begin event\n\n          if (!step && model.begin) {\n            model.begin.call(this, model);\n          }\n\n          step = step + 1;\n          const avg = model.timeStamp / step;\n\n          if (model.timeStamp < duration && model.timeStamp + avg < duration && model.element.getAttribute('e-animate')) {\n            // apply animation effect to the current element\n            model.element.style.animation = model.name + ' ' + model.duration + 'ms ' + model.timingFunction;\n\n            if (model.progress) {\n              model.progress.call(this, model);\n            } // repeat requestAnimationFrame\n\n\n            requestAnimationFrame(startAnimation);\n          } else {\n            // clear requestAnimationFrame\n            cancelAnimationFrame(timerId);\n            model.element.removeAttribute('e-animation-id');\n            model.element.removeAttribute('e-animate');\n            model.element.style.animation = '';\n\n            if (model.end) {\n              model.end.call(this, model);\n            }\n          }\n        } else {\n          //startTime = performance.now();\n          // set initial requestAnimationFrame\n          timerId = requestAnimationFrame(startAnimation);\n          model.element.setAttribute('e-animation-id', timerId.toString());\n        }\n      } catch (e) {\n        cancelAnimationFrame(timerId);\n        model.element.removeAttribute('e-animation-id');\n\n        if (model.fail) {\n          model.fail.call(this, e);\n        }\n      }\n    };\n\n    startAnimation();\n  }\n  /**\n   * Returns Animation Model\n   *\n   * @param {AnimationModel} options ?\n   * @returns {AnimationModel} ?\n   */\n\n\n  getModel(options) {\n    return {\n      name: options.name || this.name,\n      delay: options.delay || this.delay,\n      duration: options.duration !== undefined ? options.duration : this.duration,\n      begin: options.begin || this.begin,\n      end: options.end || this.end,\n      fail: options.fail || this.fail,\n      progress: options.progress || this.progress,\n      timingFunction: this.easing[options.timingFunction] ? this.easing[options.timingFunction] : options.timingFunction || this.easing[this.timingFunction]\n    };\n  }\n  /**\n   * @private\n   * @param {AnimationModel} newProp ?\n   * @param {AnimationModel} oldProp ?\n   * @returns {void} ?\n   */\n  // eslint-disable-next-line\n\n\n  onPropertyChanged(newProp, oldProp) {// no code needed\n  }\n  /**\n   * Returns module name as animation\n   *\n   * @private\n   * @returns {void} ?\n   */\n\n\n  getModuleName() {\n    return 'animation';\n  }\n  /**\n   *\n   * @private\n   * @returns {void} ?\n   */\n\n\n  destroy() {//Override base destroy;\n  }\n\n};\n\n__decorate([Property('FadeIn')], Animation.prototype, \"name\", void 0);\n\n__decorate([Property(400)], Animation.prototype, \"duration\", void 0);\n\n__decorate([Property('ease')], Animation.prototype, \"timingFunction\", void 0);\n\n__decorate([Property(0)], Animation.prototype, \"delay\", void 0);\n\n__decorate([Event$1()], Animation.prototype, \"progress\", void 0);\n\n__decorate([Event$1()], Animation.prototype, \"begin\", void 0);\n\n__decorate([Event$1()], Animation.prototype, \"end\", void 0);\n\n__decorate([Event$1()], Animation.prototype, \"fail\", void 0);\n\nAnimation = Animation_1 = __decorate([NotifyPropertyChanges], Animation);\n/**\n * Ripple provides material theme's wave effect when an element is clicked\n * ```html\n * <div id='ripple'></div>\n * <script>\n *   rippleEffect(document.getElementById('ripple'));\n * </script>\n * ```\n *\n * @private\n * @param {HTMLElement} element - Target element\n * @param {RippleOptions} rippleOptions - Ripple options .\n * @param {Function} done .\n * @returns {void} .\n */\n\nfunction rippleEffect(element, rippleOptions, done) {\n  const rippleModel = getRippleModel(rippleOptions);\n\n  if (rippleModel.rippleFlag === false || rippleModel.rippleFlag === undefined && !isRippleEnabled) {\n    return Function;\n  }\n\n  element.setAttribute('data-ripple', 'true');\n  EventHandler.add(element, 'mousedown', rippleHandler, {\n    parent: element,\n    rippleOptions: rippleModel\n  });\n  EventHandler.add(element, 'mouseup', rippleUpHandler, {\n    parent: element,\n    rippleOptions: rippleModel,\n    done: done\n  });\n  EventHandler.add(element, 'mouseleave', rippleLeaveHandler, {\n    parent: element,\n    rippleOptions: rippleModel\n  });\n\n  if (Browser.isPointer) {\n    EventHandler.add(element, 'transitionend', rippleLeaveHandler, {\n      parent: element,\n      rippleOptions: rippleModel\n    });\n  }\n\n  return () => {\n    element.removeAttribute('data-ripple');\n    EventHandler.remove(element, 'mousedown', rippleHandler);\n    EventHandler.remove(element, 'mouseup', rippleUpHandler);\n    EventHandler.remove(element, 'mouseleave', rippleLeaveHandler);\n    EventHandler.remove(element, 'transitionend', rippleLeaveHandler);\n  };\n}\n/**\n * Handler for ripple model\n *\n * @param {RippleOptions} rippleOptions ?\n * @returns {RippleOptions} ?\n */\n\n\nfunction getRippleModel(rippleOptions) {\n  const rippleModel = {\n    selector: rippleOptions && rippleOptions.selector ? rippleOptions.selector : null,\n    ignore: rippleOptions && rippleOptions.ignore ? rippleOptions.ignore : null,\n    rippleFlag: rippleOptions && rippleOptions.rippleFlag,\n    isCenterRipple: rippleOptions && rippleOptions.isCenterRipple,\n    duration: rippleOptions && rippleOptions.duration ? rippleOptions.duration : 350\n  };\n  return rippleModel;\n}\n/**\n * Handler for ripple event\n *\n * @param {MouseEvent} e ?\n * @returns {void} ?\n * @private\n */\n\n\nfunction rippleHandler(e) {\n  const target = e.target;\n  const selector = this.rippleOptions.selector;\n  const element = selector ? closest(target, selector) : target;\n\n  if (!element || this.rippleOptions && closest(target, this.rippleOptions.ignore)) {\n    return;\n  }\n\n  const offset = element.getBoundingClientRect();\n  const offsetX = e.pageX - document.body.scrollLeft;\n  const offsetY = e.pageY - (!document.body.scrollTop && document.documentElement ? document.documentElement.scrollTop : document.body.scrollTop);\n  const pageX = Math.max(Math.abs(offsetX - offset.left), Math.abs(offsetX - offset.right));\n  const pageY = Math.max(Math.abs(offsetY - offset.top), Math.abs(offsetY - offset.bottom));\n  const radius = Math.sqrt(pageX * pageX + pageY * pageY);\n  let diameter = radius * 2 + 'px';\n  let x = offsetX - offset.left - radius;\n  let y = offsetY - offset.top - radius;\n\n  if (this.rippleOptions && this.rippleOptions.isCenterRipple) {\n    x = 0;\n    y = 0;\n    diameter = '100%';\n  }\n\n  element.classList.add('e-ripple');\n  const duration = this.rippleOptions.duration.toString();\n  const styles = 'width: ' + diameter + ';height: ' + diameter + ';left: ' + x + 'px;top: ' + y + 'px;' + 'transition-duration: ' + duration + 'ms;';\n  const rippleElement = createElement('div', {\n    className: 'e-ripple-element',\n    styles: styles\n  });\n  element.appendChild(rippleElement);\n  window.getComputedStyle(rippleElement).getPropertyValue('opacity');\n  rippleElement.style.transform = 'scale(1)';\n\n  if (element !== this.parent) {\n    EventHandler.add(element, 'mouseleave', rippleLeaveHandler, {\n      parent: this.parent,\n      rippleOptions: this.rippleOptions\n    });\n  }\n}\n/**\n * Handler for ripple element mouse up event\n *\n * @param {MouseEvent} e ?\n * @returns {void} ?\n * @private\n */\n\n\nfunction rippleUpHandler(e) {\n  removeRipple(e, this);\n}\n/**\n * Handler for ripple element mouse move event\n *\n * @param {MouseEvent} e ?\n * @returns {void} ?\n * @private\n */\n\n\nfunction rippleLeaveHandler(e) {\n  removeRipple(e, this);\n}\n/**\n * Handler for removing ripple element\n *\n * @param {MouseEvent} e ?\n * @param {RippleArgs} eventArgs ?\n * @returns {void} ?\n * @private\n */\n\n\nfunction removeRipple(e, eventArgs) {\n  const duration = eventArgs.rippleOptions.duration;\n  const target = e.target;\n  const selector = eventArgs.rippleOptions.selector;\n  const element = selector ? closest(target, selector) : target;\n\n  if (!element || element && element.className.indexOf('e-ripple') === -1) {\n    return;\n  }\n\n  const rippleElements = selectAll('.e-ripple-element', element);\n  const rippleElement = rippleElements[rippleElements.length - 1];\n\n  if (rippleElement) {\n    rippleElement.style.opacity = '0.5';\n  }\n\n  if (eventArgs.parent !== element) {\n    EventHandler.remove(element, 'mouseleave', rippleLeaveHandler);\n  }\n  /* tslint:disable:align */\n\n\n  setTimeout(() => {\n    if (rippleElement && rippleElement.parentNode) {\n      rippleElement.parentNode.removeChild(rippleElement);\n    }\n\n    if (!element.getElementsByClassName('e-ripple-element').length) {\n      element.classList.remove('e-ripple');\n    }\n\n    if (eventArgs.done) {\n      eventArgs.done(e);\n    }\n  }, duration);\n}\n\nlet isRippleEnabled = false;\n/**\n * Animation Module provides support to enable ripple effect functionality to Essential JS 2 components.\n *\n * @param {boolean} isRipple Specifies the boolean value to enable or disable ripple effect.\n * @returns {boolean} ?\n */\n\nfunction enableRipple(isRipple) {\n  isRippleEnabled = isRipple;\n  return isRippleEnabled;\n}\n/**\n * Module loading operations\n */\n\n\nconst MODULE_SUFFIX = 'Module';\n\nclass ModuleLoader {\n  constructor(parent) {\n    this.loadedModules = [];\n    this.parent = parent;\n  }\n  /**\n   * Inject required modules in component library\n   *\n   * @returns {void} ?\n   * @param {ModuleDeclaration[]} requiredModules - Array of modules to be required\n   * @param {Function[]} moduleList - Array of modules to be injected from sample side\n   */\n\n\n  inject(requiredModules, moduleList) {\n    const reqLength = requiredModules.length;\n\n    if (reqLength === 0) {\n      this.clean();\n      return;\n    }\n\n    if (this.loadedModules.length) {\n      this.clearUnusedModule(requiredModules);\n    }\n\n    for (let i = 0; i < reqLength; i++) {\n      const modl = requiredModules[i];\n\n      for (const module of moduleList) {\n        const modName = modl.member;\n\n        if (module.prototype.getModuleName() === modl.member && !this.isModuleLoaded(modName)) {\n          const moduleObject = createInstance(module, modl.args);\n          const memberName = this.getMemberName(modName);\n\n          if (modl.isProperty) {\n            setValue(memberName, module, this.parent);\n          } else {\n            setValue(memberName, moduleObject, this.parent);\n          }\n\n          const loadedModule = modl;\n          loadedModule.member = memberName;\n          this.loadedModules.push(loadedModule);\n        }\n      }\n    }\n  }\n  /**\n   * To remove the created object while destroying the control\n   *\n   * @returns {void}\n   */\n\n\n  clean() {\n    for (const modules of this.loadedModules) {\n      if (!modules.isProperty) {\n        getValue(modules.member, this.parent).destroy();\n      }\n    }\n\n    this.loadedModules = [];\n  }\n  /**\n   * Removes all unused modules\n   *\n   * @param {ModuleDeclaration[]} moduleList ?\n   * @returns {void} ?\n   */\n\n\n  clearUnusedModule(moduleList) {\n    const usedModules = moduleList.map(arg => {\n      return this.getMemberName(arg.member);\n    });\n    const removableModule = this.loadedModules.filter(module => {\n      return usedModules.indexOf(module.member) === -1;\n    });\n\n    for (const mod of removableModule) {\n      if (!mod.isProperty) {\n        getValue(mod.member, this.parent).destroy();\n      }\n\n      this.loadedModules.splice(this.loadedModules.indexOf(mod), 1);\n      deleteObject(this.parent, mod.member);\n    }\n  }\n  /**\n   * To get the name of the member.\n   *\n   * @param {string} name ?\n   * @returns {string} ?\n   */\n\n\n  getMemberName(name) {\n    return name[0].toLowerCase() + name.substring(1) + MODULE_SUFFIX;\n  }\n  /**\n   * Returns boolean based on whether the module specified is loaded or not\n   *\n   * @param {string} modName ?\n   * @returns {boolean} ?\n   */\n\n\n  isModuleLoaded(modName) {\n    for (const mod of this.loadedModules) {\n      if (mod.member === this.getMemberName(modName)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n/**\n * To detect the changes for inner properties.\n *\n * @private\n */\n\n\nclass ChildProperty {\n  constructor(parent, propName, defaultValue, isArray) {\n    this.isComplexArraySetter = false;\n    this.properties = {};\n    this.changedProperties = {};\n    this.childChangedProperties = {};\n    this.oldProperties = {}; // eslint-disable-next-line\n\n    this.finalUpdate = () => {};\n\n    this.callChildDataBind = getValue('callChildDataBind', Base);\n    this.parentObj = parent;\n    this.controlParent = this.parentObj.controlParent || this.parentObj;\n    this.propName = propName;\n    this.isParentArray = isArray;\n    this.setProperties(defaultValue, true);\n  }\n  /**\n   * Updates the property changes\n   *\n   * @param {boolean} val ?\n   * @param {string} propName ?\n   * @returns {void} ?\n   */\n\n\n  updateChange(val, propName) {\n    if (val === true) {\n      this.parentObj.childChangedProperties[propName] = val;\n    } else {\n      delete this.parentObj.childChangedProperties[propName];\n    }\n\n    if (this.parentObj.updateChange) {\n      this.parentObj.updateChange(val, this.parentObj.propName);\n    }\n  }\n  /**\n   * Updates time out duration\n   *\n   * @returns {void} ?\n   */\n\n\n  updateTimeOut() {\n    if (this.parentObj.updateTimeOut) {\n      this.parentObj.finalUpdate();\n      this.parentObj.updateTimeOut();\n    } else {\n      const changeTime = setTimeout(this.parentObj.dataBind.bind(this.parentObj));\n\n      const clearUpdate = () => {\n        clearTimeout(changeTime);\n      };\n\n      this.finalUpdate = clearUpdate;\n    }\n  }\n  /**\n   * Clears changed properties\n   *\n   * @returns {void} ?\n   */\n\n\n  clearChanges() {\n    this.finalUpdate();\n    this.updateChange(false, this.propName);\n    this.oldProperties = {};\n    this.changedProperties = {};\n  }\n  /**\n   * Set property changes\n   *\n   * @param {Object} prop ?\n   * @param {boolean} muteOnChange ?\n   * @returns {void} ?\n   */\n\n\n  setProperties(prop, muteOnChange) {\n    if (muteOnChange === true) {\n      merge(this, prop);\n      this.updateChange(false, this.propName);\n      this.clearChanges();\n    } else {\n      merge(this, prop);\n    }\n  }\n  /**\n   * Binds data\n   *\n   * @returns {void} ?\n   */\n\n\n  dataBind() {\n    this.callChildDataBind(this.childChangedProperties, this);\n\n    if (this.isParentArray) {\n      const curIndex = this.parentObj[this.propName].indexOf(this);\n\n      if (Object.keys(this.changedProperties).length) {\n        setValue(this.propName + '.' + curIndex, this.changedProperties, this.parentObj.changedProperties);\n        setValue(this.propName + '.' + curIndex, this.oldProperties, this.parentObj.oldProperties);\n      }\n    } else {\n      this.parentObj.changedProperties[this.propName] = this.changedProperties;\n      this.parentObj.oldProperties[this.propName] = this.oldProperties;\n    }\n\n    this.clearChanges();\n  }\n  /**\n   * Saves changes to newer values\n   *\n   * @param {string} key ?\n   * @param {Object} newValue ?\n   * @param {Object} oldValue ?\n   * @param {boolean} restrictServerDataBind ?\n   * @returns {void} ?\n   */\n\n\n  saveChanges(key, newValue, oldValue, restrictServerDataBind) {\n    if (this.controlParent.isProtectedOnChange) {\n      return;\n    }\n\n    if (!restrictServerDataBind) {\n      this.serverDataBind(key, newValue, true);\n    }\n\n    this.oldProperties[key] = oldValue;\n    this.changedProperties[key] = newValue;\n    this.updateChange(true, this.propName);\n    this.finalUpdate();\n    this.updateTimeOut();\n  }\n\n  serverDataBind(key, value, isSaveChanges, action) {\n    if (isBlazor() && !this.parentObj.isComplexArraySetter) {\n      let parent;\n      const newChanges = {};\n      const parentKey = isSaveChanges ? this.getParentKey(true) + '.' + key : key;\n      /* istanbul ignore else  */\n\n      if (parentKey.indexOf('.') !== -1) {\n        const complexKeys = parentKey.split('.');\n        parent = newChanges;\n\n        for (let i = 0; i < complexKeys.length; i++) {\n          const isFinal = i === complexKeys.length - 1;\n          parent[complexKeys[i]] = isFinal ? value : {};\n          parent = isFinal ? parent : parent[complexKeys[i]];\n        }\n      } else {\n        newChanges[parentKey] = {};\n        parent = newChanges[parentKey];\n        newChanges[parentKey][key] = value;\n      }\n      /* istanbul ignore next */\n\n\n      if (this.isParentArray) {\n        const actionProperty = 'ejsAction';\n        parent[actionProperty] = action ? action : 'none';\n      }\n\n      this.controlParent.serverDataBind(newChanges);\n    }\n  }\n\n  getParentKey(isSaveChanges) {\n    // eslint-disable-next-line\n    let index = '';\n    let propName = this.propName;\n    /* istanbul ignore next */\n\n    if (this.isParentArray) {\n      index = this.parentObj[this.propName].indexOf(this);\n      let valueLength = this.parentObj[this.propName].length;\n      valueLength = isSaveChanges ? valueLength : valueLength > 0 ? valueLength - 1 : 0;\n      index = index !== -1 ? '-' + index : '-' + valueLength;\n      propName = propName + index;\n    }\n\n    if (this.controlParent !== this.parentObj) {\n      propName = this.parentObj.getParentKey() + '.' + this.propName + index;\n    }\n\n    return propName;\n  }\n\n}\n\nvar __decorate$1 = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nlet componentCount = 0;\nlet lastPageID;\nlet lastHistoryLen = 0;\nlet versionBasedStatePersistence = false;\n/**\n * To enable or disable version based statePersistence functionality for all components globally.\n *\n * @param {boolean} status - Optional argument Specifies the status value to enable or disable versionBasedStatePersistence option.\n * @returns {void}\n */\n\nfunction enableVersionBasedPersistence(status) {\n  versionBasedStatePersistence = status;\n}\n/**\n * Base class for all Essential JavaScript components\n */\n\n\nlet Component = class Component extends Base {\n  /**\n   * Initialize the constructor for component base\n   *\n   * @param {Object} options ?\n   * @param {string} selector ?\n   */\n  constructor(options, selector) {\n    super(options, selector);\n    this.randomId = uniqueID();\n    /**\n     * string template option for Blazor template rendering\n     *\n     * @private\n     */\n\n    this.isStringTemplate = false;\n    this.needsID = false;\n    this.isReactHybrid = false;\n\n    if (isNullOrUndefined(this.enableRtl)) {\n      this.setProperties({\n        'enableRtl': rightToLeft\n      }, true);\n    }\n\n    if (isNullOrUndefined(this.locale)) {\n      this.setProperties({\n        'locale': defaultCulture\n      }, true);\n    }\n\n    this.moduleLoader = new ModuleLoader(this);\n    this.localObserver = new Observer(this); // tslint:disable-next-line:no-function-constructor-with-string-args\n\n    onIntlChange.on('notifyExternalChange', this.detectFunction, this, this.randomId);\n\n    if (!isUndefined(selector)) {\n      this.appendTo();\n    }\n  }\n\n  requiredModules() {\n    return [];\n  }\n  /**\n   * Destroys the sub modules while destroying the widget\n   *\n   * @returns {void} ?\n   */\n\n\n  destroy() {\n    if (this.isDestroyed) {\n      return;\n    }\n\n    if (this.enablePersistence) {\n      this.setPersistData();\n    }\n\n    this.localObserver.destroy();\n\n    if (this.refreshing) {\n      return;\n    }\n\n    removeClass([this.element], ['e-control']);\n    this.trigger('destroyed', {\n      cancel: false\n    });\n    super.destroy();\n    this.moduleLoader.clean();\n    onIntlChange.off('notifyExternalChange', this.detectFunction, this.randomId);\n  }\n  /**\n   * Applies all the pending property changes and render the component again.\n   *\n   * @returns {void} ?\n   */\n\n\n  refresh() {\n    this.refreshing = true;\n    this.moduleLoader.clean();\n    this.destroy();\n    this.clearChanges();\n    this.localObserver = new Observer(this);\n    this.preRender();\n    this.injectModules();\n    this.render();\n    this.refreshing = false;\n  }\n\n  accessMount() {\n    if (this.mount && !this.isReactHybrid) {\n      this.mount();\n    }\n  }\n  /**\n   * Returns the route element of the component\n   *\n   * @returns {HTMLElement} ?\n   */\n\n\n  getRootElement() {\n    if (this.isReactHybrid) {\n      // eslint-disable-next-line\n      return this.actualElement;\n    } else {\n      return this.element;\n    }\n  }\n  /**\n   * Returns the persistence data for component\n   *\n   * @returns {any} ?\n   */\n  // eslint-disable-next-line\n\n\n  getLocalData() {\n    const eleId = this.getModuleName() + this.element.id;\n\n    if (versionBasedStatePersistence) {\n      return window.localStorage.getItem(eleId + this.ej2StatePersistenceVersion);\n    } else {\n      return window.localStorage.getItem(eleId);\n    }\n  }\n  /**\n   * Appends the control within the given HTML element\n   *\n   * @param {string | HTMLElement} selector - Target element where control needs to be appended\n   * @returns {void} ?\n   */\n\n\n  appendTo(selector) {\n    if (!isNullOrUndefined(selector) && typeof selector === 'string') {\n      this.element = select(selector, document);\n    } else if (!isNullOrUndefined(selector)) {\n      this.element = selector;\n    }\n\n    if (!isNullOrUndefined(this.element)) {\n      const moduleClass = 'e-' + this.getModuleName().toLowerCase();\n      addClass([this.element], ['e-control', moduleClass]);\n      this.isProtectedOnChange = false;\n\n      if (this.needsID && !this.element.id) {\n        this.element.id = this.getUniqueID(this.getModuleName());\n      }\n\n      if (this.enablePersistence) {\n        this.mergePersistData();\n        window.addEventListener('unload', this.setPersistData.bind(this));\n      }\n\n      const inst = getValue('ej2_instances', this.element);\n\n      if (!inst || inst.indexOf(this) === -1) {\n        super.addInstance();\n      }\n\n      this.preRender();\n      this.injectModules();\n      this.render();\n\n      if (!this.mount) {\n        this.trigger('created');\n      } else {\n        this.accessMount();\n      }\n    }\n  }\n  /**\n   * It is used to process the post rendering functionalities to a component.\n   *\n   * @param {Node} wrapperElement ?\n   * @returns {void} ?\n   */\n\n\n  renderComplete(wrapperElement) {\n    if (isBlazor()) {\n      const sfBlazor = 'sfBlazor'; // eslint-disable-next-line\n\n      window[sfBlazor].renderComplete(this.element, wrapperElement);\n    }\n\n    this.isRendered = true;\n  }\n  /**\n   * When invoked, applies the pending property changes immediately to the component.\n   *\n   * @returns {void} ?\n   */\n\n\n  dataBind() {\n    this.injectModules();\n    super.dataBind();\n  }\n  /**\n   * Attach one or more  event handler to the current component context.\n   * It is used for internal handling event internally within the component only.\n   *\n   * @param {BoundOptions[]| string} event - It is  optional type either to  Set the collection of event list or the eventName.\n   * @param {Function} handler - optional parameter Specifies the handler to run when the event occurs\n   * @param {Object} context - optional parameter Specifies the context to be bind in the handler.\n   * @returns {void} ?\n   * @private\n   */\n\n\n  on(event, handler, context) {\n    if (typeof event === 'string') {\n      this.localObserver.on(event, handler, context);\n    } else {\n      for (const arg of event) {\n        this.localObserver.on(arg.event, arg.handler, arg.context);\n      }\n    }\n  }\n  /**\n   * To remove one or more event handler that has been attached with the on() method.\n   *\n   * @param {BoundOptions[]| string} event - It is  optional type either to  Set the collection of event list or the eventName.\n   * @param {Function} handler - optional parameter Specifies the function to run when the event occurs\n   * @returns {void} ?\n   * @private\n   */\n\n\n  off(event, handler) {\n    if (typeof event === 'string') {\n      this.localObserver.off(event, handler);\n    } else {\n      for (const arg of event) {\n        this.localObserver.off(arg.event, arg.handler);\n      }\n    }\n  }\n  /**\n   * To notify the handlers in the specified event.\n   *\n   * @param {string} property - Specifies the event to be notify.\n   * @param {Object} argument - Additional parameters to pass while calling the handler.\n   * @returns {void} ?\n   * @private\n   */\n\n\n  notify(property, argument) {\n    if (this.isDestroyed !== true) {\n      this.localObserver.notify(property, argument);\n    }\n  }\n  /**\n   * Get injected modules\n   *\n   * @returns {Function} ?\n   * @private\n   */\n\n\n  getInjectedModules() {\n    return this.injectedModules;\n  }\n  /**\n   * Dynamically injects the required modules to the component.\n   *\n   * @param {Function} moduleList ?\n   * @returns {void} ?\n   */\n\n\n  static Inject(...moduleList) {\n    if (!this.prototype.injectedModules) {\n      this.prototype.injectedModules = [];\n    }\n\n    for (let i = 0; i < moduleList.length; i++) {\n      if (this.prototype.injectedModules.indexOf(moduleList[i]) === -1) {\n        this.prototype.injectedModules.push(moduleList[i]);\n      }\n    }\n  }\n  /**\n   * This is a instance method to create an element.\n   *\n   * @param {string} tagName ?\n   * @param {ElementProperties} prop ?\n   * @param {boolean} isVDOM ?\n   * @returns {any} ?\n   * @private\n   */\n  // eslint-disable-next-line\n\n\n  createElement(tagName, prop, isVDOM) {\n    return createElement(tagName, prop);\n  }\n  /**\n   *\n   * @param {Function} handler - handler to be triggered after state Updated.\n   * @param {any} argument - Arguments to be passed to caller.\n   * @returns {void} .\n   * @private\n   */\n  // eslint-disable-next-line\n\n\n  triggerStateChange(handler, argument) {\n    if (this.isReactHybrid) {\n      // eslint-disable-next-line\n      this.setState();\n      this.currentContext = {\n        calls: handler,\n        args: argument\n      };\n    }\n  } // tslint: enable: no-any\n\n\n  injectModules() {\n    if (this.injectedModules && this.injectedModules.length) {\n      this.moduleLoader.inject(this.requiredModules(), this.injectedModules);\n    }\n  }\n\n  detectFunction(args) {\n    const prop = Object.keys(args);\n\n    if (prop.length) {\n      this[prop[0]] = args[prop[0]];\n    }\n  }\n\n  mergePersistData() {\n    let data;\n\n    if (versionBasedStatePersistence) {\n      data = window.localStorage.getItem(this.getModuleName() + this.element.id + this.ej2StatePersistenceVersion);\n    } else {\n      data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n    }\n\n    if (!(isNullOrUndefined(data) || data === '')) {\n      this.setProperties(JSON.parse(data), true);\n    }\n  }\n\n  setPersistData() {\n    if (!this.isDestroyed) {\n      if (versionBasedStatePersistence) {\n        window.localStorage.setItem(this.getModuleName() + this.element.id + this.ej2StatePersistenceVersion, this.getPersistData());\n      } else {\n        window.localStorage.setItem(this.getModuleName() + this.element.id, this.getPersistData());\n      }\n    }\n  } //tslint:disable-next-line\n\n\n  renderReactTemplates() {//No Code\n  } // eslint-disable-next-line\n\n\n  clearTemplate(templateName, index) {//No Code\n  }\n\n  getUniqueID(definedName) {\n    if (this.isHistoryChanged()) {\n      componentCount = 0;\n    }\n\n    lastPageID = this.pageID(location.href);\n    lastHistoryLen = history.length;\n    return definedName + '_' + lastPageID + '_' + componentCount++;\n  }\n\n  pageID(url) {\n    let hash = 0;\n\n    if (url.length === 0) {\n      return hash;\n    }\n\n    for (let i = 0; i < url.length; i++) {\n      const char = url.charCodeAt(i);\n      hash = (hash << 5) - hash + char;\n      hash = hash & hash; // Convert to 32bit integer\n    }\n\n    return Math.abs(hash);\n  }\n\n  isHistoryChanged() {\n    return lastPageID !== this.pageID(location.href) || lastHistoryLen !== history.length;\n  }\n\n  addOnPersist(options) {\n    const persistObj = {};\n\n    for (const key of options) {\n      let objValue; // eslint-disable-next-line\n\n      objValue = getValue(key, this);\n\n      if (!isUndefined(objValue)) {\n        setValue(key, this.getActualProperties(objValue), persistObj);\n      }\n    }\n\n    return JSON.stringify(persistObj, (key, value) => {\n      return this.getActualProperties(value);\n    });\n  }\n\n  getActualProperties(obj) {\n    if (obj instanceof ChildProperty) {\n      return getValue('properties', obj);\n    } else {\n      return obj;\n    }\n  }\n\n  ignoreOnPersist(options) {\n    return JSON.stringify(this.iterateJsonProperties(this.properties, options));\n  }\n\n  iterateJsonProperties(obj, ignoreList) {\n    const newObj = {};\n\n    for (const key of Object.keys(obj)) {\n      if (ignoreList.indexOf(key) === -1) {\n        // eslint-disable-next-line\n        const value = obj[key];\n\n        if (typeof value === 'object' && !(value instanceof Array)) {\n          const newList = ignoreList.filter(str => {\n            return new RegExp(key + '.').test(str);\n          }).map(str => {\n            return str.replace(key + '.', '');\n          });\n          newObj[key] = this.iterateJsonProperties(this.getActualProperties(value), newList);\n        } else {\n          newObj[key] = value;\n        }\n      }\n    }\n\n    return newObj;\n  }\n\n};\n\n__decorate$1([Property(false)], Component.prototype, \"enablePersistence\", void 0);\n\n__decorate$1([Property()], Component.prototype, \"enableRtl\", void 0);\n\n__decorate$1([Property()], Component.prototype, \"locale\", void 0);\n\nComponent = __decorate$1([NotifyPropertyChanges], Component); //Function handling for page navigation detection\n\n/* istanbul ignore next */\n\n(() => {\n  if (typeof window !== 'undefined') {\n    window.addEventListener('popstate',\n    /* istanbul ignore next */\n    () => {\n      componentCount = 0;\n    });\n  }\n})();\n\nvar __decorate$2 = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar Draggable_1;\nconst defaultPosition = {\n  left: 0,\n  top: 0,\n  bottom: 0,\n  right: 0\n};\nconst isDraggedObject = {\n  isDragged: false\n};\n/**\n * Specifies the position coordinates\n */\n\nclass Position extends ChildProperty {}\n\n__decorate$2([Property(0)], Position.prototype, \"left\", void 0);\n\n__decorate$2([Property(0)], Position.prototype, \"top\", void 0);\n/**\n * Draggable Module provides support to enable draggable functionality in Dom Elements.\n * ```html\n * <div id='drag'>Draggable</div>\n * <script>\n * var ele = document.getElementById('drag');\n * var drag:Draggable = new Draggable(ele,{\n *     clone:false,\n *     drag: function(e) {\n *      //drag handler code.\n *      },\n *     handle:'.class'\n * });\n * </script>\n * ```\n */\n\n\nlet Draggable = Draggable_1 = class Draggable extends Base {\n  constructor(element, options) {\n    super(options, element);\n    this.dragLimit = Draggable_1.getDefaultPosition();\n    this.borderWidth = Draggable_1.getDefaultPosition();\n    this.padding = Draggable_1.getDefaultPosition();\n    this.diffX = 0;\n    this.prevLeft = 0;\n    this.prevTop = 0;\n    this.dragProcessStarted = false;\n    /* tslint:disable no-any */\n\n    this.tapHoldTimer = 0;\n    this.externalInitialize = false;\n    this.diffY = 0;\n    this.parentScrollX = 0;\n    this.parentScrollY = 0;\n    this.droppables = {};\n    this.bind();\n  }\n\n  bind() {\n    this.toggleEvents();\n\n    if (Browser.isIE) {\n      addClass([this.element], 'e-block-touch');\n    }\n\n    this.droppables[this.scope] = {};\n  }\n\n  static getDefaultPosition() {\n    return extend({}, defaultPosition);\n  }\n\n  toggleEvents(isUnWire) {\n    let ele;\n\n    if (!isUndefined(this.handle)) {\n      ele = select(this.handle, this.element);\n    }\n\n    let handler = this.enableTapHold && Browser.isDevice && Browser.isTouch ? this.mobileInitialize : this.initialize;\n\n    if (isUnWire) {\n      EventHandler.remove(ele || this.element, Browser.touchStartEvent, handler);\n    } else {\n      EventHandler.add(ele || this.element, Browser.touchStartEvent, handler, this);\n    }\n  }\n  /* istanbul ignore next */\n\n\n  mobileInitialize(evt) {\n    let target = evt.currentTarget;\n    this.tapHoldTimer = setTimeout(() => {\n      this.externalInitialize = true;\n      this.removeTapholdTimer();\n      this.initialize(evt, target);\n    }, this.tapHoldThreshold);\n    EventHandler.add(document, Browser.touchMoveEvent, this.removeTapholdTimer, this);\n    EventHandler.add(document, Browser.touchEndEvent, this.removeTapholdTimer, this);\n  }\n  /* istanbul ignore next */\n\n\n  removeTapholdTimer() {\n    clearTimeout(this.tapHoldTimer);\n    EventHandler.remove(document, Browser.touchMoveEvent, this.removeTapholdTimer);\n    EventHandler.remove(document, Browser.touchEndEvent, this.removeTapholdTimer);\n  }\n  /* istanbul ignore next */\n\n\n  getScrollableParent(element, axis) {\n    let scroll = {\n      'vertical': 'scrollHeight',\n      'horizontal': 'scrollWidth'\n    };\n    let client = {\n      'vertical': 'clientHeight',\n      'horizontal': 'clientWidth'\n    };\n\n    if (isNullOrUndefined(element)) {\n      return null;\n    }\n\n    if (element[scroll[axis]] > element[client[axis]]) {\n      if (axis === 'vertical' ? element.scrollTop > 0 : element.scrollLeft > 0) {\n        if (axis === 'vertical') {\n          this.parentScrollY = this.parentScrollY + (this.parentScrollY === 0 ? element.scrollTop : element.scrollTop - this.parentScrollY);\n          this.tempScrollHeight = element.scrollHeight;\n        } else {\n          this.parentScrollX = this.parentScrollX + (this.parentScrollX === 0 ? element.scrollLeft : element.scrollLeft - this.parentScrollX);\n          this.tempScrollWidth = element.scrollWidth;\n        }\n\n        if (!isNullOrUndefined(element)) {\n          return this.getScrollableParent(element.parentNode, axis);\n        } else {\n          return element;\n        }\n      } else {\n        return this.getScrollableParent(element.parentNode, axis);\n      }\n    } else {\n      return this.getScrollableParent(element.parentNode, axis);\n    }\n  }\n\n  getScrollableValues() {\n    this.parentScrollX = 0;\n    this.parentScrollY = 0;\n    let isModalDialog = this.element.classList.contains('e-dialog') && this.element.classList.contains('e-dlg-modal');\n    let verticalScrollParent = this.getScrollableParent(this.element.parentNode, 'vertical');\n    let horizontalScrollParent = this.getScrollableParent(this.element.parentNode, 'horizontal');\n  }\n\n  initialize(evt, curTarget) {\n    this.currentStateTarget = evt.target;\n\n    if (this.isDragStarted()) {\n      return;\n    } else {\n      this.isDragStarted(true);\n      this.externalInitialize = false;\n    }\n\n    this.target = evt.currentTarget || curTarget;\n    this.dragProcessStarted = false;\n\n    if (this.abort) {\n      /* tslint:disable no-any */\n      let abortSelectors = this.abort;\n\n      if (typeof abortSelectors === 'string') {\n        abortSelectors = [abortSelectors];\n      }\n\n      for (let i = 0; i < abortSelectors.length; i++) {\n        if (!isNullOrUndefined(closest(evt.target, abortSelectors[i]))) {\n          /* istanbul ignore next */\n          if (this.isDragStarted()) {\n            this.isDragStarted(true);\n          }\n\n          return;\n        }\n      }\n    }\n\n    if (this.preventDefault && !isUndefined(evt.changedTouches) && evt.type !== 'touchstart') {\n      evt.preventDefault();\n    }\n\n    this.element.setAttribute('aria-grabbed', 'true');\n    let intCoord = this.getCoordinates(evt);\n    this.initialPosition = {\n      x: intCoord.pageX,\n      y: intCoord.pageY\n    };\n\n    if (!this.clone) {\n      let pos = this.element.getBoundingClientRect();\n      this.getScrollableValues();\n\n      if (evt.clientX === evt.pageX) {\n        this.parentScrollX = 0;\n      }\n\n      if (evt.clientY === evt.pageY) {\n        this.parentScrollY = 0;\n      }\n\n      this.relativeXPosition = intCoord.pageX - (pos.left + this.parentScrollX);\n      this.relativeYPosition = intCoord.pageY - (pos.top + this.parentScrollY);\n    }\n\n    if (this.externalInitialize) {\n      this.intDragStart(evt);\n    } else {\n      EventHandler.add(document, Browser.touchMoveEvent, this.intDragStart, this);\n      EventHandler.add(document, Browser.touchEndEvent, this.intDestroy, this);\n    }\n\n    this.toggleEvents(true);\n\n    if (evt.type !== 'touchstart' && this.isPreventSelect) {\n      document.body.classList.add('e-prevent-select');\n    }\n\n    this.externalInitialize = false;\n    EventHandler.trigger(document.documentElement, Browser.touchStartEvent, evt);\n  }\n\n  intDragStart(evt) {\n    this.removeTapholdTimer();\n    let isChangeTouch = !isUndefined(evt.changedTouches);\n\n    if (isChangeTouch && evt.changedTouches.length !== 1) {\n      return;\n    }\n\n    if (isChangeTouch) {\n      evt.preventDefault();\n    }\n\n    let intCordinate = this.getCoordinates(evt);\n    let pos;\n    let styleProp = getComputedStyle(this.element);\n    this.margin = {\n      left: parseInt(styleProp.marginLeft, 10),\n      top: parseInt(styleProp.marginTop, 10),\n      right: parseInt(styleProp.marginRight, 10),\n      bottom: parseInt(styleProp.marginBottom, 10)\n    };\n    let element = this.element;\n\n    if (this.clone && this.dragTarget) {\n      let intClosest = closest(evt.target, this.dragTarget);\n\n      if (!isNullOrUndefined(intClosest)) {\n        element = intClosest;\n      }\n    }\n    /* istanbul ignore next */\n\n\n    if (this.isReplaceDragEle) {\n      element = this.currentStateCheck(evt.target, element);\n    }\n\n    this.offset = this.calculateParentPosition(element);\n    this.position = this.getMousePosition(evt, this.isDragScroll);\n    let x = this.initialPosition.x - intCordinate.pageX;\n    let y = this.initialPosition.y - intCordinate.pageY;\n    let distance = Math.sqrt(x * x + y * y);\n\n    if (distance >= this.distance || this.externalInitialize) {\n      let ele = this.getHelperElement(evt);\n\n      if (!ele || isNullOrUndefined(ele)) {\n        return;\n      }\n\n      let dragTargetElement = this.helperElement = ele;\n      this.parentClientRect = this.calculateParentPosition(dragTargetElement.offsetParent);\n\n      if (this.dragStart) {\n        let curTarget = this.getProperTargetElement(evt);\n        let args = {\n          event: evt,\n          element: element,\n          target: curTarget,\n          bindEvents: isBlazor() ? this.bindDragEvents.bind(this) : null,\n          dragElement: dragTargetElement\n        };\n        this.trigger('dragStart', args);\n      }\n\n      if (this.dragArea) {\n        this.setDragArea();\n      } else {\n        this.dragLimit = {\n          left: 0,\n          right: 0,\n          bottom: 0,\n          top: 0\n        };\n        this.borderWidth = {\n          top: 0,\n          left: 0\n        };\n      }\n\n      pos = {\n        left: this.position.left - this.parentClientRect.left,\n        top: this.position.top - this.parentClientRect.top\n      };\n\n      if (this.clone && !this.enableTailMode) {\n        this.diffX = this.position.left - this.offset.left;\n        this.diffY = this.position.top - this.offset.top;\n      }\n\n      this.getScrollableValues(); // when drag element has margin-top\n\n      let styles = getComputedStyle(element);\n      let marginTop = parseFloat(styles.marginTop);\n      /* istanbul ignore next */\n\n      if (this.clone && marginTop !== 0) {\n        pos.top += marginTop;\n      }\n\n      if (this.enableScrollHandler && !this.clone) {\n        pos.top -= this.parentScrollY;\n        pos.left -= this.parentScrollX;\n      }\n\n      let posValue = this.getProcessedPositionValue({\n        top: pos.top - this.diffY + 'px',\n        left: pos.left - this.diffX + 'px'\n      });\n      this.dragElePosition = {\n        top: pos.top,\n        left: pos.left\n      };\n      setStyleAttribute(dragTargetElement, this.getDragPosition({\n        position: 'absolute',\n        left: posValue.left,\n        top: posValue.top\n      }));\n      EventHandler.remove(document, Browser.touchMoveEvent, this.intDragStart);\n      EventHandler.remove(document, Browser.touchEndEvent, this.intDestroy);\n\n      if (!isBlazor()) {\n        this.bindDragEvents(dragTargetElement);\n      }\n    }\n  }\n\n  bindDragEvents(dragTargetElement) {\n    if (isVisible(dragTargetElement)) {\n      EventHandler.add(document, Browser.touchMoveEvent, this.intDrag, this);\n      EventHandler.add(document, Browser.touchEndEvent, this.intDragStop, this);\n      this.setGlobalDroppables(false, this.element, dragTargetElement);\n    } else {\n      this.toggleEvents();\n      document.body.classList.remove('e-prevent-select');\n    }\n  }\n\n  elementInViewport(el) {\n    this.top = el.offsetTop;\n    this.left = el.offsetLeft;\n    this.width = el.offsetWidth;\n    this.height = el.offsetHeight;\n\n    while (el.offsetParent) {\n      el = el.offsetParent;\n      this.top += el.offsetTop;\n      this.left += el.offsetLeft;\n    }\n\n    return this.top >= window.pageYOffset && this.left >= window.pageXOffset && this.top + this.height <= window.pageYOffset + window.innerHeight && this.left + this.width <= window.pageXOffset + window.innerWidth;\n  }\n\n  getProcessedPositionValue(value) {\n    if (this.queryPositionInfo) {\n      return this.queryPositionInfo(value);\n    }\n\n    return value;\n  }\n\n  calculateParentPosition(ele) {\n    if (isNullOrUndefined(ele)) {\n      return {\n        left: 0,\n        top: 0\n      };\n    }\n\n    let rect = ele.getBoundingClientRect();\n    let style = getComputedStyle(ele);\n    return {\n      left: rect.left + window.pageXOffset - parseInt(style.marginLeft, 10),\n      top: rect.top + window.pageYOffset - parseInt(style.marginTop, 10)\n    };\n  } // tslint:disable-next-line:max-func-body-length\n\n\n  intDrag(evt) {\n    if (!isUndefined(evt.changedTouches) && evt.changedTouches.length !== 1) {\n      return;\n    }\n\n    let left;\n    let top;\n    this.position = this.getMousePosition(evt, this.isDragScroll);\n    let docHeight = this.getDocumentWidthHeight('Height');\n\n    if (docHeight < this.position.top) {\n      this.position.top = docHeight;\n    }\n\n    let docWidth = this.getDocumentWidthHeight('Width');\n\n    if (docWidth < this.position.left) {\n      this.position.left = docWidth;\n    }\n\n    if (this.drag) {\n      let curTarget = this.getProperTargetElement(evt);\n      this.trigger('drag', {\n        event: evt,\n        element: this.element,\n        target: curTarget\n      });\n    }\n\n    let eleObj = this.checkTargetElement(evt);\n\n    if (eleObj.target && eleObj.instance) {\n      /* tslint:disable no-any */\n      let flag = true;\n\n      if (this.hoverObject) {\n        if (this.hoverObject.instance !== eleObj.instance) {\n          this.triggerOutFunction(evt, eleObj);\n        } else {\n          flag = false;\n        }\n      }\n\n      if (flag) {\n        eleObj.instance.dragData[this.scope] = this.droppables[this.scope];\n        eleObj.instance.intOver(evt, eleObj.target);\n        this.hoverObject = eleObj;\n      }\n    } else if (this.hoverObject) {\n      this.triggerOutFunction(evt, eleObj);\n    }\n\n    let helperElement = this.droppables[this.scope].helper;\n    this.parentClientRect = this.calculateParentPosition(this.helperElement.offsetParent);\n    let tLeft = this.parentClientRect.left;\n    let tTop = this.parentClientRect.top;\n    let intCoord = this.getCoordinates(evt);\n    let pagex = intCoord.pageX;\n    let pagey = intCoord.pageY;\n    let dLeft = this.position.left - this.diffX;\n    let dTop = this.position.top - this.diffY;\n    let styles = getComputedStyle(helperElement);\n    let marginTop = parseFloat(styles.marginTop);\n\n    if (this.dragArea) {\n      if (this.pageX !== pagex || this.skipDistanceCheck) {\n        let helperWidth = helperElement.offsetWidth + (parseFloat(styles.marginLeft) + parseFloat(styles.marginRight));\n\n        if (this.dragLimit.left > dLeft && dLeft > 0) {\n          left = this.dragLimit.left;\n        } else if (this.dragLimit.right + window.pageXOffset < dLeft + helperWidth && dLeft > 0) {\n          left = dLeft - (dLeft - this.dragLimit.right) + window.pageXOffset - helperWidth;\n        } else {\n          left = dLeft < 0 ? this.dragLimit.left : dLeft;\n        }\n      }\n\n      if (this.pageY !== pagey || this.skipDistanceCheck) {\n        let helperHeight = helperElement.offsetHeight + (parseFloat(styles.marginTop) + parseFloat(styles.marginBottom));\n\n        if (this.dragLimit.top > dTop && dTop > 0) {\n          top = this.dragLimit.top;\n        } else if (this.dragLimit.bottom + window.pageYOffset < dTop + helperHeight && dTop > 0) {\n          top = dTop - (dTop - this.dragLimit.bottom) + window.pageYOffset - helperHeight;\n        } else {\n          top = dTop < 0 ? this.dragLimit.top : dTop;\n        }\n      }\n    } else {\n      left = dLeft;\n      top = dTop;\n    }\n\n    let iTop = tTop + this.borderWidth.top;\n    let iLeft = tLeft + this.borderWidth.left;\n\n    if (this.dragProcessStarted) {\n      if (isNullOrUndefined(top)) {\n        top = this.prevTop;\n      }\n\n      if (isNullOrUndefined(left)) {\n        left = this.prevLeft;\n      }\n    }\n\n    let draEleTop;\n    let draEleLeft;\n\n    if (this.dragArea) {\n      this.dragLimit.top = this.clone ? this.dragLimit.top : 0;\n      draEleTop = top - iTop < 0 ? this.dragLimit.top : top - iTop;\n      draEleLeft = left - iLeft < 0 ? this.dragElePosition.left : left - iLeft; // when drag-element has margin-top\n\n      /* istanbul ignore next */\n\n      if (marginTop > 0) {\n        if (this.clone) {\n          draEleTop += this.element.offsetTop;\n\n          if (dTop < 0) {\n            if (this.element.offsetTop + dTop >= 0) {\n              draEleTop = this.element.offsetTop + dTop;\n            } else {\n              draEleTop -= this.element.offsetTop;\n            }\n          }\n\n          draEleTop = this.dragLimit.bottom < draEleTop ? this.dragLimit.bottom : draEleTop;\n        }\n\n        if (top - iTop < 0) {\n          if (dTop + marginTop + (helperElement.offsetHeight - iTop) >= 0) {\n            let tempDraEleTop = this.dragLimit.top + dTop - iTop;\n\n            if (tempDraEleTop + marginTop + iTop < 0) {\n              draEleTop -= marginTop + iTop;\n            } else {\n              draEleTop = tempDraEleTop;\n            }\n          } else {\n            draEleTop -= marginTop + iTop;\n          }\n        }\n      }\n    } else {\n      draEleTop = top - iTop;\n      draEleLeft = left - iLeft;\n    }\n\n    if (this.enableScrollHandler && !this.clone) {\n      draEleTop -= this.parentScrollY;\n      draEleLeft -= this.parentScrollX;\n    }\n\n    let dragValue = this.getProcessedPositionValue({\n      top: draEleTop + 'px',\n      left: draEleLeft + 'px'\n    });\n    setStyleAttribute(helperElement, this.getDragPosition(dragValue));\n\n    if (!this.elementInViewport(helperElement) && this.enableAutoScroll) {\n      this.helperElement.scrollIntoView();\n    }\n\n    this.dragProcessStarted = true;\n    this.prevLeft = left;\n    this.prevTop = top;\n    this.position.left = left;\n    this.position.top = top;\n    this.pageX = pagex;\n    this.pageY = pagey;\n  }\n\n  triggerOutFunction(evt, eleObj) {\n    this.hoverObject.instance.intOut(evt, eleObj.target);\n    this.hoverObject.instance.dragData[this.scope] = null;\n    this.hoverObject = null;\n  }\n\n  getDragPosition(dragValue) {\n    let temp = extend({}, dragValue);\n\n    if (this.axis) {\n      if (this.axis === 'x') {\n        delete temp.top;\n      } else if (this.axis === 'y') {\n        delete temp.left;\n      }\n    }\n\n    return temp;\n  }\n\n  getDocumentWidthHeight(str) {\n    let docBody = document.body;\n    let docEle = document.documentElement;\n    let returnValue = Math.max(docBody['scroll' + str], docEle['scroll' + str], docBody['offset' + str], docEle['offset' + str], docEle['client' + str]);\n    return returnValue;\n  }\n\n  intDragStop(evt) {\n    this.dragProcessStarted = false;\n\n    if (!isUndefined(evt.changedTouches) && evt.changedTouches.length !== 1) {\n      return;\n    }\n\n    let type = ['touchend', 'pointerup', 'mouseup'];\n\n    if (type.indexOf(evt.type) !== -1) {\n      if (this.dragStop) {\n        let curTarget = this.getProperTargetElement(evt);\n        this.trigger('dragStop', {\n          event: evt,\n          element: this.element,\n          target: curTarget,\n          helper: this.helperElement\n        });\n      }\n\n      this.intDestroy(evt);\n    } else {\n      this.element.setAttribute('aria-grabbed', 'false');\n    }\n\n    let eleObj = this.checkTargetElement(evt);\n\n    if (eleObj.target && eleObj.instance) {\n      eleObj.instance.dragStopCalled = true;\n      eleObj.instance.dragData[this.scope] = this.droppables[this.scope];\n      eleObj.instance.intDrop(evt, eleObj.target);\n    }\n\n    this.setGlobalDroppables(true);\n    document.body.classList.remove('e-prevent-select');\n  }\n  /**\n   * @private\n   */\n\n\n  intDestroy(evt) {\n    this.dragProcessStarted = false;\n    this.toggleEvents();\n    document.body.classList.remove('e-prevent-select');\n    this.element.setAttribute('aria-grabbed', 'false');\n    EventHandler.remove(document, Browser.touchMoveEvent, this.intDragStart);\n    EventHandler.remove(document, Browser.touchEndEvent, this.intDragStop);\n    EventHandler.remove(document, Browser.touchEndEvent, this.intDestroy);\n    EventHandler.remove(document, Browser.touchMoveEvent, this.intDrag);\n\n    if (this.isDragStarted()) {\n      this.isDragStarted(true);\n    }\n  } // triggers when property changed\n\n\n  onPropertyChanged(newProp, oldProp) {//No Code to handle\n  }\n\n  getModuleName() {\n    return 'draggable';\n  }\n\n  isDragStarted(change) {\n    if (change) {\n      isDraggedObject.isDragged = !isDraggedObject.isDragged;\n    }\n\n    return isDraggedObject.isDragged;\n  }\n\n  setDragArea() {\n    let eleWidthBound;\n    let eleHeightBound;\n    let top = 0;\n    let left = 0;\n    let ele;\n    let type = typeof this.dragArea;\n\n    if (type === 'string') {\n      ele = select(this.dragArea);\n    } else {\n      ele = this.dragArea;\n    }\n\n    if (ele) {\n      let elementArea = ele.getBoundingClientRect();\n      eleWidthBound = ele.scrollWidth ? ele.scrollWidth : elementArea.right - elementArea.left;\n      eleHeightBound = ele.scrollHeight ? ele.scrollHeight : elementArea.bottom - elementArea.top;\n      let keys = ['Top', 'Left', 'Bottom', 'Right'];\n      let styles = getComputedStyle(ele);\n\n      for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let tborder = styles['border' + key + 'Width'];\n        let tpadding = styles['padding' + key];\n        let lowerKey = key.toLowerCase();\n        this.borderWidth[lowerKey] = isNaN(parseFloat(tborder)) ? 0 : parseFloat(tborder);\n        this.padding[lowerKey] = isNaN(parseFloat(tpadding)) ? 0 : parseFloat(tpadding);\n      }\n\n      top = elementArea.top;\n      left = elementArea.left;\n      this.dragLimit.left = left + this.borderWidth.left + this.padding.left;\n      this.dragLimit.top = ele.offsetTop + this.borderWidth.top + this.padding.top;\n      this.dragLimit.right = left + eleWidthBound - (this.borderWidth.right + this.padding.right);\n      this.dragLimit.bottom = top + eleHeightBound - (this.borderWidth.bottom + this.padding.bottom);\n    }\n  }\n\n  getProperTargetElement(evt) {\n    let intCoord = this.getCoordinates(evt);\n    let ele;\n    let prevStyle = this.helperElement.style.pointerEvents || '';\n\n    if (compareElementParent(evt.target, this.helperElement) || evt.type.indexOf('touch') !== -1) {\n      this.helperElement.style.pointerEvents = 'none';\n      ele = document.elementFromPoint(intCoord.clientX, intCoord.clientY);\n      this.helperElement.style.pointerEvents = prevStyle;\n    } else {\n      ele = evt.target;\n    }\n\n    return ele;\n  }\n  /* istanbul ignore next */\n\n\n  currentStateCheck(ele, oldEle) {\n    let elem;\n\n    if (!isNullOrUndefined(this.currentStateTarget) && this.currentStateTarget !== ele) {\n      elem = this.currentStateTarget;\n    } else {\n      elem = !isNullOrUndefined(oldEle) ? oldEle : ele;\n    }\n\n    return elem;\n  }\n\n  getMousePosition(evt, isdragscroll) {\n    /* tslint:disable no-any */\n    let dragEle = evt.srcElement !== undefined ? evt.srcElement : evt.target;\n    let intCoord = this.getCoordinates(evt);\n    let pageX;\n    let pageY;\n    let isOffsetParent = isNullOrUndefined(dragEle.offsetParent);\n    /* istanbul ignore next */\n\n    if (isdragscroll) {\n      pageX = this.clone ? intCoord.pageX : intCoord.pageX + (isOffsetParent ? 0 : dragEle.offsetParent.scrollLeft) - this.relativeXPosition;\n      pageY = this.clone ? intCoord.pageY : intCoord.pageY + (isOffsetParent ? 0 : dragEle.offsetParent.scrollTop) - this.relativeYPosition;\n    } else {\n      pageX = this.clone ? intCoord.pageX : intCoord.pageX + window.pageXOffset - this.relativeXPosition;\n      pageY = this.clone ? intCoord.pageY : intCoord.pageY + window.pageYOffset - this.relativeYPosition;\n    }\n\n    if (!this.clone && this.dragArea && !isdragscroll) {\n      this.getScrollableValues();\n      pageY -= this.tempScrollHeight ? this.parentScrollY : 0;\n      pageX -= this.tempScrollWidth ? this.parentScrollX : 0;\n    }\n\n    return {\n      left: pageX - (this.margin.left + this.cursorAt.left),\n      top: pageY - (this.margin.top + this.cursorAt.top)\n    };\n  }\n\n  getCoordinates(evt) {\n    if (evt.type.indexOf('touch') > -1) {\n      return evt.changedTouches[0];\n    }\n\n    return evt;\n  }\n\n  getHelperElement(evt) {\n    let element;\n\n    if (this.clone) {\n      if (this.helper) {\n        element = this.helper({\n          sender: evt,\n          element: this.target\n        });\n      } else {\n        element = createElement('div', {\n          className: 'e-drag-helper e-block-touch',\n          innerHTML: 'Draggable'\n        });\n        document.body.appendChild(element);\n      }\n    } else {\n      element = this.element;\n    }\n\n    return element;\n  }\n\n  setGlobalDroppables(reset, drag, helper) {\n    this.droppables[this.scope] = reset ? null : {\n      draggable: drag,\n      helper: helper,\n      draggedElement: this.element\n    };\n  }\n\n  checkTargetElement(evt) {\n    let target = this.getProperTargetElement(evt);\n    let dropIns = this.getDropInstance(target);\n\n    if (!dropIns && target && !isNullOrUndefined(target.parentNode)) {\n      let parent = closest(target.parentNode, '.e-droppable') || target.parentElement;\n\n      if (parent) {\n        dropIns = this.getDropInstance(parent);\n      }\n    }\n\n    return {\n      target: target,\n      instance: dropIns\n    };\n  }\n\n  getDropInstance(ele) {\n    let name = 'getModuleName';\n    let drop;\n    let eleInst = ele && ele.ej2_instances;\n\n    if (eleInst) {\n      for (let inst of eleInst) {\n        if (inst[name]() === 'droppable') {\n          drop = inst;\n          break;\n        }\n      }\n    }\n\n    return drop;\n  }\n\n  destroy() {\n    this.toggleEvents(true);\n    super.destroy();\n  }\n\n};\n\n__decorate$2([Complex({}, Position)], Draggable.prototype, \"cursorAt\", void 0);\n\n__decorate$2([Property(true)], Draggable.prototype, \"clone\", void 0);\n\n__decorate$2([Property()], Draggable.prototype, \"dragArea\", void 0);\n\n__decorate$2([Property()], Draggable.prototype, \"isDragScroll\", void 0);\n\n__decorate$2([Property()], Draggable.prototype, \"isReplaceDragEle\", void 0);\n\n__decorate$2([Property(true)], Draggable.prototype, \"isPreventSelect\", void 0);\n\n__decorate$2([Event$1()], Draggable.prototype, \"drag\", void 0);\n\n__decorate$2([Event$1()], Draggable.prototype, \"dragStart\", void 0);\n\n__decorate$2([Event$1()], Draggable.prototype, \"dragStop\", void 0);\n\n__decorate$2([Property(1)], Draggable.prototype, \"distance\", void 0);\n\n__decorate$2([Property()], Draggable.prototype, \"handle\", void 0);\n\n__decorate$2([Property()], Draggable.prototype, \"abort\", void 0);\n\n__decorate$2([Property()], Draggable.prototype, \"helper\", void 0);\n\n__decorate$2([Property('default')], Draggable.prototype, \"scope\", void 0);\n\n__decorate$2([Property('')], Draggable.prototype, \"dragTarget\", void 0);\n\n__decorate$2([Property()], Draggable.prototype, \"axis\", void 0);\n\n__decorate$2([Property()], Draggable.prototype, \"queryPositionInfo\", void 0);\n\n__decorate$2([Property(false)], Draggable.prototype, \"enableTailMode\", void 0);\n\n__decorate$2([Property(false)], Draggable.prototype, \"skipDistanceCheck\", void 0);\n\n__decorate$2([Property(true)], Draggable.prototype, \"preventDefault\", void 0);\n\n__decorate$2([Property(false)], Draggable.prototype, \"enableAutoScroll\", void 0);\n\n__decorate$2([Property(false)], Draggable.prototype, \"enableTapHold\", void 0);\n\n__decorate$2([Property(750)], Draggable.prototype, \"tapHoldThreshold\", void 0);\n\n__decorate$2([Property(false)], Draggable.prototype, \"enableScrollHandler\", void 0);\n\nDraggable = Draggable_1 = __decorate$2([NotifyPropertyChanges], Draggable);\n\nvar __decorate$3 = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Droppable Module provides support to enable droppable functionality in Dom Elements.\n * ```html\n * <div id='drop'>Droppable</div>\n * <script>\n * let ele:HTMLElement = document.getElementById('drop');\n * var drag:Droppable = new Droppable(ele,{\n *     accept:'.drop',\n *     drop: function(e) {\n *      //drop handler code.\n *     }\n * });\n * </script>\n * ```\n */\n\n\nlet Droppable = class Droppable extends Base {\n  constructor(element, options) {\n    super(options, element);\n    this.mouseOver = false;\n    this.dragData = {};\n    this.dragStopCalled = false;\n    this.bind();\n  }\n\n  bind() {\n    this.wireEvents();\n  }\n\n  wireEvents() {\n    EventHandler.add(this.element, Browser.touchEndEvent, this.intDrop, this);\n  } // triggers when property changed\n  // eslint-disable-next-line\n\n\n  onPropertyChanged(newProp, oldProp) {//No Code to handle\n  }\n\n  getModuleName() {\n    return 'droppable';\n  }\n\n  intOver(event, element) {\n    if (!this.mouseOver) {\n      const drag = this.dragData[this.scope];\n      this.trigger('over', {\n        event: event,\n        target: element,\n        dragData: drag\n      });\n      this.mouseOver = true;\n    }\n  }\n\n  intOut(event, element) {\n    if (this.mouseOver) {\n      this.trigger('out', {\n        evt: event,\n        target: element\n      });\n      this.mouseOver = false;\n    }\n  }\n\n  intDrop(evt, element) {\n    if (!this.dragStopCalled) {\n      return;\n    } else {\n      this.dragStopCalled = false;\n    }\n\n    let accept = true;\n    const drag = this.dragData[this.scope];\n    const isDrag = drag ? drag.helper && isVisible(drag.helper) : false;\n    let area;\n\n    if (isDrag) {\n      area = this.isDropArea(evt, drag.helper, element);\n\n      if (this.accept) {\n        accept = matches(drag.helper, this.accept);\n      }\n    }\n\n    if (isDrag && this.drop && area.canDrop && accept) {\n      this.trigger('drop', {\n        event: evt,\n        target: area.target,\n        droppedElement: drag.helper,\n        dragData: drag\n      });\n    }\n\n    this.mouseOver = false;\n  }\n\n  isDropArea(evt, helper, element) {\n    const area = {\n      canDrop: true,\n      target: element || evt.target\n    };\n    const isTouch = evt.type === 'touchend';\n\n    if (isTouch || area.target === helper) {\n      helper.style.display = 'none';\n      const coord = isTouch ? evt.changedTouches[0] : evt;\n      const ele = document.elementFromPoint(coord.clientX, coord.clientY);\n      area.canDrop = false;\n      area.canDrop = compareElementParent(ele, this.element);\n\n      if (area.canDrop) {\n        area.target = ele;\n      }\n\n      helper.style.display = '';\n    }\n\n    return area;\n  }\n\n  destroy() {\n    EventHandler.remove(this.element, Browser.touchEndEvent, this.intDrop);\n    super.destroy();\n  }\n\n};\n\n__decorate$3([Property()], Droppable.prototype, \"accept\", void 0);\n\n__decorate$3([Property('default')], Droppable.prototype, \"scope\", void 0);\n\n__decorate$3([Event$1()], Droppable.prototype, \"drop\", void 0);\n\n__decorate$3([Event$1()], Droppable.prototype, \"over\", void 0);\n\n__decorate$3([Event$1()], Droppable.prototype, \"out\", void 0);\n\nDroppable = __decorate$3([NotifyPropertyChanges], Droppable);\n\nvar __decorate$4 = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar KeyboardEvents_1;\nconst keyCode = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'control': 17,\n  'alt': 18,\n  'pause': 19,\n  'capslock': 20,\n  'space': 32,\n  'escape': 27,\n  'pageup': 33,\n  'pagedown': 34,\n  'end': 35,\n  'home': 36,\n  'leftarrow': 37,\n  'uparrow': 38,\n  'rightarrow': 39,\n  'downarrow': 40,\n  'insert': 45,\n  'delete': 46,\n  'f1': 112,\n  'f2': 113,\n  'f3': 114,\n  'f4': 115,\n  'f5': 116,\n  'f6': 117,\n  'f7': 118,\n  'f8': 119,\n  'f9': 120,\n  'f10': 121,\n  'f11': 122,\n  'f12': 123,\n  'semicolon': 186,\n  'plus': 187,\n  'comma': 188,\n  'minus': 189,\n  'dot': 190,\n  'forwardslash': 191,\n  'graveaccent': 192,\n  'openbracket': 219,\n  'backslash': 220,\n  'closebracket': 221,\n  'singlequote': 222\n};\n/**\n * KeyboardEvents class enables you to bind key action desired key combinations for ex., Ctrl+A, Delete, Alt+Space etc.\n * ```html\n * <div id='testEle'>  </div>;\n * <script>\n *   let node: HTMLElement = document.querySelector('#testEle');\n *   let kbInstance = new KeyboardEvents({\n *       element: node,\n *       keyConfigs:{ selectAll : 'ctrl+a' },\n *       keyAction: function (e:KeyboardEvent, action:string) {\n *           // handler function code\n *       }\n *   });\n * </script>\n * ```\n */\n\nlet KeyboardEvents = KeyboardEvents_1 = class KeyboardEvents extends Base {\n  /**\n   * Initializes the KeyboardEvents\n   *\n   * @param {HTMLElement} element ?\n   * @param {KeyboardEventsModel} options ?\n   */\n  constructor(element, options) {\n    super(options, element);\n    /**\n     * To handle a key press event returns null\n     *\n     * @param {KeyboardEventArgs} e ?\n     * @returns {void} ?\n     */\n\n    this.keyPressHandler = e => {\n      const isAltKey = e.altKey;\n      const isCtrlKey = e.ctrlKey;\n      const isShiftKey = e.shiftKey;\n      const curkeyCode = e.which;\n      const keys = Object.keys(this.keyConfigs);\n\n      for (const key of keys) {\n        const configCollection = this.keyConfigs[key].split(',');\n\n        for (const rconfig of configCollection) {\n          const rKeyObj = KeyboardEvents_1.getKeyConfigData(rconfig.trim());\n\n          if (isAltKey === rKeyObj.altKey && isCtrlKey === rKeyObj.ctrlKey && isShiftKey === rKeyObj.shiftKey && curkeyCode === rKeyObj.keyCode) {\n            e.action = key;\n\n            if (this.keyAction) {\n              this.keyAction(e);\n            }\n          }\n        }\n      }\n    };\n\n    this.bind();\n  }\n  /**\n   * Unwire bound events and destroy the instance.\n   *\n   * @returns {void} ?\n   */\n\n\n  destroy() {\n    this.unwireEvents();\n    super.destroy();\n  }\n  /**\n   * Function can be used to specify certain action if a property is changed\n   *\n   * @param {KeyboardEventsModel} newProp ?\n   * @param {KeyboardEventsModel} oldProp ?\n   * @returns {void} ?\n   * @private\n   */\n  // eslint-disable-next-line\n\n\n  onPropertyChanged(newProp, oldProp) {// No code are needed\n  }\n\n  bind() {\n    this.wireEvents();\n  }\n  /**\n   * To get the module name, returns 'keyboard'.\n   *\n   * @returns {string} ?\n   * @private\n   */\n\n\n  getModuleName() {\n    return 'keyboard';\n  }\n  /**\n   * Wiring event handlers to events\n   *\n   * @returns {void} ?\n   * @private\n   */\n\n\n  wireEvents() {\n    this.element.addEventListener(this.eventName, this.keyPressHandler);\n  }\n  /**\n   * Unwiring event handlers to events\n   *\n   * @returns {void} ?\n   * @private\n   */\n\n\n  unwireEvents() {\n    this.element.removeEventListener(this.eventName, this.keyPressHandler);\n  }\n  /**\n   * To get the key configuration data\n   *\n   * @param {string} config - configuration data\n   * @returns {KeyData} ?\n   */\n\n\n  static getKeyConfigData(config) {\n    if (config in this.configCache) {\n      return this.configCache[config];\n    }\n\n    const keys = config.toLowerCase().split('+');\n    const keyData = {\n      altKey: keys.indexOf('alt') !== -1 ? true : false,\n      ctrlKey: keys.indexOf('ctrl') !== -1 ? true : false,\n      shiftKey: keys.indexOf('shift') !== -1 ? true : false,\n      keyCode: null\n    };\n\n    if (keys[keys.length - 1].length > 1 && !!Number(keys[keys.length - 1])) {\n      keyData.keyCode = Number(keys[keys.length - 1]);\n    } else {\n      keyData.keyCode = KeyboardEvents_1.getKeyCode(keys[keys.length - 1]);\n    }\n\n    KeyboardEvents_1.configCache[config] = keyData;\n    return keyData;\n  } // Return the keycode value as string\n\n\n  static getKeyCode(keyVal) {\n    return keyCode[keyVal] || keyVal.toUpperCase().charCodeAt(0);\n  }\n\n};\nKeyboardEvents.configCache = {};\n\n__decorate$4([Property({})], KeyboardEvents.prototype, \"keyConfigs\", void 0);\n\n__decorate$4([Property('keyup')], KeyboardEvents.prototype, \"eventName\", void 0);\n\n__decorate$4([Event$1()], KeyboardEvents.prototype, \"keyAction\", void 0);\n\nKeyboardEvents = KeyboardEvents_1 = __decorate$4([NotifyPropertyChanges], KeyboardEvents);\n/**\n * L10n modules provides localized text for different culture.\n * ```typescript\n * import {setCulture} from '@syncfusion/ts-base-library';\n * //load global locale object common for all components.\n * L10n.load({\n *    'fr-BE': {\n *       'button': {\n *            'check': 'vérifié'\n *        }\n *    }\n * });\n * //set globale default locale culture.\n * setCulture('fr-BE');\n * let instance: L10n = new L10n('button', {\n *    check: 'checked'\n * });\n * //Get locale text for current property.\n * instance.getConstant('check');\n * //Change locale culture in a component.\n * instance.setLocale('en-US');\n * ```\n */\n\nclass L10n {\n  /**\n   * Constructor\n   *\n   * @param {string} controlName ?\n   * @param {Object} localeStrings ?\n   * @param {string} locale ?\n   */\n  constructor(controlName, localeStrings, locale) {\n    this.controlName = controlName;\n    this.localeStrings = localeStrings;\n    this.setLocale(locale || defaultCulture);\n  }\n  /**\n   * Sets the locale text\n   *\n   * @param {string} locale ?\n   * @returns {void} ?\n   */\n\n\n  setLocale(locale) {\n    const intLocale = this.intGetControlConstant(L10n.locale, locale);\n    this.currentLocale = intLocale || this.localeStrings;\n  }\n  /**\n   * Sets the global locale for all components.\n   *\n   * @param {Object} localeObject - specifies the localeObject to be set as global locale.\n   * @returns {void} ?\n   */\n\n\n  static load(localeObject) {\n    this.locale = extend(this.locale, localeObject, {}, true);\n  }\n  /**\n   * Returns current locale text for the property based on the culture name and control name.\n   *\n   * @param {string} prop - specifies the property for which localize text to be returned.\n   * @returns {string} ?\n   */\n\n\n  getConstant(prop) {\n    // Removed conditional operator because this method does not return correct value when passing 0 as value in localization\n    if (!isNullOrUndefined(this.currentLocale[prop])) {\n      return this.currentLocale[prop];\n    } else {\n      return this.localeStrings[prop] || '';\n    }\n  }\n  /**\n   * Returns the control constant object for current object and the locale specified.\n   *\n   * @param {Object} curObject ?\n   * @param {string} locale ?\n   * @returns {Object} ?\n   */\n\n\n  intGetControlConstant(curObject, locale) {\n    if (curObject[locale]) {\n      return curObject[locale][this.controlName];\n    }\n\n    return null;\n  }\n\n}\n\nL10n.locale = {};\n\nvar __decorate$5 = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * SwipeSettings is a framework module that provides support to handle swipe event like swipe up, swipe right, etc..,\n */\n\n\nclass SwipeSettings extends ChildProperty {}\n\n__decorate$5([Property(50)], SwipeSettings.prototype, \"swipeThresholdDistance\", void 0);\n\nconst swipeRegex = /(Up|Down)/;\n/**\n * Touch class provides support to handle the touch event like tap, double tap, tap hold, etc..,\n * ```typescript\n *    let node: HTMLElement;\n * let touchObj: Touch = new Touch({\n *    element: node,\n *    tap: function (e) {\n *        // tap handler function code\n *    }\n *    tapHold: function (e) {\n *        // tap hold handler function code\n *    }\n *    scroll: function (e) {\n *        // scroll handler function code\n *    }\n *    swipe: function (e) {\n *        // swipe handler function code\n *    }\n * });\n * ```\n */\n\nlet Touch = class Touch extends Base {\n  /* End-Properties */\n  constructor(element, options) {\n    super(options, element);\n    this.touchAction = true;\n    this.tapCount = 0;\n    /**\n     *\n     * @param {MouseEventArgs | TouchEventArgs} evt ?\n     * @returns {void} ?\n     */\n\n    this.startEvent = evt => {\n      if (this.touchAction === true) {\n        const point = this.updateChangeTouches(evt);\n\n        if (evt.changedTouches !== undefined) {\n          this.touchAction = false;\n        }\n\n        this.isTouchMoved = false;\n        this.movedDirection = '';\n        this.startPoint = this.lastMovedPoint = {\n          clientX: point.clientX,\n          clientY: point.clientY\n        };\n        this.startEventData = point;\n        this.hScrollLocked = this.vScrollLocked = false;\n        this.tStampStart = Date.now();\n        this.timeOutTapHold = setTimeout(() => {\n          this.tapHoldEvent(evt);\n        }, this.tapHoldThreshold);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.moveEvent, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.endEvent, this);\n        EventHandler.add(this.element, Browser.touchCancelEvent, this.cancelEvent, this);\n      }\n    };\n    /**\n     *\n     * @param {MouseEventArgs | TouchEventArgs} evt ?\n     * @returns {void} ?\n     */\n\n\n    this.moveEvent = evt => {\n      const point = this.updateChangeTouches(evt);\n      this.movedPoint = point;\n      this.isTouchMoved = !(point.clientX === this.startPoint.clientX && point.clientY === this.startPoint.clientY);\n      let eScrollArgs = {};\n\n      if (this.isTouchMoved) {\n        clearTimeout(this.timeOutTapHold);\n        this.calcScrollPoints(evt);\n        const scrollArg = {\n          startEvents: this.startEventData,\n          originalEvent: evt,\n          startX: this.startPoint.clientX,\n          startY: this.startPoint.clientY,\n          distanceX: this.distanceX,\n          distanceY: this.distanceY,\n          scrollDirection: this.scrollDirection,\n          velocity: this.getVelocity(point)\n        };\n        eScrollArgs = extend(eScrollArgs, {}, scrollArg);\n        this.trigger('scroll', eScrollArgs);\n        this.lastMovedPoint = {\n          clientX: point.clientX,\n          clientY: point.clientY\n        };\n      }\n    };\n    /**\n     *\n     * @param {MouseEventArgs | TouchEventArgs} evt ?\n     * @returns {void} ?\n     */\n\n\n    this.cancelEvent = evt => {\n      clearTimeout(this.timeOutTapHold);\n      clearTimeout(this.timeOutTap);\n      this.tapCount = 0;\n      this.swipeFn(evt);\n      EventHandler.remove(this.element, Browser.touchCancelEvent, this.cancelEvent);\n    };\n    /**\n     *\n     * @param {MouseEventArgs | TouchEventArgs} evt ?\n     * @returns {void} ?\n     */\n\n\n    this.endEvent = evt => {\n      this.swipeFn(evt);\n\n      if (!this.isTouchMoved) {\n        if (typeof this.tap === 'function') {\n          this.trigger('tap', {\n            originalEvent: evt,\n            tapCount: ++this.tapCount\n          });\n          this.timeOutTap = setTimeout(() => {\n            this.tapCount = 0;\n          }, this.tapThreshold);\n        }\n      }\n\n      this.modeclear();\n    };\n    /**\n     *\n     * @param {MouseEventArgs | TouchEventArgs} evt ?\n     * @returns {void} ?\n     */\n\n\n    this.swipeFn = evt => {\n      clearTimeout(this.timeOutTapHold);\n      clearTimeout(this.timeOutTap);\n      const point = this.updateChangeTouches(evt);\n      let diffX = point.clientX - this.startPoint.clientX;\n      let diffY = point.clientY - this.startPoint.clientY;\n      diffX = Math.floor(diffX < 0 ? -1 * diffX : diffX);\n      diffY = Math.floor(diffY < 0 ? -1 * diffY : diffX);\n      this.isTouchMoved = diffX > 1 || diffY > 1;\n      this.endPoint = point;\n      this.calcPoints(evt);\n      const swipeArgs = {\n        originalEvent: evt,\n        startEvents: this.startEventData,\n        startX: this.startPoint.clientX,\n        startY: this.startPoint.clientY,\n        distanceX: this.distanceX,\n        distanceY: this.distanceY,\n        swipeDirection: this.movedDirection,\n        velocity: this.getVelocity(point)\n      };\n\n      if (this.isTouchMoved) {\n        let eSwipeArgs;\n        const tDistance = this.swipeSettings.swipeThresholdDistance; // eslint-disable-next-line\n\n        eSwipeArgs = extend(eSwipeArgs, this.defaultArgs, swipeArgs);\n        let canTrigger = false;\n        const ele = this.element;\n        const scrollBool = this.isScrollable(ele);\n        const moved = swipeRegex.test(this.movedDirection);\n\n        if (tDistance < this.distanceX && !moved || tDistance < this.distanceY && moved) {\n          if (!scrollBool) {\n            canTrigger = true;\n          } else {\n            canTrigger = this.checkSwipe(ele, moved);\n          }\n        }\n\n        if (canTrigger) {\n          this.trigger('swipe', eSwipeArgs);\n        }\n      }\n\n      this.modeclear();\n    };\n\n    this.modeclear = () => {\n      this.modeClear = setTimeout(() => {\n        this.touchAction = true;\n      }, typeof this.tap !== 'function' ? 0 : 20);\n      this.lastTapTime = new Date().getTime();\n      EventHandler.remove(this.element, Browser.touchMoveEvent, this.moveEvent);\n      EventHandler.remove(this.element, Browser.touchEndEvent, this.endEvent);\n      EventHandler.remove(this.element, Browser.touchCancelEvent, this.cancelEvent);\n    };\n\n    this.bind();\n  } // triggers when property changed\n\n  /**\n   *\n   * @private\n   * @param {TouchModel} newProp ?\n   * @param {TouchModel} oldProp ?\n   * @returns {void} ?\n   */\n  // eslint-disable-next-line\n\n\n  onPropertyChanged(newProp, oldProp) {//No Code to handle\n  }\n\n  bind() {\n    this.wireEvents();\n\n    if (Browser.isIE) {\n      this.element.classList.add('e-block-touch');\n    }\n  }\n  /**\n   * To destroy the touch instance.\n   *\n   * @returns {void}\n   */\n\n\n  destroy() {\n    this.unwireEvents();\n    super.destroy();\n  } // Need to changes the event binding once we updated the event handler.\n\n\n  wireEvents() {\n    EventHandler.add(this.element, Browser.touchStartEvent, this.startEvent, this);\n  }\n\n  unwireEvents() {\n    EventHandler.remove(this.element, Browser.touchStartEvent, this.startEvent);\n  }\n  /**\n   * Returns module name as touch\n   *\n   * @returns {string} ?\n   * @private\n   */\n\n\n  getModuleName() {\n    return 'touch';\n  }\n  /**\n   * Returns if the HTML element is Scrollable.\n   *\n   * @param {HTMLElement} element - HTML Element to check if Scrollable.\n   * @returns {boolean} ?\n   */\n\n\n  isScrollable(element) {\n    const eleStyle = getComputedStyle(element);\n    const style = eleStyle.overflow + eleStyle.overflowX + eleStyle.overflowY;\n\n    if (/(auto|scroll)/.test(style)) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   *\n   * @param {MouseEventArgs | TouchEventArgs} evt ?\n   * @returns {void} ?\n   */\n\n\n  tapHoldEvent(evt) {\n    this.tapCount = 0;\n    this.touchAction = true;\n    let eTapArgs;\n    EventHandler.remove(this.element, Browser.touchMoveEvent, this.moveEvent);\n    EventHandler.remove(this.element, Browser.touchEndEvent, this.endEvent); // eslint-disable-next-line\n\n    eTapArgs = {\n      originalEvent: evt\n    };\n    this.trigger('tapHold', eTapArgs);\n    EventHandler.remove(this.element, Browser.touchCancelEvent, this.cancelEvent);\n  }\n\n  calcPoints(evt) {\n    const point = this.updateChangeTouches(evt);\n    this.defaultArgs = {\n      originalEvent: evt\n    };\n    this.distanceX = Math.abs(Math.abs(point.clientX) - Math.abs(this.startPoint.clientX));\n    this.distanceY = Math.abs(Math.abs(point.clientY) - Math.abs(this.startPoint.clientY));\n\n    if (this.distanceX > this.distanceY) {\n      this.movedDirection = point.clientX > this.startPoint.clientX ? 'Right' : 'Left';\n    } else {\n      this.movedDirection = point.clientY < this.startPoint.clientY ? 'Up' : 'Down';\n    }\n  }\n\n  calcScrollPoints(evt) {\n    const point = this.updateChangeTouches(evt);\n    this.defaultArgs = {\n      originalEvent: evt\n    };\n    this.distanceX = Math.abs(Math.abs(point.clientX) - Math.abs(this.lastMovedPoint.clientX));\n    this.distanceY = Math.abs(Math.abs(point.clientY) - Math.abs(this.lastMovedPoint.clientY));\n\n    if ((this.distanceX > this.distanceY || this.hScrollLocked === true) && this.vScrollLocked === false) {\n      this.scrollDirection = point.clientX > this.lastMovedPoint.clientX ? 'Right' : 'Left';\n      this.hScrollLocked = true;\n    } else {\n      this.scrollDirection = point.clientY < this.lastMovedPoint.clientY ? 'Up' : 'Down';\n      this.vScrollLocked = true;\n    }\n  }\n\n  getVelocity(pnt) {\n    const newX = pnt.clientX;\n    const newY = pnt.clientY;\n    const newT = Date.now();\n    const xDist = newX - this.startPoint.clientX;\n    const yDist = newY - this.startPoint.clientX;\n    const interval = newT - this.tStampStart;\n    return Math.sqrt(xDist * xDist + yDist * yDist) / interval;\n  } // eslint-disable-next-line\n\n\n  checkSwipe(ele, flag) {\n    const keys = ['scroll', 'offset'];\n    const temp = flag ? ['Height', 'Top'] : ['Width', 'Left'];\n\n    if (ele[keys[0] + temp[0]] <= ele[keys[1] + temp[0]]) {\n      return true;\n    }\n\n    return ele[keys[0] + temp[1]] === 0 || ele[keys[1] + temp[0]] + ele[keys[0] + temp[1]] >= ele[keys[0] + temp[0]];\n  }\n\n  updateChangeTouches(evt) {\n    const point = evt.changedTouches && evt.changedTouches.length !== 0 ? evt.changedTouches[0] : evt;\n    return point;\n  }\n\n};\n\n__decorate$5([Event$1()], Touch.prototype, \"tap\", void 0);\n\n__decorate$5([Event$1()], Touch.prototype, \"tapHold\", void 0);\n\n__decorate$5([Event$1()], Touch.prototype, \"swipe\", void 0);\n\n__decorate$5([Event$1()], Touch.prototype, \"scroll\", void 0);\n\n__decorate$5([Property(350)], Touch.prototype, \"tapThreshold\", void 0);\n\n__decorate$5([Property(750)], Touch.prototype, \"tapHoldThreshold\", void 0);\n\n__decorate$5([Complex({}, SwipeSettings)], Touch.prototype, \"swipeSettings\", void 0);\n\nTouch = __decorate$5([NotifyPropertyChanges], Touch);\n/**\n * Template Engine\n */\n\nconst LINES = new RegExp('\\\\n|\\\\r|\\\\s\\\\s+', 'g');\nconst QUOTES = new RegExp(/'|\"/g);\nconst IF_STMT = new RegExp('if ?\\\\(');\nconst ELSEIF_STMT = new RegExp('else if ?\\\\(');\nconst ELSE_STMT = new RegExp('else');\nconst FOR_STMT = new RegExp('for ?\\\\(');\nconst IF_OR_FOR = new RegExp('(/if|/for)');\nconst CALL_FUNCTION = new RegExp('\\\\((.*)\\\\)', '');\nconst NOT_NUMBER = new RegExp('^[0-9]+$', 'g');\nconst WORD = new RegExp('[\\\\w\"\\'.\\\\s+]+', 'g');\nconst DBL_QUOTED_STR = new RegExp('\"(.*?)\"', 'g');\nconst WORDIF = new RegExp('[\\\\w\"\\'@#$.\\\\s-+]+', 'g');\nlet exp = new RegExp('\\\\${([^}]*)}', 'g'); // let cachedTemplate: Object = {};\n\nconst ARR_OBJ = /^\\..*/gm;\nconst SINGLE_SLASH = /\\\\/gi;\nconst DOUBLE_SLASH = /\\\\\\\\/gi;\nconst WORDFUNC = new RegExp('[\\\\w\"\\'@#$.\\\\s+]+', 'g');\nconst WINDOWFUNC = /\\window\\./gm;\n/**\n * The function to set regular expression for template expression string.\n *\n * @param {RegExp} value - Value expression.\n * @returns {RegExp} ?\n * @private\n */\n// /**\n//  * To render the template string from the given data.\n//  * @param  {string} template - String Template.\n//  * @param  {Object[]|JSON} data - DataSource for the template.\n//  * @param  {Object} helper? - custom helper object.\n//  */\n// export function template(template: string, data: JSON, helper?: Object): string {\n//     let hash: string = hashCode(template);\n//     let tmpl: Function;\n//     if (!cachedTemplate[hash]) {\n//         tmpl = cachedTemplate[hash] = compile(template, helper);\n//     } else {\n//         tmpl = cachedTemplate[hash];\n//     }\n//     return tmpl(data);\n// }\n\n/**\n * Compile the template string into template function.\n *\n * @param {string} template - The template string which is going to convert.\n * @param {Object} helper - Helper functions as an object.\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n * @private\n */\n\nfunction compile$1(template, helper, ignorePrefix) {\n  const argName = 'data';\n  const evalExpResult = evalExp(template, argName, helper, ignorePrefix);\n  const condtion = `var valueRegEx = (/value=\\\\'([A-Za-z0-9 _]*)((.)([\\\\w)(!-;?-■\\\\s]+)['])/g);\n    var hrefRegex = (/(?:href)([\\\\s='\"./]+)([\\\\w-./?=&\\\\\\\\#\"]+)((.)([\\\\w)(!-;/?-■\\\\s]+)['])/g);\n    if(str.match(valueRegEx)){\n        var check = str.match(valueRegEx);\n        var str1 = str;\n        for (var i=0; i < check.length; i++) {\n            var check1 = str.match(valueRegEx)[i].split('value=')[1];\n            var change = check1.match(/^'/) !== null ? check1.replace(/^'/, '\\\"') : check1;\n            change =change.match(/.$/)[0] === '\\\\'' ? change.replace(/.$/,'\\\"') : change;\n            str1 = str1.replace(check1, change);\n        }\n        str = str.replace(str, str1);\n    }\n    else if(str.match(hrefRegex)) {\n        var check = str.match(hrefRegex);\n        var str1 = str;\n        for (var i=0; i < check.length; i++) {\n            var check1 = str.match(hrefRegex)[i].split('href=')[1];\n            var change = check1.match(/^'/) !== null ? check1.replace(/^'/, '\\\"') : check1;\n            change =change.match(/.$/)[0] === '\\\\'' ? change.replace(/.$/,'\\\"') : change;\n            str1 = str1.replace(check1, change);\n        }\n        str = str.replace(str, str1);\n    }\n    `;\n  const fnCode = \"var str=\\\"\" + evalExpResult + \"\\\";\" + condtion + \" return str;\";\n  const fn = new Function(argName, fnCode);\n  return fn.bind(helper);\n}\n/** function used to evaluate the function expression\n *\n * @param {string} str ?\n * @param {string} nameSpace ?\n * @param {Object} helper ?\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n */\n\n\nfunction evalExp(str, nameSpace, helper, ignorePrefix) {\n  let varCOunt = 0;\n  /**\n   * Variable containing Local Keys\n   */\n\n  const localKeys = [];\n  const isClass = str.match(/class=\"([^\"]+|)\\s{2}/g);\n  let singleSpace = '';\n\n  if (isClass) {\n    isClass.forEach(value => {\n      singleSpace = value.replace(/\\s\\s+/g, ' ');\n      str = str.replace(value, singleSpace);\n    });\n  }\n\n  return str.replace(LINES, '').replace(DBL_QUOTED_STR, '\\'$1\\'').replace(exp, // eslint-disable-next-line\n  (match, cnt, offset, matchStr) => {\n    const SPECIAL_CHAR = /@|#|\\$/gm;\n    const matches = cnt.match(CALL_FUNCTION); // matches to detect any function calls\n\n    if (matches) {\n      const rlStr = matches[1];\n\n      if (ELSEIF_STMT.test(cnt)) {\n        //handling else-if condition\n        cnt = '\";} ' + cnt.replace(matches[1], rlStr.replace(WORD, str => {\n          str = str.trim();\n          return addNameSpace(str, !QUOTES.test(str) && localKeys.indexOf(str) === -1, nameSpace, localKeys, ignorePrefix);\n        })) + '{ \\n str = str + \"';\n      } else if (IF_STMT.test(cnt)) {\n        //handling if condition\n        cnt = '\"; ' + cnt.replace(matches[1], rlStr.replace(WORDIF, strs => {\n          return HandleSpecialCharArrObj(strs, nameSpace, localKeys, ignorePrefix);\n        })) + '{ \\n str = str + \"';\n      } else if (FOR_STMT.test(cnt)) {\n        //handling for condition\n        const rlStr = matches[1].split(' of '); // replace for each into actual JavaScript\n        // eslint-disable-next-line\n\n        cnt = '\"; ' + cnt.replace(matches[1], mtc => {\n          localKeys.push(rlStr[0]);\n          localKeys.push(rlStr[0] + 'Index');\n          varCOunt = varCOunt + 1; // tslint:disable-next-line\n\n          return 'var i' + varCOunt + '=0; i' + varCOunt + ' < ' + addNameSpace(rlStr[1], true, nameSpace, localKeys, ignorePrefix) + '.length; i' + varCOunt + '++';\n        }) + '{ \\n ' + rlStr[0] + '= ' + addNameSpace(rlStr[1], true, nameSpace, localKeys, ignorePrefix) + '[i' + varCOunt + ']; \\n var ' + rlStr[0] + 'Index=i' + varCOunt + '; \\n str = str + \"';\n      } else {\n        //helper function handling\n        const fnStr = cnt.split('('); // eslint-disable-next-line\n\n        let fNameSpace = helper && helper.hasOwnProperty(fnStr[0]) ? 'this.' : 'global';\n        fNameSpace = /\\./.test(fnStr[0]) ? '' : fNameSpace;\n        const ftArray = matches[1].split(',');\n\n        if (matches[1].length !== 0 && !/data/.test(ftArray[0]) && !/window./.test(ftArray[0])) {\n          matches[1] = fNameSpace === 'global' ? nameSpace + '.' + matches[1] : matches[1];\n        }\n\n        const splRegexp = /@|\\$|#/gm;\n        const arrObj = /\\]\\./gm;\n\n        if (WINDOWFUNC.test(cnt) && arrObj.test(cnt) || splRegexp.test(cnt)) {\n          const splArrRegexp = /@|\\$|#|\\]\\./gm;\n\n          if (splArrRegexp.test(cnt)) {\n            // tslint:disable-next-line\n            cnt = '\"+ ' + (fNameSpace === 'global' ? '' : fNameSpace) + cnt.replace(matches[1], rlStr.replace(WORDFUNC, strs => {\n              return HandleSpecialCharArrObj(strs, nameSpace, localKeys, ignorePrefix);\n            })) + '+ \"';\n          }\n        } else {\n          cnt = '\" + ' + (fNameSpace === 'global' ? '' : fNameSpace) + cnt.replace(rlStr, addNameSpace(matches[1].replace(/,( |)data.|,/gi, ',' + nameSpace + '.').replace(/,( |)data.window/gi, ',window'), fNameSpace === 'global' ? false : true, nameSpace, localKeys, ignorePrefix)) + '+\"';\n        }\n      }\n    } else if (ELSE_STMT.test(cnt)) {\n      // handling else condition\n      cnt = '\"; ' + cnt.replace(ELSE_STMT, '} else { \\n str = str + \"'); // eslint-disable-next-line\n    } else if (!!cnt.match(IF_OR_FOR)) {\n      // close condition\n      cnt = cnt.replace(IF_OR_FOR, '\"; \\n } \\n str = str + \"');\n    } else if (SPECIAL_CHAR.test(cnt)) {\n      // template string with double slash with special character\n      if (cnt.match(SINGLE_SLASH)) {\n        cnt = SlashReplace(cnt);\n      }\n\n      cnt = '\"+' + NameSpaceForspecialChar(cnt, localKeys.indexOf(cnt) === -1, nameSpace, localKeys) + '\"]+\"';\n    } else {\n      // template string with double slash\n      if (cnt.match(SINGLE_SLASH)) {\n        cnt = SlashReplace(cnt);\n        cnt = '\"+' + NameSpaceForspecialChar(cnt, localKeys.indexOf(cnt) === -1, nameSpace, localKeys) + '\"]+\"';\n      } else {\n        // evaluate normal expression\n        cnt = '\"+' + addNameSpace(cnt.replace(/,/gi, '+' + nameSpace + '.'), localKeys.indexOf(cnt) === -1, nameSpace, localKeys, ignorePrefix) + '+\"';\n      }\n    }\n\n    return cnt;\n  });\n}\n/**\n *\n * @param {string} str ?\n * @param {boolean} addNS ?\n * @param {string} nameSpace ?\n * @param {string[]} ignoreList ?\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n */\n\n\nfunction addNameSpace(str, addNS, nameSpace, ignoreList, ignorePrefix) {\n  return addNS && !NOT_NUMBER.test(str) && ignoreList.indexOf(str.split('.')[0]) === -1 && !ignorePrefix ? nameSpace + '.' + str : str;\n}\n/**\n *\n * @param {string} str ?\n * @param {boolean} addNS ?\n * @param {string} nameSpace ?\n * @param {string[]} ignoreList ?\n * @returns {string} ?\n */\n\n\nfunction NameSpaceArrObj(str, addNS, nameSpace, ignoreList) {\n  const arrObjReg = /^\\..*/gm;\n  return addNS && !NOT_NUMBER.test(str) && ignoreList.indexOf(str.split('.')[0]) === -1 && !arrObjReg.test(str) ? nameSpace + '.' + str : str;\n} // // Create hashCode for template string to storeCached function\n// function hashCode(str: string): string {\n//     return str.split('').reduce((a: number, b: string) => { a = ((a << 5) - a) + b.charCodeAt(0); return a & a; }, 0).toString();\n// }\n\n/**\n *\n * @param {string} str ?\n * @param {boolean} addNS ?\n * @param {string} nameSpace ?\n * @param {string[]} ignoreList ?\n * @returns {string} ?\n */\n\n\nfunction NameSpaceForspecialChar(str, addNS, nameSpace, ignoreList) {\n  return addNS && !NOT_NUMBER.test(str) && ignoreList.indexOf(str.split('.')[0]) === -1 ? nameSpace + '[\"' + str : str;\n} // eslint-disable-next-line\n\n\nfunction SlashReplace(tempStr) {\n  const double = '\\\\\\\\';\n\n  if (tempStr.match(DOUBLE_SLASH)) {\n    // eslint-disable-next-line\n    tempStr = tempStr;\n  } else {\n    tempStr = tempStr.replace(SINGLE_SLASH, double);\n  }\n\n  return tempStr;\n}\n/**\n *\n * @param {string} str ?\n * @param {string} nameSpaceNew ?\n * @param {string[]} keys ?\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n */\n\n\nfunction HandleSpecialCharArrObj(str, nameSpaceNew, keys, ignorePrefix) {\n  str = str.trim();\n  const windowFunc = /\\window\\./gm;\n\n  if (!windowFunc.test(str)) {\n    const quotes = /'|\"/gm;\n    const splRegexp = /@|\\$|#/gm;\n\n    if (splRegexp.test(str)) {\n      str = NameSpaceForspecialChar(str, keys.indexOf(str) === -1, nameSpaceNew, keys) + '\"]';\n    }\n\n    if (ARR_OBJ.test(str)) {\n      return NameSpaceArrObj(str, !quotes.test(str) && keys.indexOf(str) === -1, nameSpaceNew, keys);\n    } else {\n      return addNameSpace(str, !quotes.test(str) && keys.indexOf(str) === -1, nameSpaceNew, keys, ignorePrefix);\n    }\n  } else {\n    return str;\n  }\n}\n/**\n * Template Engine Bridge\n */\n\n\nconst HAS_ROW = /^[\\n\\r.]+<tr|^<tr/;\nconst HAS_SVG = /^[\\n\\r.]+<svg|^<path|^<g/;\nconst blazorTemplates = {};\n/**\n *\n * @returns {string} ?\n */\n\nfunction getRandomId() {\n  return '-' + Math.random().toString(36).substr(2, 5);\n}\n/**\n * Compile the template string into template function.\n *\n * @param {string} templateString - The template string which is going to convert.\n * @param {Object} helper - Helper functions as an object.\n * @param {boolean} ignorePrefix ?\n * @returns {NodeList} ?\n * @private\n */\n// eslint-disable-next-line\n\n\nfunction compile$$1(templateString, helper, ignorePrefix) {\n  const compiler = engineObj.compile(templateString, helper, ignorePrefix); // eslint-disable-next-line\n\n  return (data, component, propName, templateId, isStringTemplate, index, element) => {\n    const result = compiler(data, component, propName, element);\n    const blazorTemplateId = 'BlazorTemplateId';\n\n    if (isBlazor() && !isStringTemplate) {\n      const randomId = getRandomId();\n      let blazorId = templateId + randomId;\n\n      if (!blazorTemplates[templateId]) {\n        blazorTemplates[templateId] = [];\n      }\n\n      if (!isNullOrUndefined(index)) {\n        const keys = Object.keys(blazorTemplates[templateId][index]);\n\n        for (const key of keys) {\n          if (key !== blazorTemplateId && data[key]) {\n            blazorTemplates[templateId][index][key] = data[key];\n          }\n\n          if (key === blazorTemplateId) {\n            blazorId = blazorTemplates[templateId][index][key];\n          }\n        }\n      } else {\n        data[blazorTemplateId] = blazorId;\n        blazorTemplates[templateId].push(data);\n      } // eslint-disable-next-line\n\n\n      return propName === 'rowTemplate' ? [createElement('tr', {\n        id: blazorId,\n        className: 'e-blazor-template'\n      })] : // eslint-disable-next-line\n      [createElement('div', {\n        id: blazorId,\n        className: 'e-blazor-template'\n      })];\n    }\n\n    if (typeof result === 'string') {\n      if (HAS_SVG.test(result)) {\n        const ele = createElement('svg', {\n          innerHTML: result\n        });\n        return ele.childNodes;\n      } else {\n        const ele = createElement(HAS_ROW.test(result) ? 'table' : 'div', {\n          innerHTML: result\n        });\n        return ele.childNodes;\n      }\n    } else {\n      return result;\n    }\n  };\n}\n/**\n *\n * @param {string} templateId ?\n * @param {string} templateName ?\n * @param {string} comp ?\n * @param {boolean} isEmpty ?\n * @param {Function} callBack ?\n * @returns {void} ?\n */\n\n\nfunction updateBlazorTemplate(templateId, templateName, comp, isEmpty, callBack) {\n  if (isBlazor()) {\n    const ejsIntrop = 'sfBlazor';\n    window[ejsIntrop].updateTemplate(templateName, blazorTemplates[templateId], templateId, comp, callBack);\n\n    if (isEmpty !== false) {\n      blazorTemplates[templateId] = [];\n    }\n  }\n}\n/**\n *\n * @param {string} templateId ?\n * @param {string} templateName ?\n * @param {number} index ?\n * @returns {void} ?\n */\n\n\nfunction resetBlazorTemplate(templateId, templateName, index) {\n  const templateDiv = document.getElementById(templateId);\n\n  if (templateDiv) {\n    // eslint-disable-next-line\n    const innerTemplates = templateDiv.getElementsByClassName('blazor-inner-template');\n\n    for (let i = 0; i < innerTemplates.length; i++) {\n      let tempId = ' ';\n\n      if (!isNullOrUndefined(index)) {\n        tempId = innerTemplates[index].getAttribute('data-templateId');\n      } else {\n        tempId = innerTemplates[i].getAttribute('data-templateId');\n      }\n\n      const tempElement = document.getElementById(tempId);\n\n      if (tempElement) {\n        const length = tempElement.childNodes.length;\n\n        for (let j = 0; j < length; j++) {\n          if (!isNullOrUndefined(index)) {\n            innerTemplates[index].appendChild(tempElement.childNodes[0]);\n            i = innerTemplates.length;\n          } else {\n            innerTemplates[i].appendChild(tempElement.childNodes[0]);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Set your custom template engine for template rendering.\n *\n * @param  {ITemplateEngine} classObj - Class object for custom template.\n * @returns {void} ?\n * @private\n */\n\n\nfunction setTemplateEngine(classObj) {\n  engineObj.compile = classObj.compile;\n}\n/**\n * Get current template engine for template rendering\n *\n * @returns {string} ?\n * @private\n */\n\n\nfunction getTemplateEngine() {\n  return engineObj.compile;\n} //Default Engine Class\n\n\nclass Engine {\n  // eslint-disable-next-line\n  compile(templateString, helper = {}, ignorePrefix) {\n    return compile$1(templateString, helper);\n  }\n\n}\n\nconst engineObj = {\n  compile: new Engine().compile\n};\n/**\n * SanitizeHtmlHelper for sanitize the value.\n */\n\nconst removeTags = ['script', 'style', 'iframe[src]', 'link[href*=\"javascript:\"]', 'object[type=\"text/x-scriptlet\"]', 'object[data^=\"data:text/html;base64\"]', 'img[src^=\"data:text/html;base64\"]', '[src^=\"javascript:\"]', '[dynsrc^=\"javascript:\"]', '[lowsrc^=\"javascript:\"]', '[type^=\"application/x-shockwave-flash\"]'];\nconst removeAttrs = [{\n  attribute: 'href',\n  selector: '[href*=\"javascript:\"]'\n}, {\n  attribute: 'background',\n  selector: '[background^=\"javascript:\"]'\n}, {\n  attribute: 'style',\n  selector: '[style*=\"javascript:\"]'\n}, {\n  attribute: 'style',\n  selector: '[style*=\"expression(\"]'\n}, {\n  attribute: 'href',\n  selector: 'a[href^=\"data:text/html;base64\"]'\n}];\nconst jsEvents = ['onchange', 'onclick', 'onmouseover', 'onmouseout', 'onkeydown', 'onload', 'onerror', 'onblur', 'onfocus', 'onbeforeload', 'onbeforeunload', 'onkeyup', 'onsubmit', 'onafterprint', 'onbeforeonload', 'onbeforeprint', 'onblur', 'oncanplay', 'oncanplaythrough', 'onchange', 'onclick', 'oncontextmenu', 'ondblclick', 'ondrag', 'ondragend', 'ondragenter', 'ondragleave', 'ondragover', 'ondragstart', 'ondrop', 'ondurationchange', 'onemptied', 'onended', 'onerror', 'onerror', 'onfocus', 'onformchange', 'onforminput', 'onhaschange', 'oninput', 'oninvalid', 'onkeydown', 'onkeypress', 'onkeyup', 'onload', 'onloadeddata', 'onloadedmetadata', 'onloadstart', 'onmessage', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'onmousewheel', 'onoffline', 'onoine', 'ononline', 'onpagehide', 'onpageshow', 'onpause', 'onplay', 'onplaying', 'onpopstate', 'onprogress', 'onratechange', 'onreadystatechange', 'onredo', 'onresize', 'onscroll', 'onseeked', 'onseeking', 'onselect', 'onstalled', 'onstorage', 'onsubmit', 'onsuspend', 'ontimeupdate', 'onundo', 'onunload', 'onvolumechange', 'onwaiting', 'onmouseenter', 'onmouseleave', 'onmousewheel', 'onstart', 'onpropertychange'];\n\nclass SanitizeHtmlHelper {\n  static beforeSanitize() {\n    return {\n      selectors: {\n        tags: removeTags,\n        attributes: removeAttrs\n      }\n    };\n  }\n\n  static sanitize(value) {\n    const item = this.beforeSanitize();\n    const output = this.serializeValue(item, value);\n    return output;\n  }\n\n  static serializeValue(item, value) {\n    this.removeAttrs = item.selectors.attributes;\n    this.removeTags = item.selectors.tags;\n    this.wrapElement = document.createElement('div');\n    this.wrapElement.innerHTML = value;\n    this.removeXssTags();\n    this.removeJsEvents();\n    this.removeXssAttrs();\n    const tempEleValue = this.wrapElement.innerHTML;\n    this.removeElement();\n    return tempEleValue;\n  }\n\n  static removeElement() {\n    // Removes an element's attibute to avoid html tag validation\n    const nodes = this.wrapElement.children;\n\n    for (let j = 0; j < nodes.length; j++) {\n      const attribute = nodes[j].attributes;\n\n      for (let i = 0; i < attribute.length; i++) {\n        this.wrapElement.children[j].removeAttribute(attribute[i].localName);\n      }\n    }\n  }\n\n  static removeXssTags() {\n    const elements = this.wrapElement.querySelectorAll(this.removeTags.join(','));\n\n    if (elements.length > 0) {\n      elements.forEach(element => {\n        detach(element);\n      });\n    } else {\n      return;\n    }\n  }\n\n  static removeJsEvents() {\n    const elements = this.wrapElement.querySelectorAll('[' + jsEvents.join('],[') + ']');\n\n    if (elements.length > 0) {\n      elements.forEach(element => {\n        jsEvents.forEach(attr => {\n          if (element.hasAttribute(attr)) {\n            element.removeAttribute(attr);\n          }\n        });\n      });\n    } else {\n      return;\n    }\n  }\n\n  static removeXssAttrs() {\n    // eslint-disable-next-line\n    this.removeAttrs.forEach((item, index) => {\n      const elements = this.wrapElement.querySelectorAll(item.selector);\n\n      if (elements.length > 0) {\n        elements.forEach(element => {\n          element.removeAttribute(item.attribute);\n        });\n      }\n    });\n  }\n\n}\n/**\n * Base modules\n */\n\n\nexport { blazorCultureFormats, IntlBase, Ajax, Animation, rippleEffect, isRippleEnabled, enableRipple, Base, getComponent, removeChildInstance, Browser, versionBasedStatePersistence, enableVersionBasedPersistence, Component, ChildProperty, Position, Draggable, Droppable, EventHandler, onIntlChange, rightToLeft, cldrData, defaultCulture, defaultCurrencyCode, Internationalization, setCulture, setCurrencyCode, loadCldr, enableRtl, getNumericObject, getNumberDependable, getDefaultDateObject, KeyboardEvents, L10n, ModuleLoader, Property, Complex, ComplexFactory, Collection, CollectionFactory, Event$1 as Event, NotifyPropertyChanges, CreateBuilder, SwipeSettings, Touch, HijriParser, blazorTemplates, getRandomId, compile$$1 as compile, updateBlazorTemplate, resetBlazorTemplate, setTemplateEngine, getTemplateEngine, disableBlazorMode, createInstance, setImmediate, getValue, setValue, deleteObject, isObject, getEnumValue, merge, extend, isNullOrUndefined, isUndefined, getUniqueID, debounce, queryParams, isObjectArray, compareElementParent, throwError, print, formatUnit, enableBlazorMode, isBlazor, getElement, getInstance, addInstance, uniqueID, createElement, addClass, removeClass, isVisible, prepend, append, detach, remove, attributes, select, selectAll, closest, siblings, getAttributeOrDefault, setStyleAttribute, classList, matches, includeInnerHTML, containsClass, cloneNode, Observer, SanitizeHtmlHelper };","map":{"version":3,"sources":["/home/humed/Documents/nahomFiles/Angular/Projects/youtubeCloneAngular/node_modules/@syncfusion/ej2-base/dist/es6/ej2-base.es2015.js"],"names":["instances","uid","isBlazorPlatform","disableBlazorMode","createInstance","classFunction","params","arrayParam","unshift","undefined","Function","prototype","bind","apply","setImmediate","handler","unbind","num","Uint16Array","intCrypto","window","msCrypto","crypto","getRandomValues","secret","combineArray","messageHandler","event","source","data","length","addEventListener","postMessage","removeEventListener","getValue","nameSpace","obj","value","splits","replace","split","i","isUndefined","setValue","keys","start","fromObj","key","isNullOrUndefined","deleteObject","isObject","objCon","constructor","getEnumValue","enumObject","enumValue","merge","destination","temrObj","tempProp","Object","deepmerge","indexOf","Array","isArray","extend","copied","first","second","deep","result","arguments","obj1","forEach","src","copy","clone","isArrayChanged","blazorEventExtend","isBlazor","Event","hasOwnProperty","getUniqueID","definedName","debounce","eventFunction","delay","out","args","later","clearTimeout","setTimeout","queryParams","array","push","encodeURIComponent","join","isObjectArray","parser","toString","call","compareElementParent","child","parent","node","document","parentNode","throwError","message","Error","e","stack","print","element","printWindow","div","createElement","links","slice","getElementsByTagName","querySelectorAll","reference","open","appendChild","cloneNode","len","outerHTML","write","innerHTML","close","focus","interval","setInterval","ready","clearInterval","formatUnit","enableBlazorMode","getElement","xPath","Node","evaluate","XPathResult","FIRST_ORDERED_NODE_TYPE","singleNodeValue","getInstance","component","elem","querySelector","inst","addInstance","instance","uniqueID","ret","defaultNumberingSystem","defaultNumberSymbols","latnNumberSystem","ParserBase","getMainObject","cName","getNumberingSystem","numberingSystems","reverseObject","prop","propKeys","res","getSymbolRegex","props","regexStr","map","str","RegExp","getSymbolMatch","matchKeys","constructRegex","val","convertValueParts","regex","getDefaultNumberingSystem","nSystem","getCurrentNumericOptions","curObj","numberSystem","needSymbols","blazorMode","cur","digits","numericPair","numberParseRegex","numericRegex","symbolNumberSystem","symbolMatch","getNumberMapper","isNumber","mapper","numberSymbols","timeSeparator","nPair","nRegex","blazorCurrencyData","getBlazorCurrencySymbol","currencyCode","HijriParser","dateCorrection","getHijriDate","gDate","day","getDate","month","getMonth","year","getFullYear","tMonth","tYear","yPrefix","Math","floor","julilanOffset","julianNumber","b","c","d","tempMonth","modifiedJulianDate","iyear","z","cyc","j","iy","im","tempDay","iln","ii","hYear","hmonth","hDate","date","toGregorian","id","mcjdn","julianDate","a","gDay","gMonth","gYear","Date","abbreviateRegexGlobal","standalone","weekdayKey","timeSetter","m","h","H","s","f","datePartMatcher","DateFormat","dateFormat","culture","option","cldr","dependable","IntlBase","getDependables","calendar","numObject","dateObject","formatOptions","isIslamic","islamicRegex","test","isServerRendered","compareBlazorDateFormats","resPattern","format","getResultantPattern","skeleton","type","dateSeperator","getDateSeparator","ConvertDateToWeekFormat","pattern","numMapper","parserObject","patternMatch","match","char","weekday","monthIndex","days","designator","eText","era","timeZone","isNaN","intDateFormatter","options","matches","dateParseRegex","dObject","getCurrentDateValue","curval","curvalstr","processNumber","curstr","getDay","substring","curlength","substr","desig","getHours","dec","retu","timezone","getTimezoneOffset","hourFormat","gmtZeroFormat","getTimeZoneValue","gmtFormat","getWeekOfYear","checkTwodigitNumber","latnParseRegex","tVal","splt","curPattern","no","abs","ishour","errorText","percentSign","minusSign","mapper$1","NumberFormat","numberFormatter","fOptions","cOptions","dOptions","symbolPattern","numericObject","numberMapper","currencySymbol","getCurrencySymbol","currency","defaultCurrencyCode","altSymbol","percentSymbol","minusSymbol","symbols","formatRegex","customFormat","getProperNumericSkeleton","isCurrency","isPercent","getSymbolPattern","isAccount","groupOne","checkValueRange","maximumSignificantDigits","minimumSignificantDigits","maximumFractionDigits","minimumFractionDigits","fractionDigits","useGrouping","defaultCurrency","nData","getFormatData","pData","groupSeparator","groupData","getGroupingDetails","replaceBlazorCurrency","minFrac","minimumFraction","mval","maximumFraction","mfrac","lfrac","isFinite","intNumberFormatter","negativeDataRegex","p","lastIndexOf","temp","primary","secondary","val1","val2","checkbothExist","isFraction","decide","dint","str1","str2","checkRange","text","range","curData","zeroData","fValue","processSignificantDigits","processFraction","minimumIntegerDigits","processMinimumIntegers","toExponential","groupNumbers","nlead","nend","min","max","tn","toPrecision","level1","sep","decimalSymbol","level2","flag","prefix","toFixed","lead","standalone$1","latnRegex","timeSetter$1","minute","hour","milliseconds","DateParser","dateParser","numOptions","parseOptions","regexString","hourOnly","evalposition","gmtCorrection","zCorrectTemp","isgmtTraversed","nRegx","numbers","canUpdate","charKey","optional","weekData","weekObject","monthData","hour12","opt","periodValur","tval","tzone","hpattern","parseTimeZoneRegx","iString","pos","parserRegex","parsedDateParts","internalDateParse","dobj","tDate","ystrig","is2DigitYear","parseInt","getDateObject","setMilliseconds","tKeys","y","century","setFullYear","tValue","setDate","pDate","lDate","lastDay","setHours","tzValue","setMinutes","getMinutes","retOptions","curObject","matchString","internalNumberParser","tmatch","getZoneValue","toUpperCase","toLowerCase","tZone","cRegex","splitStr","ival","parseRegex","groupRegex","NumberParser","numberParser","custom","symbolRegex","infinity","symbolpattern","getParsedNumber","isNegative","tempValue","end","Infinity","NaN","exponent","parseFloat","convertMaxFracDigits","decimalSplitValue","Observer","context","ranArray","boundedEvents","on","property","cntxt","notExist","isHandlerPresent","off","splice","indexLocation","notify","argument","successHandler","errorHandler","name","blazor","blazorCallback","objs","index","isTrigger","promise","then","isJson","JSON","parse","dateReviver","catch","dPattern","destroy","onIntlChange","rightToLeft","cldrData","defaultCulture","Internationalization","cultureName","getDateFormat","getCulture","getNumberFormat","getDateParser","getNumberParser","formatNumber","formatDate","parseDate","parseNumber","getDatePattern","isExcelFormat","getActualDateTimeFormat","getNumberPattern","isExcel","getActualNumberFormat","getFirstDayOfWeek","getWeekData","setCulture","setCurrencyCode","loadCldr","enableRtl","status","getNumericObject","locale","numSystem","symbPattern","getNumberDependable","getDefaultDateObject","mode","blazorCultureFormats","customRegex","fractionRegex","patternRegex","dateConverterMapper","defaultFirstDay","firstDayMapper","currencyFormatRegex","curWithoutNumberRegex","typeMapper","basicPatterns","defaultObject","blazorDefaultObject","patternMatcher","C","P","N","A","E","blazorCulture","iType","tPattern","calendartype","dateString","convertMapper","tempString","curFormatMapper","needFraction","cSymbol","fractionOnly","changeCurrencySymbol","groupPattern","fraction","fmatch","sym","symbol","getCurrency","formatSplit","customNumberFormat","integerPart","fractionPart","isCurrencyPercent","parts","actual","part","loc","dateObj","actualPattern","tLength","timeZonePattern","processSymbol","numrericObject","curMatch","curCode","hasNegativePattern","defaultMinimum","fractionDigitsPattern","minimumIntegerPattern","groupingPattern","cPattern","minDigits","maxDigits","diff","integer","x","hash","firstDay","iCulture","aCurrency","rCurrency","iCurrency","newYear","weeknum","daynum","getTime","nYear","nday","headerRegex","defaultType","Ajax","async","contentType","emitError","url","send","eventArgs","cancel","httpRequest","Promise","resolve","reject","XMLHttpRequest","onreadystatechange","stateChange","onLoad","onload","onProgress","onprogress","onAbort","onabort","onError","onerror","onUploadProgress","upload","setRequestHeader","beforeSend","onSuccess","failureHandler","reason","onFailure","responseText","dataType","error","readyState","statusText","getResponseHeader","responseHeaders","header","headers","exec","getAllResponseHeaders","REGX_MOBILE","REGX_IE","REGX_IE11","REGX_IOS","REGX_IOS7","REGX_ANDROID","REGX_WINDOWS","REGX_VERSION","REGX_BROWSER","OPERA","EDGE","CHROME","PANTHOMEJS","SAFARI","WEBKIT","MSIE","MOZILLA","browserDetails","Browser","extractBrowserDetail","browserInfo","clientInfo","userAgent","version","language","navigator","getEvent","events","isPointer","isTouch","isDevice","move","getTouchStartEvent","getTouchEndEvent","getTouchMoveEvent","getTouchCancelEvent","regX","uA","info","isIE","maxTouchPoints","isMSPointer","isIos","isIos7","isAndroid","isWebView","cordova","PhoneGap","phonegap","forge","isWindows","touchStartEvent","touchMoveEvent","touchEndEvent","touchCancelEvent","EventHandler","addOrGetEventData","__eventList","add","eventName","listener","bindTo","intDebounce","eventData","debounceListener","passive","remove","some","clearEvents","copyData","shift","trigger","eventProp","SVG_REG","tagName","properties","createElementNS","className","styles","setAttribute","attrs","attributes","addClass","elements","classes","classList","getClassList","ele","curClass","contains","removeClass","canRemove","classArr","isVisible","style","visibility","offsetWidth","prepend","fromElements","toElement","isEval","docFrag","createDocumentFragment","insertBefore","firstElementChild","executeScript","append","eleArray","script","head","detach","removeChild","iKey","select","selector","needsVDOM","querySelectId","selectAll","nodeList","idList","list","splitId","setId","closest","el","nodeType","siblings","childNodes","curNode","ELEMENT_NODE","getAttributeOrDefault","attrVal","isObj","getAttribute","setStyleAttribute","addClasses","removeClasses","msMatchesSelector","webkitMatchesSelector","includeInnerHTML","containsClass","isColEName","Base","isRendered","isComplexArraySetter","allowServerDataBinding","isProtectedOnChange","changedProperties","oldProperties","bulkChanges","refreshing","ignoreCollectionWatch","finalUpdate","childChangedProperties","modelObserver","setProperties","isDestroyed","muteOnChange","prevDetection","dataBind","serverDataBind","callChildDataBind","clearChanges","getOwnPropertyNames","newChanges","oldChanges","onPropertyChanged","sfBlazor","updateModel","saveChanges","newValue","oldValue","moduleClass","getModuleName","ej2_instances","filter","getComponent","comp","getElementById","compName","removeChildInstance","childEle","getElementsByClassName","compInstance","getObject","curKey","defaultValue","getObjectArray","isSetter","isFactory","curType","propertyGetter","propertySetter","oldVal","complexGetter","complexSetter","complexFactoryGetter","complexFactorySetter","complexArrayGetter","defCollection","ignore","controlParent","extendFunc","descriptor","complexArrayDefinedCallback","configurable","defineProperty","complexArraySetter","oldValueCollection","newValCollection","complexArrayFactorySetter","complexArrayFactoryGetter","dFunc","keyString","propName","getParentKey","model","getArrayModel","ejsAction","isControlParent","arrayFunction","modelObject","action","Property","target","propertyDescriptor","set","get","enumerable","addPropertyCollection","Complex","ComplexFactory","Collection","CollectionFactory","Event$1","eventDescriptor","finalContext","getParentContext","NotifyPropertyChanges","classConstructor","propertyType","propList","complexProps","colProps","propNames","complexPropNames","colPropNames","eventNames","propertyName","getBuilderProperties","builderObject","propCollections","isPropertyArray","rex","childType","CreateBuilder","builderFunction","instanceFunction","create","curText","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","Animation_1","Animation","easing","ease","linear","easeIn","easeOut","easeInOut","elasticInOut","elasticIn","elasticOut","animate","getModel","delayAnimation","stop","animation","removeAttribute","animationId","frameId","cancelAnimationFrame","applyAnimation","timeStamp","step","timerId","prevTimeStamp","duration","startAnimation","begin","avg","timingFunction","progress","requestAnimationFrame","fail","newProp","oldProp","rippleEffect","rippleOptions","done","rippleModel","getRippleModel","rippleFlag","isRippleEnabled","rippleHandler","rippleUpHandler","rippleLeaveHandler","isCenterRipple","offset","getBoundingClientRect","offsetX","pageX","body","scrollLeft","offsetY","pageY","scrollTop","documentElement","left","right","top","bottom","radius","sqrt","diameter","rippleElement","getComputedStyle","getPropertyValue","transform","removeRipple","rippleElements","opacity","enableRipple","isRipple","MODULE_SUFFIX","ModuleLoader","loadedModules","inject","requiredModules","moduleList","reqLength","clean","clearUnusedModule","modl","module","modName","member","isModuleLoaded","moduleObject","memberName","getMemberName","isProperty","loadedModule","modules","usedModules","arg","removableModule","mod","ChildProperty","parentObj","isParentArray","updateChange","updateTimeOut","changeTime","clearUpdate","curIndex","restrictServerDataBind","isSaveChanges","parentKey","complexKeys","isFinal","actionProperty","valueLength","__decorate$1","componentCount","lastPageID","lastHistoryLen","versionBasedStatePersistence","enableVersionBasedPersistence","Component","randomId","isStringTemplate","needsID","isReactHybrid","moduleLoader","localObserver","detectFunction","appendTo","enablePersistence","setPersistData","refresh","preRender","injectModules","render","accessMount","mount","getRootElement","actualElement","getLocalData","eleId","localStorage","getItem","ej2StatePersistenceVersion","mergePersistData","renderComplete","wrapperElement","getInjectedModules","injectedModules","Inject","isVDOM","triggerStateChange","setState","currentContext","calls","setItem","getPersistData","renderReactTemplates","clearTemplate","templateName","isHistoryChanged","pageID","location","href","history","charCodeAt","addOnPersist","persistObj","objValue","getActualProperties","stringify","ignoreOnPersist","iterateJsonProperties","ignoreList","newObj","newList","__decorate$2","Draggable_1","defaultPosition","isDraggedObject","isDragged","Position","Draggable","dragLimit","getDefaultPosition","borderWidth","padding","diffX","prevLeft","prevTop","dragProcessStarted","tapHoldTimer","externalInitialize","diffY","parentScrollX","parentScrollY","droppables","toggleEvents","scope","isUnWire","handle","enableTapHold","mobileInitialize","initialize","evt","currentTarget","removeTapholdTimer","tapHoldThreshold","getScrollableParent","axis","scroll","client","tempScrollHeight","scrollHeight","tempScrollWidth","scrollWidth","getScrollableValues","isModalDialog","verticalScrollParent","horizontalScrollParent","curTarget","currentStateTarget","isDragStarted","abort","abortSelectors","preventDefault","changedTouches","intCoord","getCoordinates","initialPosition","clientX","clientY","relativeXPosition","relativeYPosition","intDragStart","intDestroy","isPreventSelect","isChangeTouch","intCordinate","styleProp","margin","marginLeft","marginTop","marginRight","marginBottom","dragTarget","intClosest","isReplaceDragEle","currentStateCheck","calculateParentPosition","position","getMousePosition","isDragScroll","distance","getHelperElement","dragTargetElement","helperElement","parentClientRect","offsetParent","dragStart","getProperTargetElement","bindEvents","bindDragEvents","dragElement","dragArea","setDragArea","enableTailMode","enableScrollHandler","posValue","getProcessedPositionValue","dragElePosition","getDragPosition","intDrag","intDragStop","setGlobalDroppables","elementInViewport","offsetTop","offsetLeft","width","height","offsetHeight","pageYOffset","pageXOffset","innerHeight","innerWidth","queryPositionInfo","rect","docHeight","getDocumentWidthHeight","docWidth","drag","eleObj","checkTargetElement","hoverObject","triggerOutFunction","dragData","intOver","helper","tLeft","tTop","pagex","pagey","dLeft","dTop","skipDistanceCheck","helperWidth","helperHeight","iTop","iLeft","draEleTop","draEleLeft","tempDraEleTop","dragValue","enableAutoScroll","scrollIntoView","intOut","docBody","docEle","returnValue","dragStop","dragStopCalled","intDrop","change","eleWidthBound","eleHeightBound","elementArea","tborder","tpadding","lowerKey","prevStyle","pointerEvents","elementFromPoint","oldEle","isdragscroll","dragEle","srcElement","isOffsetParent","cursorAt","sender","reset","draggable","draggedElement","dropIns","getDropInstance","parentElement","drop","eleInst","__decorate$3","Droppable","mouseOver","wireEvents","accept","isDrag","area","isDropArea","canDrop","droppedElement","display","coord","__decorate$4","KeyboardEvents_1","keyCode","KeyboardEvents","keyPressHandler","isAltKey","altKey","isCtrlKey","ctrlKey","isShiftKey","shiftKey","curkeyCode","which","keyConfigs","configCollection","rconfig","rKeyObj","getKeyConfigData","trim","keyAction","unwireEvents","config","configCache","keyData","Number","getKeyCode","keyVal","L10n","controlName","localeStrings","setLocale","intLocale","intGetControlConstant","currentLocale","load","localeObject","getConstant","__decorate$5","SwipeSettings","swipeRegex","Touch","touchAction","tapCount","startEvent","point","updateChangeTouches","isTouchMoved","movedDirection","startPoint","lastMovedPoint","startEventData","hScrollLocked","vScrollLocked","tStampStart","now","timeOutTapHold","tapHoldEvent","moveEvent","endEvent","cancelEvent","movedPoint","eScrollArgs","calcScrollPoints","scrollArg","startEvents","originalEvent","startX","startY","distanceX","distanceY","scrollDirection","velocity","getVelocity","timeOutTap","swipeFn","tap","tapThreshold","modeclear","endPoint","calcPoints","swipeArgs","swipeDirection","eSwipeArgs","tDistance","swipeSettings","swipeThresholdDistance","defaultArgs","canTrigger","scrollBool","isScrollable","moved","checkSwipe","modeClear","lastTapTime","eleStyle","overflow","overflowX","overflowY","eTapArgs","pnt","newX","newY","newT","xDist","yDist","LINES","QUOTES","IF_STMT","ELSEIF_STMT","ELSE_STMT","FOR_STMT","IF_OR_FOR","CALL_FUNCTION","NOT_NUMBER","WORD","DBL_QUOTED_STR","WORDIF","exp","ARR_OBJ","SINGLE_SLASH","DOUBLE_SLASH","WORDFUNC","WINDOWFUNC","compile$1","template","ignorePrefix","argName","evalExpResult","evalExp","condtion","fnCode","fn","varCOunt","localKeys","isClass","singleSpace","cnt","matchStr","SPECIAL_CHAR","rlStr","addNameSpace","strs","HandleSpecialCharArrObj","mtc","fnStr","fNameSpace","ftArray","splRegexp","arrObj","splArrRegexp","SlashReplace","NameSpaceForspecialChar","addNS","NameSpaceArrObj","arrObjReg","tempStr","double","nameSpaceNew","windowFunc","quotes","HAS_ROW","HAS_SVG","blazorTemplates","getRandomId","random","compile$$1","templateString","compiler","engineObj","compile","templateId","blazorTemplateId","blazorId","updateBlazorTemplate","isEmpty","callBack","ejsIntrop","updateTemplate","resetBlazorTemplate","templateDiv","innerTemplates","tempId","tempElement","setTemplateEngine","classObj","getTemplateEngine","Engine","removeTags","removeAttrs","attribute","jsEvents","SanitizeHtmlHelper","beforeSanitize","selectors","tags","sanitize","item","output","serializeValue","wrapElement","removeXssTags","removeJsEvents","removeXssAttrs","tempEleValue","removeElement","nodes","children","localName","attr","hasAttribute"],"mappings":"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","sourcesContent":["const instances = 'ej2_instances';\nlet uid = 0;\nlet isBlazorPlatform = false;\n/**\n * Function to check whether the platform is blazor or not.\n *\n * @returns {void} result\n * @private\n */\nfunction disableBlazorMode() {\n    isBlazorPlatform = false;\n}\n/**\n * Create Instance from constructor function with desired parameters.\n *\n * @param {Function} classFunction - Class function to which need to create instance\n * @param {any[]} params - Parameters need to passed while creating instance\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\nfunction createInstance(classFunction, params) {\n    const arrayParam = params;\n    arrayParam.unshift(undefined);\n    return new (Function.prototype.bind.apply(classFunction, arrayParam));\n}\n/**\n * To run a callback function immediately after the browser has completed other operations.\n *\n * @param {Function} handler - callback function to be triggered.\n * @returns {Function} ?\n * @private\n */\nfunction setImmediate(handler) {\n    let unbind;\n    // eslint-disable-next-line\n    const num = new Uint16Array(5);\n    const intCrypto = window.msCrypto || window.crypto;\n    intCrypto.getRandomValues(num);\n    let secret = 'ej2' + combineArray(num);\n    // eslint-disable-next-line\n    let messageHandler = (event) => {\n        if (event.source === window && typeof event.data === 'string' && event.data.length <= 32 && event.data === secret) {\n            handler();\n            unbind();\n        }\n    };\n    window.addEventListener('message', messageHandler, false);\n    window.postMessage(secret, '*');\n    return unbind = () => {\n        window.removeEventListener('message', messageHandler);\n        handler = messageHandler = secret = undefined;\n    };\n}\n/**\n * To get nameSpace value from the desired object.\n *\n * @param {string} nameSpace - String value to the get the inner object\n * @param {any} obj - Object to get the inner object value.\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\nfunction getValue(nameSpace, obj) {\n    // eslint-disable-next-line\n    let value = obj;\n    const splits = nameSpace.replace(/\\[/g, '.').replace(/\\]/g, '').split('.');\n    for (let i = 0; i < splits.length && !isUndefined(value); i++) {\n        value = value[splits[i]];\n    }\n    return value;\n}\n/**\n * To set value for the nameSpace in desired object.\n *\n * @param {string} nameSpace - String value to the get the inner object\n * @param {any} value - Value that you need to set.\n * @param {any} obj - Object to get the inner object value.\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\nfunction setValue(nameSpace, value, obj) {\n    const keys = nameSpace.replace(/\\[/g, '.').replace(/\\]/g, '').split('.');\n    // eslint-disable-next-line\n    const start = obj || {};\n    // eslint-disable-next-line\n    let fromObj = start;\n    let i;\n    const length = keys.length;\n    let key;\n    for (i = 0; i < length; i++) {\n        key = keys[i];\n        if (i + 1 === length) {\n            fromObj[key] = value === undefined ? {} : value;\n        }\n        else if (isNullOrUndefined(fromObj[key])) {\n            fromObj[key] = {};\n        }\n        fromObj = fromObj[key];\n    }\n    return start;\n}\n/**\n * Delete an item from Object\n *\n * @param {any} obj - Object in which we need to delete an item.\n * @param {string} key - String value to the get the inner object\n * @returns {void} ?\n * @private\n */\n// eslint-disable-next-line\nfunction deleteObject(obj, key) {\n    delete obj[key];\n}\n/**\n * Check weather the given argument is only object.\n *\n * @param {any} obj - Object which is need to check.\n * @returns {boolean} ?\n * @private\n */\n// eslint-disable-next-line\nfunction isObject(obj) {\n    const objCon = {};\n    return (!isNullOrUndefined(obj) && obj.constructor === objCon.constructor);\n}\n/**\n * To get enum value by giving the string.\n *\n * @param {any} enumObject - Enum object.\n * @param {string} enumValue - Enum value to be searched\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\nfunction getEnumValue(enumObject, enumValue) {\n    // eslint-disable-next-line\n    return enumObject[enumValue];\n}\n/**\n * Merge the source object into destination object.\n *\n * @param {any} source - source object which is going to merge with destination object\n * @param {any} destination - object need to be merged\n * @returns {void} ?\n * @private\n */\nfunction merge(source, destination) {\n    if (!isNullOrUndefined(destination)) {\n        const temrObj = source;\n        const tempProp = destination;\n        const keys = Object.keys(destination);\n        const deepmerge = 'deepMerge';\n        for (const key of keys) {\n            if (!isNullOrUndefined(temrObj[deepmerge]) && (temrObj[deepmerge].indexOf(key) !== -1) &&\n                (isObject(tempProp[key]) || Array.isArray(tempProp[key]))) {\n                extend(temrObj[key], temrObj[key], tempProp[key], true);\n            }\n            else {\n                temrObj[key] = tempProp[key];\n            }\n        }\n    }\n}\n/**\n * Extend the two object with newer one.\n *\n * @param {any} copied - Resultant object after merged\n * @param {Object} first - First object need to merge\n * @param {Object} second - Second object need to merge\n * @param {boolean} deep ?\n * @returns {Object} ?\n * @private\n */\nfunction extend(copied, first, second, deep) {\n    const result = copied && typeof copied === 'object' ? copied : {};\n    let length = arguments.length;\n    if (deep) {\n        length = length - 1;\n    }\n    for (let i = 1; i < length; i++) {\n        // eslint-disable-next-line\n        if (!arguments[i]) {\n            continue;\n        }\n        // eslint-disable-next-line\n        let obj1 = arguments[i];\n        Object.keys(obj1).forEach((key) => {\n            const src = result[key];\n            const copy = obj1[key];\n            let clone;\n            const isArrayChanged = Array.isArray(copy) && Array.isArray(src) && (copy.length !== src.length);\n            // eslint-disable-next-line\n            const blazorEventExtend = isBlazor() ? (!(src instanceof Event) && !isArrayChanged) : true;\n            if (deep && blazorEventExtend && (isObject(copy) || Array.isArray(copy))) {\n                if (isObject(copy)) {\n                    clone = src ? src : {};\n                    // eslint-disable-next-line\n                    if (Array.isArray(clone) && clone.hasOwnProperty('isComplexArray')) {\n                        extend(clone, {}, copy, deep);\n                    }\n                    else {\n                        result[key] = extend(clone, {}, copy, deep);\n                    }\n                }\n                else {\n                    /* istanbul ignore next */\n                    clone = isBlazor() ? src && Object.keys(copy).length : src ? src : [];\n                    result[key] = extend([], clone, copy, deep);\n                }\n            }\n            else {\n                result[key] = copy;\n            }\n        });\n    }\n    return result;\n}\n/**\n * To check whether the object is null or undefined.\n *\n * @param {Object} value - To check the object is null or undefined\n * @returns {boolean} ?\n * @private\n */\nfunction isNullOrUndefined(value) {\n    return value === undefined || value === null;\n}\n/**\n * To check whether the object is undefined.\n *\n * @param {Object} value - To check the object is undefined\n * @returns {boolean} ?\n * @private\n */\nfunction isUndefined(value) {\n    return ('undefined' === typeof value);\n}\n/**\n * To return the generated unique name\n *\n * @param {string} definedName - To concatenate the unique id to provided name\n * @returns {string} ?\n * @private\n */\nfunction getUniqueID(definedName) {\n    return definedName + '_' + uid++;\n}\n/**\n * It limits the rate at which a function can fire. The function will fire only once every provided second instead of as quickly.\n *\n * @param {Function} eventFunction - Specifies the function to run when the event occurs\n * @param {number} delay - A number that specifies the milliseconds for function delay call option\n * @returns {Function} ?\n * @private\n */\nfunction debounce(eventFunction, delay) {\n    // eslint-disable-next-line\n    let out;\n    return function () {\n        // eslint-disable-next-line\n        const args = arguments;\n        const later = () => {\n            out = null;\n            return eventFunction.apply(this, args);\n        };\n        clearTimeout(out);\n        out = setTimeout(later, delay);\n    };\n}\n/**\n * To convert the object to string for query url\n *\n * @param  {Object} data ?\n * @returns {string} ?\n * @private\n */\n// eslint-disable-next-line\nfunction queryParams(data) {\n    const array = [];\n    const keys = Object.keys(data);\n    for (const key of keys) {\n        array.push(encodeURIComponent(key) + '=' + encodeURIComponent('' + data[key]));\n    }\n    return array.join('&');\n}\n/**\n * To check whether the given array contains object.\n *\n * @param {any} value - Specifies the T type array to be checked.\n * @returns {boolean} ?\n * @private\n */\nfunction isObjectArray(value) {\n    const parser = Object.prototype.toString;\n    if (parser.call(value) === '[object Array]') {\n        if (parser.call(value[0]) === '[object Object]') {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * To check whether the  child element is descendant to parent element or parent and child are same element.\n *\n * @param {Element} child - Specifies the child element to compare with parent.\n * @param {Element} parent - Specifies the parent element.\n * @returns {boolean} ?\n * @private\n */\nfunction compareElementParent(child, parent) {\n    const node = child;\n    if (node === parent) {\n        return true;\n    }\n    else if (node === document || !node) {\n        return false;\n    }\n    else {\n        return compareElementParent(node.parentNode, parent);\n    }\n}\n/**\n * To throw custom error message.\n *\n * @param {string} message - Specifies the error message to be thrown.\n * @returns {void} ?\n * @private\n */\nfunction throwError(message) {\n    try {\n        throw new Error(message);\n    }\n    catch (e) {\n        // eslint-disable-next-line\n        throw e.message + '\\n' + e.stack;\n    }\n}\n/**\n * This function is used to print given element\n *\n * @param {Element} element - Specifies the print content element.\n * @param {Window} printWindow - Specifies the print window.\n * @returns {Window} ?\n * @private\n */\nfunction print(element, printWindow) {\n    const div = document.createElement('div');\n    const links = [].slice.call(document.getElementsByTagName('head')[0].querySelectorAll('base, link, style'));\n    let reference = '';\n    if (isNullOrUndefined(printWindow)) {\n        printWindow = window.open('', 'print', 'height=452,width=1024,tabbar=no');\n    }\n    div.appendChild(element.cloneNode(true));\n    for (let i = 0, len = links.length; i < len; i++) {\n        reference += links[i].outerHTML;\n    }\n    printWindow.document.write('<!DOCTYPE html> <html><head>' + reference + '</head><body>' + div.innerHTML +\n        '<script> (function() { window.ready = true; })(); </script>' + '</body></html>');\n    printWindow.document.close();\n    printWindow.focus();\n    // eslint-disable-next-line\n    const interval = setInterval(() => {\n        if (printWindow.ready) {\n            printWindow.print();\n            printWindow.close();\n            clearInterval(interval);\n        }\n    }, 500);\n    return printWindow;\n}\n/**\n * Function to normalize the units applied to the element.\n *\n * @param {number|string} value ?\n * @returns {string} result\n * @private\n */\nfunction formatUnit(value) {\n    const result = value + '';\n    if (result === 'auto' || result.indexOf('%') !== -1 || result.indexOf('px') !== -1) {\n        return result;\n    }\n    return result + 'px';\n}\n/**\n * Function to check whether the platform is blazor or not.\n *\n * @returns {void} result\n * @private\n */\nfunction enableBlazorMode() {\n    isBlazorPlatform = true;\n}\n/**\n * Function to check whether the platform is blazor or not.\n *\n * @returns {boolean} result\n * @private\n */\nfunction isBlazor() {\n    return isBlazorPlatform;\n}\n/**\n * Function to convert xPath to DOM element in blazor platform\n *\n * @returns {HTMLElement} result\n * @param {HTMLElement | object} element ?\n * @private\n */\nfunction getElement(element) {\n    const xPath = 'xPath';\n    if (!(element instanceof Node) && isBlazor() && !isNullOrUndefined(element[xPath])) {\n        return document.evaluate(element[xPath], document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n    }\n    return element;\n}\n/**\n * Function to fetch the Instances of a HTML element for the given component.\n *\n * @param {string | HTMLElement} element ?\n * @param {any} component ?\n * @returns {Object} ?\n * @private\n */\n// eslint-disable-next-line\nfunction getInstance(element, component) {\n    // eslint-disable-next-line\n    let elem = (typeof (element) === 'string') ? document.querySelector(element) : element;\n    if (elem[instances]) {\n        for (const inst of elem[instances]) {\n            if (inst instanceof component) {\n                return inst;\n            }\n        }\n    }\n    return null;\n}\n/**\n * Function to add instances for the given element.\n *\n * @param {string | HTMLElement} element ?\n * @param {Object} instance ?\n * @returns {void} ?\n * @private\n */\nfunction addInstance(element, instance) {\n    // eslint-disable-next-line\n    let elem = (typeof (element) === 'string') ? document.querySelector(element) : element;\n    if (elem[instances]) {\n        elem[instances].push(instance);\n    }\n    else {\n        elem[instances] = [instance];\n    }\n}\n/**\n * Function to generate the unique id.\n *\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\nfunction uniqueID() {\n    if ((typeof window) === 'undefined') {\n        return;\n    }\n    // eslint-disable-next-line\n    let num = new Uint16Array(5);\n    const intCrypto = window.msCrypto || window.crypto;\n    return intCrypto.getRandomValues(num);\n}\n/**\n *\n * @param {Int16Array} num ?\n * @returns {string} ?\n */\nfunction combineArray(num) {\n    let ret = '';\n    for (let i = 0; i < 5; i++) {\n        ret += (i ? ',' : '') + num[i];\n    }\n    return ret;\n}\n\n/**\n * Parser\n */\nconst defaultNumberingSystem = {\n    'latn': {\n        '_digits': '0123456789',\n        '_type': 'numeric'\n    }\n};\nconst defaultNumberSymbols = {\n    'decimal': '.',\n    'group': ',',\n    'percentSign': '%',\n    'plusSign': '+',\n    'minusSign': '-',\n    'infinity': '∞',\n    'nan': 'NaN',\n    'exponential': 'E'\n};\nconst latnNumberSystem = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n/**\n * Interface for parser base\n *\n * @private\n */\nclass ParserBase {\n    /**\n     * Returns the cldr object for the culture specifies\n     *\n     * @param {Object} obj - Specifies the object from which culture object to be acquired.\n     * @param {string} cName - Specifies the culture name.\n     * @returns {Object} ?\n     */\n    static getMainObject(obj, cName) {\n        const value = isBlazor() ? cName : 'main.' + cName;\n        return getValue(value, obj);\n    }\n    /**\n     * Returns the numbering system object from given cldr data.\n     *\n     * @param {Object} obj - Specifies the object from which number system is acquired.\n     * @returns {Object} ?\n     */\n    static getNumberingSystem(obj) {\n        return getValue('supplemental.numberingSystems', obj) || this.numberingSystems;\n    }\n    /**\n     * Returns the reverse of given object keys or keys specified.\n     *\n     * @param {Object} prop - Specifies the object to be reversed.\n     * @param {number[]} keys - Optional parameter specifies the custom keyList for reversal.\n     * @returns {Object} ?\n     */\n    static reverseObject(prop, keys) {\n        const propKeys = keys || Object.keys(prop);\n        const res = {};\n        for (const key of propKeys) {\n            // eslint-disable-next-line\n            if (!res.hasOwnProperty(prop[key])) {\n                // eslint-disable-next-line\n                res[prop[key]] = key;\n            }\n        }\n        return res;\n    }\n    /**\n     * Returns the symbol regex by skipping the escape sequence.\n     *\n     * @param {string[]} props - Specifies the array values to be skipped.\n     * @returns {RegExp} ?\n     */\n    static getSymbolRegex(props) {\n        const regexStr = props.map((str) => {\n            return str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\n        }).join('|');\n        return new RegExp(regexStr, 'g');\n    }\n    /**\n     *\n     * @param {Object} prop ?\n     * @returns {Object} ?\n     */\n    static getSymbolMatch(prop) {\n        const matchKeys = Object.keys(defaultNumberSymbols);\n        const ret = {};\n        for (const key of matchKeys) {\n            // eslint-disable-next-line\n            ret[prop[key]] = defaultNumberSymbols[key];\n        }\n        return ret;\n    }\n    /**\n     * Returns regex string for provided value\n     *\n     * @param {string} val ?\n     * @returns {string} ?\n     */\n    static constructRegex(val) {\n        const len = val.length;\n        let ret = '';\n        for (let i = 0; i < len; i++) {\n            if (i !== len - 1) {\n                ret += val[i] + '|';\n            }\n            else {\n                ret += val[i];\n            }\n        }\n        return ret;\n    }\n    /**\n     * Returns the replaced value of matching regex and obj mapper.\n     *\n     * @param {string} value - Specifies the  values to be replaced.\n     * @param {RegExp} regex - Specifies the  regex to search.\n     * @param {Object} obj - Specifies the  object matcher to be replace value parts.\n     * @returns {string} ?\n     */\n    static convertValueParts(value, regex, obj) {\n        return value.replace(regex, (str) => {\n            // eslint-disable-next-line\n            return obj[str];\n        });\n    }\n    /**\n     * Returns default numbering system object for formatting from cldr data\n     *\n     * @param {Object} obj ?\n     * @returns {NumericObject} ?\n     */\n    static getDefaultNumberingSystem(obj) {\n        const ret = {};\n        ret.obj = getValue('numbers', obj);\n        ret.nSystem = getValue('defaultNumberingSystem', ret.obj);\n        return ret;\n    }\n    /**\n     * Returns the replaced value of matching regex and obj mapper.\n     *\n     * @param {Object} curObj ?\n     * @param {Object} numberSystem ?\n     * @param {boolean} needSymbols ?\n     * @param {boolean} blazorMode ?\n     * @returns {Object} ?\n     */\n    static getCurrentNumericOptions(curObj, numberSystem, needSymbols, blazorMode) {\n        const ret = {};\n        const cur = this.getDefaultNumberingSystem(curObj);\n        if (!isUndefined(cur.nSystem) || blazorMode) {\n            const digits = blazorMode ? getValue('obj.mapperDigits', cur) : getValue(cur.nSystem + '._digits', numberSystem);\n            if (!isUndefined(digits)) {\n                ret.numericPair = this.reverseObject(digits, latnNumberSystem);\n                ret.numberParseRegex = new RegExp(this.constructRegex(digits), 'g');\n                ret.numericRegex = '[' + digits[0] + '-' + digits[9] + ']';\n                if (needSymbols) {\n                    ret.numericRegex = digits[0] + '-' + digits[9];\n                    ret.symbolNumberSystem = getValue(blazorMode ? 'numberSymbols' : 'symbols-numberSystem-' + cur.nSystem, cur.obj);\n                    ret.symbolMatch = this.getSymbolMatch(ret.symbolNumberSystem);\n                    ret.numberSystem = cur.nSystem;\n                }\n            }\n        }\n        return ret;\n    }\n    /**\n     * Returns number mapper object for the provided cldr data\n     *\n     * @param {Object} curObj ?\n     * @param {Object} numberSystem ?\n     * @param {boolean} isNumber ?\n     * @returns {NumberMapper} ?\n     */\n    // eslint-disable-next-line\n    static getNumberMapper(curObj, numberSystem, isNumber) {\n        const ret = { mapper: {} };\n        const cur = this.getDefaultNumberingSystem(curObj);\n        if (!isUndefined(cur.nSystem)) {\n            ret.numberSystem = cur.nSystem;\n            ret.numberSymbols = getValue('symbols-numberSystem-' + cur.nSystem, cur.obj);\n            ret.timeSeparator = getValue('timeSeparator', ret.numberSymbols);\n            const digits = getValue(cur.nSystem + '._digits', numberSystem);\n            if (!isUndefined(digits)) {\n                for (const i of latnNumberSystem) {\n                    // eslint-disable-next-line\n                    ret.mapper[i] = digits[i];\n                }\n            }\n        }\n        return ret;\n    }\n}\nParserBase.nPair = 'numericPair';\nParserBase.nRegex = 'numericRegex';\nParserBase.numberingSystems = defaultNumberingSystem;\n/**\n * @private\n */\nconst blazorCurrencyData = {\n    'DJF': 'Fdj',\n    'ERN': 'Nfk',\n    'ETB': 'Br',\n    'NAD': '$',\n    'ZAR': 'R',\n    'XAF': 'FCFA',\n    'GHS': 'GH₵',\n    'XDR': 'XDR',\n    'AED': 'د.إ.‏',\n    'BHD': 'د.ب.‏',\n    'DZD': 'د.ج.‏',\n    'EGP': 'ج.م.‏',\n    'ILS': '₪',\n    'IQD': 'د.ع.‏',\n    'JOD': 'د.ا.‏',\n    'KMF': 'CF',\n    'KWD': 'د.ك.‏',\n    'LBP': 'ل.ل.‏',\n    'LYD': 'د.ل.‏',\n    'MAD': 'د.م.‏',\n    'MRU': 'أ.م.',\n    'OMR': 'ر.ع.‏',\n    'QAR': 'ر.ق.‏',\n    'SAR': 'ر.س.‏',\n    'SDG': 'ج.س.',\n    'SOS': 'S',\n    'SSP': '£',\n    'SYP': 'ل.س.‏',\n    'TND': 'د.ت.‏',\n    'YER': 'ر.ي.‏',\n    'CLP': '$',\n    'INR': '₹',\n    'TZS': 'TSh',\n    'EUR': '€',\n    'AZN': '₼',\n    'RUB': '₽',\n    'BYN': 'Br',\n    'ZMW': 'K',\n    'BGN': 'лв.',\n    'NGN': '₦',\n    'XOF': 'CFA',\n    'BDT': '৳',\n    'CNY': '¥',\n    'BAM': 'КМ',\n    'UGX': 'USh',\n    'USD': '$',\n    'CZK': 'Kč',\n    'GBP': '£',\n    'DKK': 'kr.',\n    'KES': 'Ksh',\n    'CHF': 'CHF',\n    'MVR': 'ރ.',\n    'BTN': 'Nu.',\n    'XCD': 'EC$',\n    'AUD': '$',\n    'BBD': '$',\n    'BIF': 'FBu',\n    'BMD': '$',\n    'BSD': '$',\n    'BWP': 'P',\n    'BZD': '$',\n    'CAD': '$',\n    'NZD': '$',\n    'FJD': '$',\n    'FKP': '£',\n    'GIP': '£',\n    'GMD': 'D',\n    'GYD': '$',\n    'HKD': '$',\n    'IDR': 'Rp',\n    'JMD': '$',\n    'KYD': '$',\n    'LRD': '$',\n    'MGA': 'Ar',\n    'MOP': 'MOP$',\n    'MUR': 'Rs',\n    'MWK': 'MK',\n    'MYR': 'RM',\n    'PGK': 'K',\n    'PHP': '₱',\n    'PKR': 'Rs',\n    'RWF': 'RF',\n    'SBD': '$',\n    'SCR': 'SR',\n    'SEK': 'kr',\n    'SGD': '$',\n    'SHP': '£',\n    'SLL': 'Le',\n    'ANG': 'NAf.',\n    'SZL': 'E',\n    'TOP': 'T$',\n    'TTD': '$',\n    'VUV': 'VT',\n    'WST': 'WS$',\n    'ARS': '$',\n    'BOB': 'Bs',\n    'BRL': 'R$',\n    'COP': '$',\n    'CRC': '₡',\n    'CUP': '$',\n    'DOP': '$',\n    'GTQ': 'Q',\n    'HNL': 'L',\n    'MXN': '$',\n    'NIO': 'C$',\n    'PAB': 'B/.',\n    'PEN': 'S/',\n    'PYG': '₲',\n    'UYU': '$',\n    'VES': 'Bs.S',\n    'IRR': 'ريال',\n    'GNF': 'FG',\n    'CDF': 'FC',\n    'HTG': 'G',\n    'XPF': 'FCFP',\n    'HRK': 'kn',\n    'HUF': 'Ft',\n    'AMD': '֏',\n    'ISK': 'kr',\n    'JPY': '¥',\n    'GEL': '₾',\n    'CVE': '​',\n    'KZT': '₸',\n    'KHR': '៛',\n    'KPW': '₩',\n    'KRW': '₩',\n    'KGS': 'сом',\n    'AOA': 'Kz',\n    'LAK': '₭',\n    'MZN': 'MTn',\n    'MKD': 'ден',\n    'MNT': '₮',\n    'BND': '$',\n    'MMK': 'K',\n    'NOK': 'kr',\n    'NPR': 'रु',\n    'AWG': 'Afl.',\n    'SRD': '$',\n    'PLN': 'zł',\n    'AFN': '؋',\n    'STN': 'Db',\n    'MDL': 'L',\n    'RON': 'lei',\n    'UAH': '₴',\n    'LKR': 'රු.',\n    'ALL': 'Lekë',\n    'RSD': 'дин.',\n    'TJS': 'смн',\n    'THB': '฿',\n    'TMT': 'm.',\n    'TRY': '₺',\n    'UZS': 'сўм',\n    'VND': '₫',\n    'TWD': 'NT$'\n};\n/**\n *\n * @param {string} currencyCode ?\n * @returns {string} ?\n */\nfunction getBlazorCurrencySymbol(currencyCode) {\n    return getValue(currencyCode || '', blazorCurrencyData);\n}\n\n/***\n * Hijri parser\n */\n// eslint-disable-next-line\nvar HijriParser;\n(function (HijriParser) {\n    const dateCorrection = [28607, 28636, 28665, 28695, 28724, 28754, 28783, 28813, 28843, 28872, 28901, 28931, 28960, 28990,\n        29019, 29049, 29078, 29108, 29137, 29167, 29196, 29226, 29255, 29285, 29315, 29345, 29375, 29404, 29434, 29463, 29492, 29522,\n        29551, 29580, 29610, 29640, 29669, 29699, 29729, 29759, 29788, 29818, 29847, 29876, 29906, 29935, 29964, 29994, 30023, 30053,\n        30082, 30112, 30141, 30171, 30200, 30230, 30259, 30289, 30318, 30348, 30378, 30408, 30437, 30467, 30496, 30526, 30555, 30585,\n        30614, 30644, 30673, 30703, 30732, 30762, 30791, 30821, 30850, 30880, 30909, 30939, 30968, 30998, 31027, 31057, 31086, 31116,\n        31145, 31175, 31204, 31234, 31263, 31293, 31322, 31352, 31381, 31411, 31441, 31471, 31500, 31530, 31559, 31589, 31618, 31648,\n        31676, 31706, 31736, 31766, 31795, 31825, 31854, 31884, 31913, 31943, 31972, 32002, 32031, 32061, 32090, 32120, 32150, 32180,\n        32209, 32239, 32268, 32298, 32327, 32357, 32386, 32416, 32445, 32475, 32504, 32534, 32563, 32593, 32622, 32652, 32681, 32711,\n        32740, 32770, 32799, 32829, 32858, 32888, 32917, 32947, 32976, 33006, 33035, 33065, 33094, 33124, 33153, 33183, 33213, 33243,\n        33272, 33302, 33331, 33361, 33390, 33420, 33450, 33479, 33509, 33539, 33568, 33598, 33627, 33657, 33686, 33716, 33745, 33775,\n        33804, 33834, 33863, 33893, 33922, 33952, 33981, 34011, 34040, 34069, 34099, 34128, 34158, 34187, 34217, 34247, 34277, 34306,\n        34336, 34365, 34395, 34424, 34454, 34483, 34512, 34542, 34571, 34601, 34631, 34660, 34690, 34719, 34749, 34778, 34808, 34837,\n        34867, 34896, 34926, 34955, 34985, 35015, 35044, 35074, 35103, 35133, 35162, 35192, 35222, 35251, 35280, 35310, 35340, 35370,\n        35399, 35429, 35458, 35488, 35517, 35547, 35576, 35605, 35635, 35665, 35694, 35723, 35753, 35782, 35811, 35841, 35871, 35901,\n        35930, 35960, 35989, 36019, 36048, 36078, 36107, 36136, 36166, 36195, 36225, 36254, 36284, 36314, 36343, 36373, 36403, 36433,\n        36462, 36492, 36521, 36551, 36580, 36610, 36639, 36669, 36698, 36728, 36757, 36786, 36816, 36845, 36875, 36904, 36934, 36963,\n        36993, 37022, 37052, 37081, 37111, 37141, 37170, 37200, 37229, 37259, 37288, 37318, 37347, 37377, 37406, 37436, 37465, 37495,\n        37524, 37554, 37584, 37613, 37643, 37672, 37701, 37731, 37760, 37790, 37819, 37849, 37878, 37908, 37938, 37967, 37997, 38027,\n        38056, 38085, 38115, 38144, 38174, 38203, 38233, 38262, 38292, 38322, 38351, 38381, 38410, 38440, 38469, 38499, 38528, 38558,\n        38587, 38617, 38646, 38676, 38705, 38735, 38764, 38794, 38823, 38853, 38882, 38912, 38941, 38971, 39001, 39030, 39059, 39089,\n        39118, 39148, 39178, 39208, 39237, 39267, 39297, 39326, 39355, 39385, 39414, 39444, 39473, 39503, 39532, 39562, 39592, 39621,\n        39650, 39680, 39709, 39739, 39768, 39798, 39827, 39857, 39886, 39916, 39946, 39975, 40005, 40035, 40064, 40094, 40123, 40153,\n        40182, 40212, 40241, 40271, 40300, 40330, 40359, 40389, 40418, 40448, 40477, 40507, 40536, 40566, 40595, 40625, 40655, 40685,\n        40714, 40744, 40773, 40803, 40832, 40862, 40892, 40921, 40951, 40980, 41009, 41039, 41068, 41098, 41127, 41157, 41186, 41216,\n        41245, 41275, 41304, 41334, 41364, 41393, 41422, 41452, 41481, 41511, 41540, 41570, 41599, 41629, 41658, 41688, 41718, 41748,\n        41777, 41807, 41836, 41865, 41894, 41924, 41953, 41983, 42012, 42042, 42072, 42102, 42131, 42161, 42190, 42220, 42249, 42279,\n        42308, 42337, 42367, 42397, 42426, 42456, 42485, 42515, 42545, 42574, 42604, 42633, 42662, 42692, 42721, 42751, 42780, 42810,\n        42839, 42869, 42899, 42929, 42958, 42988, 43017, 43046, 43076, 43105, 43135, 43164, 43194, 43223, 43253, 43283, 43312, 43342,\n        43371, 43401, 43430, 43460, 43489, 43519, 43548, 43578, 43607, 43637, 43666, 43696, 43726, 43755, 43785, 43814, 43844, 43873,\n        43903, 43932, 43962, 43991, 44021, 44050, 44080, 44109, 44139, 44169, 44198, 44228, 44258, 44287, 44317, 44346, 44375, 44405,\n        44434, 44464, 44493, 44523, 44553, 44582, 44612, 44641, 44671, 44700, 44730, 44759, 44788, 44818, 44847, 44877, 44906, 44936,\n        44966, 44996, 45025, 45055, 45084, 45114, 45143, 45172, 45202, 45231, 45261, 45290, 45320, 45350, 45380, 45409, 45439, 45468,\n        45498, 45527, 45556, 45586, 45615, 45644, 45674, 45704, 45733, 45763, 45793, 45823, 45852, 45882, 45911, 45940, 45970, 45999,\n        46028, 46058, 46088, 46117, 46147, 46177, 46206, 46236, 46265, 46295, 46324, 46354, 46383, 46413, 46442, 46472, 46501, 46531,\n        46560, 46590, 46620, 46649, 46679, 46708, 46738, 46767, 46797, 46826, 46856, 46885, 46915, 46944, 46974, 47003, 47033, 47063,\n        47092, 47122, 47151, 47181, 47210, 47240, 47269, 47298, 47328, 47357, 47387, 47417, 47446, 47476, 47506, 47535, 47565, 47594,\n        47624, 47653, 47682, 47712, 47741, 47771, 47800, 47830, 47860, 47890, 47919, 47949, 47978, 48008, 48037, 48066, 48096, 48125,\n        48155, 48184, 48214, 48244, 48273, 48303, 48333, 48362, 48392, 48421, 48450, 48480, 48509, 48538, 48568, 48598, 48627, 48657,\n        48687, 48717, 48746, 48776, 48805, 48834, 48864, 48893, 48922, 48952, 48982, 49011, 49041, 49071, 49100, 49130, 49160, 49189,\n        49218, 49248, 49277, 49306, 49336, 49365, 49395, 49425, 49455, 49484, 49514, 49543, 49573, 49602, 49632, 49661, 49690, 49720,\n        49749, 49779, 49809, 49838, 49868, 49898, 49927, 49957, 49986, 50016, 50045, 50075, 50104, 50133, 50163, 50192, 50222, 50252,\n        50281, 50311, 50340, 50370, 50400, 50429, 50459, 50488, 50518, 50547, 50576, 50606, 50635, 50665, 50694, 50724, 50754, 50784,\n        50813, 50843, 50872, 50902, 50931, 50960, 50990, 51019, 51049, 51078, 51108, 51138, 51167, 51197, 51227, 51256, 51286, 51315,\n        51345, 51374, 51403, 51433, 51462, 51492, 51522, 51552, 51582, 51611, 51641, 51670, 51699, 51729, 51758, 51787, 51816, 51846,\n        51876, 51906, 51936, 51965, 51995, 52025, 52054, 52083, 52113, 52142, 52171, 52200, 52230, 52260, 52290, 52319, 52349, 52379,\n        52408, 52438, 52467, 52497, 52526, 52555, 52585, 52614, 52644, 52673, 52703, 52733, 52762, 52792, 52822, 52851, 52881, 52910,\n        52939, 52969, 52998, 53028, 53057, 53087, 53116, 53146, 53176, 53205, 53235, 53264, 53294, 53324, 53353, 53383, 53412, 53441,\n        53471, 53500, 53530, 53559, 53589, 53619, 53648, 53678, 53708, 53737, 53767, 53796, 53825, 53855, 53884, 53913, 53943, 53973,\n        54003, 54032, 54062, 54092, 54121, 54151, 54180, 54209, 54239, 54268, 54297, 54327, 54357, 54387, 54416, 54446, 54476, 54505,\n        54535, 54564, 54593, 54623, 54652, 54681, 54711, 54741, 54770, 54800, 54830, 54859, 54889, 54919, 54948, 54977, 55007, 55036,\n        55066, 55095, 55125, 55154, 55184, 55213, 55243, 55273, 55302, 55332, 55361, 55391, 55420, 55450, 55479, 55508, 55538, 55567,\n        55597, 55627, 55657, 55686, 55716, 55745, 55775, 55804, 55834, 55863, 55892, 55922, 55951, 55981, 56011, 56040, 56070, 56100,\n        56129, 56159, 56188, 56218, 56247, 56276, 56306, 56335, 56365, 56394, 56424, 56454, 56483, 56513, 56543, 56572, 56601, 56631,\n        56660, 56690, 56719, 56749, 56778, 56808, 56837, 56867, 56897, 56926, 56956, 56985, 57015, 57044, 57074, 57103, 57133, 57162,\n        57192, 57221, 57251, 57280, 57310, 57340, 57369, 57399, 57429, 57458, 57487, 57517, 57546, 57576, 57605, 57634, 57664, 57694,\n        57723, 57753, 57783, 57813, 57842, 57871, 57901, 57930, 57959, 57989, 58018, 58048, 58077, 58107, 58137, 58167, 58196, 58226,\n        58255, 58285, 58314, 58343, 58373, 58402, 58432, 58461, 58491, 58521, 58551, 58580, 58610, 58639, 58669, 58698, 58727, 58757,\n        58786, 58816, 58845, 58875, 58905, 58934, 58964, 58994, 59023, 59053, 59082, 59111, 59141, 59170, 59200, 59229, 59259, 59288,\n        59318, 59348, 59377, 59407, 59436, 59466, 59495, 59525, 59554, 59584, 59613, 59643, 59672, 59702, 59731, 59761, 59791, 59820,\n        59850, 59879, 59909, 59939, 59968, 59997, 60027, 60056, 60086, 60115, 60145, 60174, 60204, 60234, 60264, 60293, 60323, 60352,\n        60381, 60411, 60440, 60469, 60499, 60528, 60558, 60588, 60618, 60648, 60677, 60707, 60736, 60765, 60795, 60824, 60853, 60883,\n        60912, 60942, 60972, 61002, 61031, 61061, 61090, 61120, 61149, 61179, 61208, 61237, 61267, 61296, 61326, 61356, 61385, 61415,\n        61445, 61474, 61504, 61533, 61563, 61592, 61621, 61651, 61680, 61710, 61739, 61769, 61799, 61828, 61858, 61888, 61917, 61947,\n        61976, 62006, 62035, 62064, 62094, 62123, 62153, 62182, 62212, 62242, 62271, 62301, 62331, 62360, 62390, 62419, 62448, 62478,\n        62507, 62537, 62566, 62596, 62625, 62655, 62685, 62715, 62744, 62774, 62803, 62832, 62862, 62891, 62921, 62950, 62980, 63009,\n        63039, 63069, 63099, 63128, 63157, 63187, 63216, 63246, 63275, 63305, 63334, 63363, 63393, 63423, 63453, 63482, 63512, 63541,\n        63571, 63600, 63630, 63659, 63689, 63718, 63747, 63777, 63807, 63836, 63866, 63895, 63925, 63955, 63984, 64014, 64043, 64073,\n        64102, 64131, 64161, 64190, 64220, 64249, 64279, 64309, 64339, 64368, 64398, 64427, 64457, 64486, 64515, 64545, 64574, 64603,\n        64633, 64663, 64692, 64722, 64752, 64782, 64811, 64841, 64870, 64899, 64929, 64958, 64987, 65017, 65047, 65076, 65106, 65136,\n        65166, 65195, 65225, 65254, 65283, 65313, 65342, 65371, 65401, 65431, 65460, 65490, 65520, 65549, 65579, 65608, 65638, 65667,\n        65697, 65726, 65755, 65785, 65815, 65844, 65874, 65903, 65933, 65963, 65992, 66022, 66051, 66081, 66110, 66140, 66169, 66199,\n        66228, 66258, 66287, 66317, 66346, 66376, 66405, 66435, 66465, 66494, 66524, 66553, 66583, 66612, 66641, 66671, 66700, 66730,\n        66760, 66789, 66819, 66849, 66878, 66908, 66937, 66967, 66996, 67025, 67055, 67084, 67114, 67143, 67173, 67203, 67233, 67262,\n        67292, 67321, 67351, 67380, 67409, 67439, 67468, 67497, 67527, 67557, 67587, 67617, 67646, 67676, 67705, 67735, 67764, 67793,\n        67823, 67852, 67882, 67911, 67941, 67971, 68000, 68030, 68060, 68089, 68119, 68148, 68177, 68207, 68236, 68266, 68295, 68325,\n        68354, 68384, 68414, 68443, 68473, 68502, 68532, 68561, 68591, 68620, 68650, 68679, 68708, 68738, 68768, 68797, 68827, 68857,\n        68886, 68916, 68946, 68975, 69004, 69034, 69063, 69092, 69122, 69152, 69181, 69211, 69240, 69270, 69300, 69330, 69359, 69388,\n        69418, 69447, 69476, 69506, 69535, 69565, 69595, 69624, 69654, 69684, 69713, 69743, 69772, 69802, 69831, 69861, 69890, 69919,\n        69949, 69978, 70008, 70038, 70067, 70097, 70126, 70156, 70186, 70215, 70245, 70274, 70303, 70333, 70362, 70392, 70421, 70451,\n        70481, 70510, 70540, 70570, 70599, 70629, 70658, 70687, 70717, 70746, 70776, 70805, 70835, 70864, 70894, 70924, 70954, 70983,\n        71013, 71042, 71071, 71101, 71130, 71159, 71189, 71218, 71248, 71278, 71308, 71337, 71367, 71397, 71426, 71455, 71485, 71514,\n        71543, 71573, 71602, 71632, 71662, 71691, 71721, 71751, 71781, 71810, 71839, 71869, 71898, 71927, 71957, 71986, 72016, 72046,\n        72075, 72105, 72135, 72164, 72194, 72223, 72253, 72282, 72311, 72341, 72370, 72400, 72429, 72459, 72489, 72518, 72548, 72577,\n        72607, 72637, 72666, 72695, 72725, 72754, 72784, 72813, 72843, 72872, 72902, 72931, 72961, 72991, 73020, 73050, 73080, 73109,\n        73139, 73168, 73197, 73227, 73256, 73286, 73315, 73345, 73375, 73404, 73434, 73464, 73493, 73523, 73552, 73581, 73611, 73640,\n        73669, 73699, 73729, 73758, 73788, 73818, 73848, 73877, 73907, 73936, 73965, 73995, 74024, 74053, 74083, 74113, 74142, 74172,\n        74202, 74231, 74261, 74291, 74320, 74349, 74379, 74408, 74437, 74467, 74497, 74526, 74556, 74586, 74615, 74645, 74675, 74704,\n        74733, 74763, 74792, 74822, 74851, 74881, 74910, 74940, 74969, 74999, 75029, 75058, 75088, 75117, 75147, 75176, 75206, 75235,\n        75264, 75294, 75323, 75353, 75383, 75412, 75442, 75472, 75501, 75531, 75560, 75590, 75619, 75648, 75678, 75707, 75737, 75766,\n        75796, 75826, 75856, 75885, 75915, 75944, 75974, 76003, 76032, 76062, 76091, 76121, 76150, 76180, 76210, 76239, 76269, 76299,\n        76328, 76358, 76387, 76416, 76446, 76475, 76505, 76534, 76564, 76593, 76623, 76653, 76682, 76712, 76741, 76771, 76801, 76830,\n        76859, 76889, 76918, 76948, 76977, 77007, 77036, 77066, 77096, 77125, 77155, 77185, 77214, 77243, 77273, 77302, 77332, 77361,\n        77390, 77420, 77450, 77479, 77509, 77539, 77569, 77598, 77627, 77657, 77686, 77715, 77745, 77774, 77804, 77833, 77863, 77893,\n        77923, 77952, 77982, 78011, 78041, 78070, 78099, 78129, 78158, 78188, 78217, 78247, 78277, 78307, 78336, 78366, 78395, 78425,\n        78454, 78483, 78513, 78542, 78572, 78601, 78631, 78661, 78690, 78720, 78750, 78779, 78808, 78838, 78867, 78897, 78926, 78956,\n        78985, 79015, 79044, 79074, 79104, 79133, 79163, 79192, 79222, 79251, 79281, 79310, 79340, 79369, 79399, 79428, 79458, 79487,\n        79517, 79546, 79576, 79606, 79635, 79665, 79695, 79724, 79753, 79783, 79812, 79841, 79871, 79900, 79930, 79960, 79990\n    ];\n    /**\n     *\n     * @param {Date} gDate ?\n     * @returns {Object} ?\n     */\n    function getHijriDate(gDate) {\n        let day = gDate.getDate();\n        let month = gDate.getMonth();\n        let year = gDate.getFullYear();\n        let tMonth = month + 1;\n        let tYear = year;\n        if (tMonth < 3) {\n            tYear -= 1;\n            tMonth += 12;\n        }\n        let yPrefix = Math.floor(tYear / 100.);\n        let julilanOffset = yPrefix - Math.floor(yPrefix / 4.) - 2;\n        const julianNumber = Math.floor(365.25 * (tYear + 4716)) + Math.floor(30.6001 * (tMonth + 1)) + day - julilanOffset - 1524;\n        yPrefix = Math.floor((julianNumber - 1867216.25) / 36524.25);\n        julilanOffset = yPrefix - Math.floor(yPrefix / 4.) + 1;\n        const b = julianNumber + julilanOffset + 1524;\n        let c = Math.floor((b - 122.1) / 365.25);\n        const d = Math.floor(365.25 * c);\n        const tempMonth = Math.floor((b - d) / 30.6001);\n        day = (b - d) - Math.floor(30.6001 * tempMonth);\n        month = Math.floor((b - d) / 20.6001);\n        if (month > 13) {\n            c += 1;\n            month -= 12;\n        }\n        month -= 1;\n        year = c - 4716;\n        const modifiedJulianDate = julianNumber - 2400000;\n        // date calculation for year after 2077\n        const iyear = 10631. / 30.;\n        let z = julianNumber - 1948084;\n        const cyc = Math.floor(z / 10631.);\n        z = z - 10631 * cyc;\n        const j = Math.floor((z - 0.1335) / iyear);\n        const iy = 30 * cyc + j;\n        z = z - Math.floor(j * iyear + 0.1335);\n        let im = Math.floor((z + 28.5001) / 29.5);\n        /* istanbul ignore next */\n        if (im === 13) {\n            im = 12;\n        }\n        const tempDay = z - Math.floor(29.5001 * im - 29);\n        let i = 0;\n        for (; i < dateCorrection.length; i++) {\n            if (dateCorrection[i] > modifiedJulianDate) {\n                break;\n            }\n        }\n        const iln = i + 16260;\n        const ii = Math.floor((iln - 1) / 12);\n        let hYear = ii + 1;\n        let hmonth = iln - 12 * ii;\n        let hDate = modifiedJulianDate - dateCorrection[i - 1] + 1;\n        if ((hDate + '').length > 2) {\n            hDate = tempDay;\n            hmonth = im;\n            hYear = iy;\n        }\n        return { year: hYear, month: hmonth, date: hDate };\n    }\n    HijriParser.getHijriDate = getHijriDate;\n    /**\n     *\n     * @param {number} year ?\n     * @param {number} month ?\n     * @param {number} day ?\n     * @returns {Date} ?\n     */\n    function toGregorian(year, month, day) {\n        const iy = year;\n        const im = month;\n        const id = day;\n        const ii = iy - 1;\n        const iln = (ii * 12) + 1 + (im - 1);\n        const i = iln - 16260;\n        const mcjdn = id + dateCorrection[i - 1] - 1;\n        const julianDate = mcjdn + 2400000;\n        const z = Math.floor(julianDate + 0.5);\n        let a = Math.floor((z - 1867216.25) / 36524.25);\n        a = z + 1 + a - Math.floor(a / 4);\n        const b = a + 1524;\n        const c = Math.floor((b - 122.1) / 365.25);\n        const d = Math.floor(365.25 * c);\n        const e = Math.floor((b - d) / 30.6001);\n        const gDay = b - d - Math.floor(e * 30.6001);\n        let gMonth = e - (e > 13.5 ? 13 : 1);\n        const gYear = c - (gMonth > 2.5 ? 4716 : 4715);\n        /* istanbul ignore next */\n        if (gYear <= 0) {\n            gMonth--;\n        } // No year zero\n        return new Date(gYear + '/' + (gMonth) + '/' + gDay);\n    }\n    HijriParser.toGregorian = toGregorian;\n})(HijriParser || (HijriParser = {}));\n\nconst abbreviateRegexGlobal = /\\/MMMMM|MMMM|MMM|a|LLLL|LLL|EEEEE|EEEE|E|K|cccc|ccc|WW|W|G+|z+/gi;\nconst standalone = 'stand-alone';\nconst weekdayKey = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\n\nconst timeSetter = {\n    m: 'getMinutes',\n    h: 'getHours',\n    H: 'getHours',\n    s: 'getSeconds',\n    d: 'getDate',\n    f: 'getMilliseconds'\n};\nconst datePartMatcher = {\n    'M': 'month',\n    'd': 'day',\n    'E': 'weekday',\n    'c': 'weekday',\n    'y': 'year',\n    'm': 'minute',\n    'h': 'hour',\n    'H': 'hour',\n    's': 'second',\n    'L': 'month',\n    'a': 'designator',\n    'z': 'timeZone',\n    'Z': 'timeZone',\n    'G': 'era',\n    'f': 'milliseconds'\n};\nconst timeSeparator = 'timeSeparator';\n/* tslint:disable no-any */\n/**\n * Date Format is a framework provides support for date formatting.\n *\n * @private\n */\nclass DateFormat {\n    /**\n     * Returns the formatter function for given skeleton.\n     *\n     * @param {string} culture -  Specifies the culture name to be which formatting.\n     * @param {DateFormatOptions} option - Specific the format in which date  will format.\n     * @param {Object} cldr - Specifies the global cldr data collection.\n     * @returns {Function} ?\n     */\n    static dateFormat(culture, option, cldr) {\n        const dependable = IntlBase.getDependables(cldr, culture, option.calendar);\n        const numObject = getValue('parserObject.numbers', dependable);\n        const dateObject = dependable.dateObject;\n        const formatOptions = { isIslamic: IntlBase.islamicRegex.test(option.calendar) };\n        if (isBlazor() && option.isServerRendered) {\n            option = IntlBase.compareBlazorDateFormats(option, culture);\n        }\n        let resPattern = option.format ||\n            IntlBase.getResultantPattern(option.skeleton, dependable.dateObject, option.type, false, isBlazor() ? culture : '');\n        formatOptions.dateSeperator = isBlazor() ? getValue('dateSeperator', dateObject) : IntlBase.getDateSeparator(dependable.dateObject);\n        if (isUndefined(resPattern)) {\n            throwError('Format options or type given must be invalid');\n        }\n        else {\n            resPattern = IntlBase.ConvertDateToWeekFormat(resPattern);\n            if (isBlazor()) {\n                resPattern = resPattern.replace(/tt/, 'a');\n            }\n            formatOptions.pattern = resPattern;\n            formatOptions.numMapper = isBlazor() ?\n                extend({}, numObject) : ParserBase.getNumberMapper(dependable.parserObject, ParserBase.getNumberingSystem(cldr));\n            const patternMatch = resPattern.match(abbreviateRegexGlobal) || [];\n            for (const str of patternMatch) {\n                const len = str.length;\n                let char = str[0];\n                if (char === 'K') {\n                    char = 'h';\n                }\n                switch (char) {\n                    case 'E':\n                    case 'c':\n                        if (isBlazor()) {\n                            // eslint-disable-next-line\n                            formatOptions.weekday = getValue('days.' + IntlBase.monthIndex[len], dateObject);\n                        }\n                        else {\n                            // eslint-disable-next-line\n                            formatOptions.weekday = dependable.dateObject[IntlBase.days][standalone][IntlBase.monthIndex[len]];\n                        }\n                        break;\n                    case 'M':\n                    case 'L':\n                        if (isBlazor()) {\n                            // eslint-disable-next-line\n                            formatOptions.month = getValue('months.' + IntlBase.monthIndex[len], dateObject);\n                        }\n                        else {\n                            // eslint-disable-next-line\n                            formatOptions.month = dependable.dateObject[IntlBase.month][standalone][IntlBase.monthIndex[len]];\n                        }\n                        break;\n                    case 'a':\n                        formatOptions.designator = isBlazor() ?\n                            getValue('dayPeriods', dateObject) : getValue('dayPeriods.format.wide', dateObject);\n                        break;\n                    case 'G':\n                        // eslint-disable-next-line\n                        const eText = (len <= 3) ? 'eraAbbr' : (len === 4) ? 'eraNames' : 'eraNarrow';\n                        formatOptions.era = isBlazor() ? getValue('eras', dateObject) : getValue('eras.' + eText, dependable.dateObject);\n                        break;\n                    case 'z':\n                        formatOptions.timeZone = getValue('dates.timeZoneNames', dependable.parserObject);\n                        break;\n                }\n            }\n        }\n        return (value) => {\n            if (isNaN(value.getDate())) {\n                return null;\n            }\n            return this.intDateFormatter(value, formatOptions);\n        };\n    }\n    /**\n     * Returns formatted date string based on options passed.\n     *\n     * @param {Date} value ?\n     * @param {FormatOptions} options ?\n     * @returns {string} ?\n     */\n    static intDateFormatter(value, options) {\n        const pattern = options.pattern;\n        let ret = '';\n        const matches = pattern.match(IntlBase.dateParseRegex);\n        const dObject = this.getCurrentDateValue(value, options.isIslamic);\n        for (const match of matches) {\n            const length = match.length;\n            let char = match[0];\n            if (char === 'K') {\n                char = 'h';\n            }\n            let curval;\n            let curvalstr = '';\n            let isNumber;\n            let processNumber;\n            let curstr = '';\n            switch (char) {\n                case 'M':\n                case 'L':\n                    curval = dObject.month;\n                    if (length > 2) {\n                        // eslint-disable-next-line\n                        ret += options.month[curval];\n                    }\n                    else {\n                        isNumber = true;\n                    }\n                    break;\n                case 'E':\n                case 'c':\n                    // eslint-disable-next-line\n                    ret += options.weekday[weekdayKey[value.getDay()]];\n                    break;\n                case 'H':\n                case 'h':\n                case 'm':\n                case 's':\n                case 'd':\n                case 'f':\n                    isNumber = true;\n                    if (char === 'd') {\n                        curval = dObject.date;\n                    }\n                    else if (char === 'f') {\n                        isNumber = false;\n                        processNumber = true;\n                        // eslint-disable-next-line\n                        curvalstr = value[timeSetter[char]]().toString();\n                        curvalstr = curvalstr.substring(0, length);\n                        const curlength = curvalstr.length;\n                        if (length !== curlength) {\n                            if (length > 3) {\n                                continue;\n                            }\n                            for (let i = 0; i < length - curlength; i++) {\n                                curvalstr = '0' + curvalstr.toString();\n                            }\n                        }\n                        curstr += curvalstr;\n                    }\n                    else {\n                        // eslint-disable-next-line\n                        curval = value[timeSetter[char]]();\n                    }\n                    if (char === 'h') {\n                        curval = curval % 12 || 12;\n                    }\n                    break;\n                case 'y':\n                    processNumber = true;\n                    curstr += dObject.year;\n                    if (length === 2) {\n                        curstr = curstr.substr(curstr.length - 2);\n                    }\n                    break;\n                case 'a':\n                    // eslint-disable-next-line\n                    let desig = value.getHours() < 12 ? 'am' : 'pm';\n                    // eslint-disable-next-line\n                    ret += options.designator[desig];\n                    break;\n                case 'G':\n                    // eslint-disable-next-line\n                    let dec = value.getFullYear() < 0 ? 0 : 1;\n                    // eslint-disable-next-line\n                    let retu = options.era[dec];\n                    if (isNullOrUndefined(retu)) {\n                        // eslint-disable-next-line\n                        retu = options.era[dec ? 0 : 1];\n                    }\n                    ret += retu || '';\n                    break;\n                case '\\'':\n                    ret += (match === '\\'\\'') ? '\\'' : match.replace(/'/g, '');\n                    break;\n                case 'z':\n                    // eslint-disable-next-line\n                    let timezone = value.getTimezoneOffset();\n                    // eslint-disable-next-line\n                    let pattern = (length < 4) ? '+H;-H' : options.timeZone.hourFormat;\n                    pattern = pattern.replace(/:/g, options.numMapper.timeSeparator);\n                    if (timezone === 0) {\n                        ret += options.timeZone.gmtZeroFormat;\n                    }\n                    else {\n                        processNumber = true;\n                        curstr = this.getTimeZoneValue(timezone, pattern);\n                    }\n                    curstr = options.timeZone.gmtFormat.replace(/\\{0\\}/, curstr);\n                    break;\n                case ':':\n                    // eslint-disable-next-line\n                    ret += options.numMapper.numberSymbols[timeSeparator];\n                    break;\n                case '/':\n                    ret += options.dateSeperator;\n                    break;\n                case 'W':\n                    isNumber = true;\n                    curval = IntlBase.getWeekOfYear(value);\n                    break;\n                default:\n                    ret += match;\n            }\n            if (isNumber) {\n                processNumber = true;\n                curstr = this.checkTwodigitNumber(curval, length);\n            }\n            if (processNumber) {\n                ret += ParserBase.convertValueParts(curstr, IntlBase.latnParseRegex, options.numMapper.mapper);\n            }\n        }\n        return ret;\n    }\n    static getCurrentDateValue(value, isIslamic) {\n        if (isIslamic) {\n            return HijriParser.getHijriDate(value);\n        }\n        return { year: value.getFullYear(), month: value.getMonth() + 1, date: value.getDate() };\n    }\n    /**\n     * Returns two digit numbers for given value and length\n     *\n     * @param {number} val ?\n     * @param {number} len ?\n     * @returns {string} ?\n     */\n    static checkTwodigitNumber(val, len) {\n        const ret = val + '';\n        if (len === 2 && ret.length !== 2) {\n            return '0' + ret;\n        }\n        return ret;\n    }\n    /**\n     * Returns the value of the Time Zone.\n     *\n     * @param {number} tVal ?\n     * @param {string} pattern ?\n     * @returns {string} ?\n     * @private\n     */\n    static getTimeZoneValue(tVal, pattern) {\n        const splt = pattern.split(';');\n        let curPattern = splt[tVal > 0 ? 1 : 0];\n        const no = Math.abs(tVal);\n        return curPattern = curPattern.replace(/HH?|mm/g, (str) => {\n            const len = str.length;\n            const ishour = str.indexOf('H') !== -1;\n            return this.checkTwodigitNumber(Math.floor(ishour ? (no / 60) : (no % 60)), len);\n        });\n    }\n}\n\nconst errorText = {\n    'ms': 'minimumSignificantDigits',\n    'ls': 'maximumSignificantDigits',\n    'mf': 'minimumFractionDigits',\n    'lf': 'maximumFractionDigits',\n};\nconst percentSign = 'percentSign';\nconst minusSign = 'minusSign';\nconst mapper$1 = ['infinity', 'nan', 'group', 'decimal', 'exponential'];\n/**\n * Module for number formatting.\n *\n * @private\n */\nclass NumberFormat {\n    /**\n     * Returns the formatter function for given skeleton.\n     *\n     * @param {string} culture -  Specifies the culture name to be which formatting.\n     * @param {NumberFormatOptions} option - Specific the format in which number  will format.\n     * @param {Object} cldr - Specifies the global cldr data collection.\n     * @returns {Function} ?\n     */\n    static numberFormatter(culture, option, cldr) {\n        const fOptions = extend({}, option);\n        let cOptions = {};\n        const dOptions = {};\n        let symbolPattern;\n        const dependable = IntlBase.getDependables(cldr, culture, '', true);\n        const numObject = dependable.numericObject;\n        dOptions.numberMapper = isBlazor() ? extend({}, numObject) :\n            ParserBase.getNumberMapper(dependable.parserObject, ParserBase.getNumberingSystem(cldr), true);\n        dOptions.currencySymbol = isBlazor() ? getValue('currencySymbol', numObject) : IntlBase.getCurrencySymbol(dependable.numericObject, fOptions.currency || defaultCurrencyCode, option.altSymbol);\n        /* eslint-disable  @typescript-eslint/no-explicit-any */\n        dOptions.percentSymbol = isBlazor() ? getValue('numberSymbols.percentSign', numObject) :\n            dOptions.numberMapper.numberSymbols[percentSign];\n        dOptions.minusSymbol = isBlazor() ? getValue('numberSymbols.minusSign', numObject) :\n            dOptions.numberMapper.numberSymbols[minusSign];\n        const symbols = dOptions.numberMapper.numberSymbols;\n        if ((option.format) && !(IntlBase.formatRegex.test(option.format))) {\n            cOptions = IntlBase.customFormat(option.format, dOptions, dependable.numericObject);\n        }\n        else {\n            extend(fOptions, IntlBase.getProperNumericSkeleton(option.format || 'N'));\n            fOptions.isCurrency = fOptions.type === 'currency';\n            fOptions.isPercent = fOptions.type === 'percent';\n            if (!isBlazor()) {\n                symbolPattern = IntlBase.getSymbolPattern(fOptions.type, dOptions.numberMapper.numberSystem, dependable.numericObject, fOptions.isAccount);\n            }\n            fOptions.groupOne = this.checkValueRange(fOptions.maximumSignificantDigits, fOptions.minimumSignificantDigits, true);\n            this.checkValueRange(fOptions.maximumFractionDigits, fOptions.minimumFractionDigits, false, true);\n            if (!isUndefined(fOptions.fractionDigits)) {\n                fOptions.minimumFractionDigits = fOptions.maximumFractionDigits = fOptions.fractionDigits;\n            }\n            if (isUndefined(fOptions.useGrouping)) {\n                fOptions.useGrouping = true;\n            }\n            if (fOptions.isCurrency && !isBlazor()) {\n                symbolPattern = symbolPattern.replace(/\\u00A4/g, IntlBase.defaultCurrency);\n            }\n            if (!isBlazor()) {\n                const split = symbolPattern.split(';');\n                cOptions.nData = IntlBase.getFormatData(split[1] || '-' + split[0], true, dOptions.currencySymbol);\n                cOptions.pData = IntlBase.getFormatData(split[0], false, dOptions.currencySymbol);\n                if (fOptions.useGrouping) {\n                    fOptions.groupSeparator = symbols[mapper$1[2]];\n                    fOptions.groupData = this.getGroupingDetails(split[0]);\n                }\n            }\n            else {\n                cOptions.nData = extend({}, {}, getValue(fOptions.type + 'nData', numObject));\n                cOptions.pData = extend({}, {}, getValue(fOptions.type + 'pData', numObject));\n                if (fOptions.type === 'currency' && option.currency) {\n                    IntlBase.replaceBlazorCurrency([cOptions.pData, cOptions.nData], dOptions.currencySymbol, option.currency);\n                }\n            }\n            const minFrac = isUndefined(fOptions.minimumFractionDigits);\n            if (minFrac) {\n                fOptions.minimumFractionDigits = cOptions.nData.minimumFraction;\n            }\n            if (isUndefined(fOptions.maximumFractionDigits)) {\n                const mval = cOptions.nData.maximumFraction;\n                fOptions.maximumFractionDigits = isUndefined(mval) && fOptions.isPercent ? 0 : mval;\n            }\n            const mfrac = fOptions.minimumFractionDigits;\n            const lfrac = fOptions.maximumFractionDigits;\n            if (!isUndefined(mfrac) && !isUndefined(lfrac)) {\n                if (mfrac > lfrac) {\n                    fOptions.maximumFractionDigits = mfrac;\n                }\n            }\n        }\n        extend(cOptions.nData, fOptions);\n        extend(cOptions.pData, fOptions);\n        return (value) => {\n            if (isNaN(value)) {\n                return symbols[mapper$1[1]];\n            }\n            else if (!isFinite(value)) {\n                return symbols[mapper$1[0]];\n            }\n            return this.intNumberFormatter(value, cOptions, dOptions);\n        };\n    }\n    /**\n     * Returns grouping details for the pattern provided\n     *\n     * @param {string} pattern ?\n     * @returns {GroupDetails} ?\n     */\n    static getGroupingDetails(pattern) {\n        const ret = {};\n        const match = pattern.match(IntlBase.negativeDataRegex);\n        if (match && match[4]) {\n            const pattern = match[4];\n            const p = pattern.lastIndexOf(',');\n            if (p !== -1) {\n                const temp = pattern.split('.')[0];\n                ret.primary = (temp.length - p) - 1;\n                const s = pattern.lastIndexOf(',', p - 1);\n                if (s !== -1) {\n                    ret.secondary = p - 1 - s;\n                }\n            }\n        }\n        return ret;\n    }\n    /**\n     * Returns if the provided integer range is valid.\n     *\n     * @param {number} val1 ?\n     * @param {number} val2 ?\n     * @param {boolean} checkbothExist ?\n     * @param {boolean} isFraction ?\n     * @returns {boolean} ?\n     */\n    static checkValueRange(val1, val2, checkbothExist, isFraction) {\n        const decide = isFraction ? 'f' : 's';\n        let dint = 0;\n        const str1 = errorText['l' + decide];\n        // eslint-disable-next-line\n        let str2 = errorText['m' + decide];\n        if (!isUndefined(val1)) {\n            this.checkRange(val1, str1, isFraction);\n            dint++;\n        }\n        if (!isUndefined(val2)) {\n            this.checkRange(val2, str2, isFraction);\n            dint++;\n        }\n        if (dint === 2) {\n            if (val1 < val2) {\n                throwError(str2 + 'specified must be less than the' + str1);\n            }\n            else {\n                return true;\n            }\n        }\n        else if (checkbothExist && dint === 1) {\n            throwError('Both' + str2 + 'and' + str2 + 'must be present');\n        }\n        return false;\n    }\n    /**\n     * Check if the provided fraction range is valid\n     *\n     * @param {number} val ?\n     * @param {string} text ?\n     * @param {boolean} isFraction ?\n     * @returns {void} ?\n     */\n    static checkRange(val, text, isFraction) {\n        const range = isFraction ? [0, 20] : [1, 21];\n        if (val < range[0] || val > range[1]) {\n            throwError(text + 'value must be within the range' + range[0] + 'to' + range[1]);\n        }\n    }\n    /**\n     * Returns formatted numeric string for provided formatting options\n     *\n     * @param {number} value ?\n     * @param {base.GenericFormatOptions} fOptions ?\n     * @param {CommonOptions} dOptions ?\n     * @returns {string} ?\n     */\n    static intNumberFormatter(value, fOptions, dOptions) {\n        let curData;\n        if (isUndefined(fOptions.nData.type)) {\n            return undefined;\n        }\n        else {\n            if (value < 0) {\n                value = value * -1;\n                curData = fOptions.nData;\n            }\n            else if (value === 0) {\n                curData = fOptions.zeroData || fOptions.pData;\n            }\n            else {\n                curData = fOptions.pData;\n            }\n            let fValue = '';\n            if (curData.isPercent) {\n                value = value * 100;\n            }\n            if (curData.groupOne) {\n                fValue = this.processSignificantDigits(value, curData.minimumSignificantDigits, curData.maximumSignificantDigits);\n            }\n            else {\n                fValue = this.processFraction(value, curData.minimumFractionDigits, curData.maximumFractionDigits);\n                if (curData.minimumIntegerDigits) {\n                    fValue = this.processMinimumIntegers(fValue, curData.minimumIntegerDigits);\n                }\n            }\n            if (curData.type === 'scientific') {\n                fValue = value.toExponential(curData.maximumFractionDigits);\n                fValue = fValue.replace('e', dOptions.numberMapper.numberSymbols[mapper$1[4]]);\n            }\n            fValue = fValue.replace('.', dOptions.numberMapper.numberSymbols[mapper$1[3]]);\n            if (curData.useGrouping) {\n                /* eslint-disable  @typescript-eslint/no-explicit-any */\n                fValue = this.groupNumbers(fValue, curData.groupData.primary, curData.groupSeparator || ',', dOptions.numberMapper.numberSymbols[mapper$1[3]] || '.', curData.groupData.secondary);\n            }\n            fValue = ParserBase.convertValueParts(fValue, IntlBase.latnParseRegex, dOptions.numberMapper.mapper);\n            if (curData.nlead === 'N/A') {\n                return curData.nlead;\n            }\n            else {\n                return curData.nlead + fValue + curData.nend;\n            }\n        }\n    }\n    /**\n     * Returns significant digits processed numeric string\n     *\n     * @param {number} value ?\n     * @param {number} min ?\n     * @param {number} max ?\n     * @returns {string} ?\n     */\n    static processSignificantDigits(value, min, max) {\n        let temp = value + '';\n        let tn;\n        const length = temp.length;\n        if (length < min) {\n            return value.toPrecision(min);\n        }\n        else {\n            temp = value.toPrecision(max);\n            tn = +temp;\n            return tn + '';\n        }\n    }\n    /**\n     * Returns grouped numeric string\n     *\n     * @param {string} val ?\n     * @param {number} level1 ?\n     * @param {string} sep ?\n     * @param {string} decimalSymbol ?\n     * @param {number} level2 ?\n     * @returns {string} ?\n     */\n    static groupNumbers(val, level1, sep, decimalSymbol, level2) {\n        let flag = !isNullOrUndefined(level2) && level2 !== 0;\n        const split = val.split(decimalSymbol);\n        const prefix = split[0];\n        let length = prefix.length;\n        let str = '';\n        while (length > level1) {\n            str = prefix.slice(length - level1, length) + (str.length ?\n                (sep + str) : '');\n            length -= level1;\n            if (flag) {\n                level1 = level2;\n                flag = false;\n            }\n        }\n        split[0] = prefix.slice(0, length) + (str.length ? sep : '') + str;\n        return split.join(decimalSymbol);\n    }\n    /**\n     * Returns fraction processed numeric string\n     *\n     * @param {number} value ?\n     * @param {number} min ?\n     * @param {number} max ?\n     * @returns {string} ?\n     */\n    static processFraction(value, min, max) {\n        const temp = (value + '').split('.')[1];\n        const length = temp ? temp.length : 0;\n        if (min && length < min) {\n            let ret = '';\n            if (length === 0) {\n                ret = value.toFixed(min);\n            }\n            else {\n                ret += value;\n                for (let j = 0; j < min - length; j++) {\n                    ret += '0';\n                }\n                return ret;\n            }\n            return value.toFixed(min);\n        }\n        else if (!isNullOrUndefined(max) && (length > max || max === 0)) {\n            return value.toFixed(max);\n        }\n        return value + '';\n    }\n    /**\n     * Returns integer processed numeric string\n     *\n     * @param {string} value ?\n     * @param {number} min ?\n     * @returns {string} ?\n     */\n    static processMinimumIntegers(value, min) {\n        const temp = value.split('.');\n        let lead = temp[0];\n        const len = lead.length;\n        if (len < min) {\n            for (let i = 0; i < min - len; i++) {\n                lead = '0' + lead;\n            }\n            temp[0] = lead;\n        }\n        return temp.join('.');\n    }\n}\n\nconst standalone$1 = 'stand-alone';\nconst latnRegex = /^[0-9]*$/;\nconst timeSetter$1 = {\n    minute: 'setMinutes',\n    hour: 'setHours',\n    second: 'setSeconds',\n    day: 'setDate',\n    month: 'setMonth',\n    milliseconds: 'setMilliseconds'\n};\nconst month = 'months';\n/* tslint:disable no-any */\n/**\n * Date Parser.\n *\n * @private\n */\nclass DateParser {\n    /**\n     * Returns the parser function for given skeleton.\n     *\n     * @param {string} culture -  Specifies the culture name to be which formatting.\n     * @param {DateFormatOptions} option - Specific the format in which string date  will be parsed.\n     * @param {Object} cldr - Specifies the global cldr data collection.\n     * @returns {Function} ?\n     */\n    static dateParser(culture, option, cldr) {\n        const dependable = IntlBase.getDependables(cldr, culture, option.calendar);\n        const numOptions = ParserBase.getCurrentNumericOptions(dependable.parserObject, ParserBase.getNumberingSystem(cldr), false, isBlazor());\n        let parseOptions = {};\n        if (isBlazor() && option.isServerRendered) {\n            option = IntlBase.compareBlazorDateFormats(option, culture);\n        }\n        let resPattern = option.format ||\n            IntlBase.getResultantPattern(option.skeleton, dependable.dateObject, option.type, false, isBlazor() ? culture : '');\n        let regexString = '';\n        let hourOnly;\n        if (isUndefined(resPattern)) {\n            throwError('Format options or type given must be invalid');\n        }\n        else {\n            resPattern = IntlBase.ConvertDateToWeekFormat(resPattern);\n            parseOptions = { isIslamic: IntlBase.islamicRegex.test(option.calendar), pattern: resPattern, evalposition: {}, culture: culture };\n            const patternMatch = resPattern.match(IntlBase.dateParseRegex) || [];\n            const length = patternMatch.length;\n            let gmtCorrection = 0;\n            let zCorrectTemp = 0;\n            let isgmtTraversed = false;\n            const nRegx = numOptions.numericRegex;\n            // eslint-disable-next-line\n            let numMapper = isBlazor() ? dependable.parserObject.numbers :\n                ParserBase.getNumberMapper(dependable.parserObject, ParserBase.getNumberingSystem(cldr));\n            for (let i = 0; i < length; i++) {\n                const str = patternMatch[i];\n                const len = str.length;\n                const char = (str[0] === 'K') ? 'h' : str[0];\n                let isNumber;\n                let canUpdate;\n                // eslint-disable-next-line\n                let charKey = datePartMatcher[char];\n                const optional = (len === 2) ? '' : '?';\n                if (isgmtTraversed) {\n                    gmtCorrection = zCorrectTemp;\n                    isgmtTraversed = false;\n                }\n                switch (char) {\n                    case 'E':\n                    case 'c':\n                        // eslint-disable-next-line\n                        let weekData;\n                        if (isBlazor()) {\n                            // eslint-disable-next-line\n                            weekData = getValue('days.' + IntlBase.monthIndex[len], dependable.dateObject);\n                        }\n                        else {\n                            // eslint-disable-next-line\n                            weekData = dependable.dateObject[IntlBase.days][standalone$1][IntlBase.monthIndex[len]];\n                        }\n                        // eslint-disable-next-line\n                        let weekObject = ParserBase.reverseObject(weekData);\n                        // tslint:enable\n                        regexString += '(' + Object.keys(weekObject).join('|') + ')';\n                        break;\n                    case 'M':\n                    case 'L':\n                    case 'd':\n                    case 'm':\n                    case 's':\n                    case 'h':\n                    case 'H':\n                    case 'f':\n                        canUpdate = true;\n                        if ((char === 'M' || char === 'L') && len > 2) {\n                            let monthData;\n                            if (isBlazor()) {\n                                // eslint-disable-next-line\n                                monthData = getValue('months.' + IntlBase.monthIndex[len], dependable.dateObject);\n                            }\n                            else {\n                                // eslint-disable-next-line\n                                monthData = dependable.dateObject[month][standalone$1][IntlBase.monthIndex[len]];\n                            }\n                            // eslint-disable-next-line\n                            parseOptions[charKey] = ParserBase.reverseObject(monthData);\n                            // eslint-disable-next-line\n                            regexString += '(' + Object.keys(parseOptions[charKey]).join('|') + ')';\n                        }\n                        else if (char === 'f') {\n                            if (len > 3) {\n                                continue;\n                            }\n                            isNumber = true;\n                            regexString += '(' + nRegx + nRegx + '?' + nRegx + '?' + ')';\n                        }\n                        else {\n                            isNumber = true;\n                            regexString += '(' + nRegx + nRegx + optional + ')';\n                        }\n                        if (char === 'h') {\n                            parseOptions.hour12 = true;\n                        }\n                        break;\n                    case 'W':\n                        // eslint-disable-next-line\n                        let opt = len === 1 ? '?' : '';\n                        regexString += '(' + nRegx + opt + nRegx + ')';\n                        break;\n                    case 'y':\n                        canUpdate = isNumber = true;\n                        if (len === 2) {\n                            regexString += '(' + nRegx + nRegx + ')';\n                        }\n                        else {\n                            regexString += '(' + nRegx + '{' + len + ',})';\n                        }\n                        break;\n                    case 'a':\n                        canUpdate = true;\n                        // eslint-disable-next-line\n                        let periodValur = isBlazor() ?\n                            getValue('dayPeriods', dependable.dateObject) :\n                            getValue('dayPeriods.format.wide', dependable.dateObject);\n                        // eslint-disable-next-line\n                        parseOptions[charKey] = ParserBase.reverseObject(periodValur);\n                        // eslint-disable-next-line\n                        regexString += '(' + Object.keys(parseOptions[charKey]).join('|') + ')';\n                        break;\n                    case 'G':\n                        canUpdate = true;\n                        // eslint-disable-next-line\n                        let eText = (len <= 3) ? 'eraAbbr' : (len === 4) ? 'eraNames' : 'eraNarrow';\n                        // eslint-disable-next-line\n                        parseOptions[charKey] = ParserBase.reverseObject(isBlazor() ?\n                            getValue('eras', dependable.dateObject) : getValue('eras.' + eText, dependable.dateObject));\n                        // eslint-disable-next-line\n                        regexString += '(' + Object.keys(parseOptions[charKey]).join('|') + '?)';\n                        break;\n                    case 'z':\n                        // eslint-disable-next-line\n                        let tval = new Date().getTimezoneOffset();\n                        canUpdate = (tval !== 0);\n                        // eslint-disable-next-line\n                        parseOptions[charKey] = getValue('dates.timeZoneNames', dependable.parserObject);\n                        // eslint-disable-next-line\n                        let tzone = parseOptions[charKey];\n                        hourOnly = (len < 4);\n                        // eslint-disable-next-line\n                        let hpattern = hourOnly ? '+H;-H' : tzone.hourFormat;\n                        hpattern = hpattern.replace(/:/g, numMapper.timeSeparator);\n                        regexString += '(' + this.parseTimeZoneRegx(hpattern, tzone, nRegx) + ')?';\n                        isgmtTraversed = true;\n                        zCorrectTemp = hourOnly ? 6 : 12;\n                        break;\n                    case '\\'':\n                        // eslint-disable-next-line\n                        let iString = str.replace(/'/g, '');\n                        regexString += '(' + iString + ')?';\n                        break;\n                    default:\n                        regexString += '([\\\\D])';\n                        break;\n                }\n                if (canUpdate) {\n                    parseOptions.evalposition[charKey] = { isNumber: isNumber, pos: i + 1 + gmtCorrection, hourOnly: hourOnly };\n                }\n                if (i === length - 1 && !isNullOrUndefined(regexString)) {\n                    parseOptions.parserRegex = new RegExp('^' + regexString + '$', 'i');\n                }\n            }\n        }\n        return (value) => {\n            const parsedDateParts = this.internalDateParse(value, parseOptions, numOptions);\n            if (isNullOrUndefined(parsedDateParts) || !Object.keys(parsedDateParts).length) {\n                return null;\n            }\n            if (parseOptions.isIslamic) {\n                let dobj = {};\n                let tYear = parsedDateParts.year;\n                const tDate = parsedDateParts.day;\n                const tMonth = parsedDateParts.month;\n                const ystrig = tYear ? (tYear + '') : '';\n                const is2DigitYear = (ystrig.length === 2);\n                if (!tYear || !tMonth || !tDate || is2DigitYear) {\n                    dobj = HijriParser.getHijriDate(new Date());\n                }\n                if (is2DigitYear) {\n                    tYear = parseInt((dobj.year + '').slice(0, 2) + ystrig, 10);\n                }\n                // tslint:disable-next-line\n                const dateObject = HijriParser.toGregorian(tYear || dobj.year, tMonth || dobj.month, tDate || dobj.date);\n                parsedDateParts.year = dateObject.getFullYear();\n                parsedDateParts.month = dateObject.getMonth() + 1;\n                parsedDateParts.day = dateObject.getDate();\n            }\n            return this.getDateObject(parsedDateParts);\n        };\n    }\n    /* tslint:disable */\n    /**\n     * Returns date object for provided date options\n     *\n     * @param {DateParts} options ?\n     * @param {Date} value ?\n     * @returns {Date} ?\n     */\n    static getDateObject(options, value) {\n        const res = value || new Date();\n        res.setMilliseconds(0);\n        const tKeys = ['hour', 'minute', 'second', 'milliseconds', 'month', 'day'];\n        let y = options.year;\n        const desig = options.designator;\n        const tzone = options.timeZone;\n        if (!isUndefined(y)) {\n            const len = (y + '').length;\n            if (len <= 2) {\n                const century = Math.floor(res.getFullYear() / 100) * 100;\n                y += century;\n            }\n            res.setFullYear(y);\n        }\n        for (const key of tKeys) {\n            // eslint-disable-next-line\n            let tValue = options[key];\n            if (isUndefined(tValue) && key === 'day') {\n                res.setDate(1);\n            }\n            if (!isUndefined(tValue)) {\n                if (key === 'month') {\n                    tValue -= 1;\n                    if (tValue < 0 || tValue > 11) {\n                        return new Date('invalid');\n                    }\n                    const pDate = res.getDate();\n                    res.setDate(1);\n                    // eslint-disable-next-line\n                    res[timeSetter$1[key]](tValue);\n                    const lDate = new Date(res.getFullYear(), tValue + 1, 0).getDate();\n                    res.setDate(pDate < lDate ? pDate : lDate);\n                }\n                else {\n                    if (key === 'day') {\n                        const lastDay = new Date(res.getFullYear(), res.getMonth() + 1, 0).getDate();\n                        if ((tValue < 1 || tValue > lastDay)) {\n                            return null;\n                        }\n                    }\n                    // eslint-disable-next-line\n                    res[timeSetter$1[key]](tValue);\n                }\n            }\n        }\n        if (!isUndefined(desig)) {\n            const hour = res.getHours();\n            if (desig === 'pm') {\n                res.setHours(hour + (hour === 12 ? 0 : 12));\n            }\n            else if (hour === 12) {\n                res.setHours(0);\n            }\n        }\n        if (!isUndefined(tzone)) {\n            const tzValue = tzone - res.getTimezoneOffset();\n            if (tzValue !== 0) {\n                res.setMinutes(res.getMinutes() + tzValue);\n            }\n        }\n        return res;\n    }\n    /**\n     * Returns date parsing options for provided value along with parse and numeric options\n     *\n     * @param {string} value ?\n     * @param {ParseOptions} parseOptions ?\n     * @param {NumericOptions} num ?\n     * @returns {DateParts} ?\n     */\n    static internalDateParse(value, parseOptions, num) {\n        const matches = value.match(parseOptions.parserRegex);\n        const retOptions = { 'hour': 0, 'minute': 0, 'second': 0 };\n        if (isNullOrUndefined(matches)) {\n            return null;\n        }\n        else {\n            const props = Object.keys(parseOptions.evalposition);\n            for (const prop of props) {\n                const curObject = parseOptions.evalposition[prop];\n                let matchString = matches[curObject.pos];\n                if (curObject.isNumber) {\n                    // eslint-disable-next-line\n                    retOptions[prop] = this.internalNumberParser(matchString, num);\n                }\n                else {\n                    if (prop === 'timeZone' && !isUndefined(matchString)) {\n                        const pos = curObject.pos;\n                        let val;\n                        const tmatch = matches[pos + 1];\n                        const flag = !isUndefined(tmatch);\n                        if (curObject.hourOnly) {\n                            val = this.getZoneValue(flag, tmatch, matches[pos + 4], num) * 60;\n                        }\n                        else {\n                            val = this.getZoneValue(flag, tmatch, matches[pos + 7], num) * 60;\n                            val += this.getZoneValue(flag, matches[pos + 4], matches[pos + 10], num);\n                        }\n                        if (!isNullOrUndefined(val)) {\n                            retOptions[prop] = val;\n                        }\n                    }\n                    else {\n                        // eslint-disable-next-line\n                        matchString = ((prop === 'month') && (!parseOptions.isIslamic) && (parseOptions.culture === 'en' || parseOptions.culture === 'en-GB' || parseOptions.culture === 'en-US'))\n                            ? matchString[0].toUpperCase() + matchString.substring(1).toLowerCase() : matchString;\n                        // eslint-disable-next-line\n                        retOptions[prop] = parseOptions[prop][matchString];\n                    }\n                }\n            }\n            if (parseOptions.hour12) {\n                retOptions.hour12 = true;\n            }\n        }\n        return retOptions;\n    }\n    /**\n     * Returns parsed number for provided Numeric string and Numeric Options\n     *\n     * @param {string} value ?\n     * @param {NumericOptions} option ?\n     * @returns {number} ?\n     */\n    static internalNumberParser(value, option) {\n        value = ParserBase.convertValueParts(value, option.numberParseRegex, option.numericPair);\n        if (latnRegex.test(value)) {\n            return +value;\n        }\n        return null;\n    }\n    /**\n     * Returns parsed time zone RegExp for provided hour format and time zone\n     *\n     * @param {string} hourFormat ?\n     * @param {base.TimeZoneOptions} tZone ?\n     * @param {string} nRegex ?\n     * @returns {string} ?\n     */\n    static parseTimeZoneRegx(hourFormat, tZone, nRegex) {\n        const pattern = tZone.gmtFormat;\n        let ret;\n        const cRegex = '(' + nRegex + ')' + '(' + nRegex + ')';\n        let splitStr;\n        ret = hourFormat.replace('+', '\\\\+');\n        if (hourFormat.indexOf('HH') !== -1) {\n            ret = ret.replace(/HH|mm/g, '(' + cRegex + ')');\n        }\n        else {\n            ret = ret.replace(/H|m/g, '(' + cRegex + '?)');\n        }\n        // eslint-disable-next-line\n        splitStr = (ret.split(';').map((str) => {\n            return pattern.replace('{0}', str);\n        }));\n        ret = splitStr.join('|') + '|' + tZone.gmtZeroFormat;\n        return ret;\n    }\n    /**\n     * Returns zone based value.\n     *\n     * @param {boolean} flag ?\n     * @param {string} val1 ?\n     * @param {string} val2 ?\n     * @param {NumericOptions} num ?\n     * @returns {number} ?\n     */\n    static getZoneValue(flag, val1, val2, num) {\n        const ival = flag ? val1 : val2;\n        if (!ival) {\n            return 0;\n        }\n        const value = this.internalNumberParser(ival, num);\n        if (flag) {\n            return -value;\n        }\n        return value;\n    }\n}\n\nconst parseRegex = /^([^0-9]*)(([0-9,]*[0-9]+)(\\.[0-9]+)?)([Ee][+-]?[0-9]+)?([^0-9]*)$/;\nconst groupRegex = /,/g;\nconst keys = ['minusSign', 'infinity'];\n/**\n * Module for Number Parser.\n *\n * @private\n */\nclass NumberParser {\n    /**\n     * Returns the parser function for given skeleton.\n     *\n     * @param {string} culture -  Specifies the culture name to be which formatting.\n     * @param {NumberFormatOptions} option - Specific the format in which number  will parsed.\n     * @param {Object} cldr - Specifies the global cldr data collection.\n     * @returns {Function} ?\n     */\n    static numberParser(culture, option, cldr) {\n        const dependable = IntlBase.getDependables(cldr, culture, '', true);\n        const parseOptions = { custom: true };\n        let numOptions;\n        if ((IntlBase.formatRegex.test(option.format)) || !(option.format)) {\n            extend(parseOptions, IntlBase.getProperNumericSkeleton(option.format || 'N'));\n            parseOptions.custom = false;\n            if (!parseOptions.fractionDigits) {\n                if (option.maximumFractionDigits) {\n                    parseOptions.maximumFractionDigits = option.maximumFractionDigits;\n                }\n            }\n        }\n        else {\n            extend(parseOptions, IntlBase.customFormat(option.format, null, null));\n        }\n        const numbers = getValue('numbers', dependable.parserObject);\n        // eslint-disable-next-line\n        numOptions = ParserBase.getCurrentNumericOptions(dependable.parserObject, ParserBase.getNumberingSystem(cldr), true, isBlazor());\n        parseOptions.symbolRegex = ParserBase.getSymbolRegex(Object.keys(numOptions.symbolMatch));\n        // eslint-disable-next-line\n        parseOptions.infinity = numOptions.symbolNumberSystem[keys[1]];\n        let symbolpattern;\n        if (!isBlazor()) {\n            symbolpattern = IntlBase.getSymbolPattern(parseOptions.type, numOptions.numberSystem, dependable.numericObject, parseOptions.isAccount);\n            if (symbolpattern) {\n                symbolpattern = symbolpattern.replace(/\\u00A4/g, IntlBase.defaultCurrency);\n                const split = symbolpattern.split(';');\n                parseOptions.nData = IntlBase.getFormatData(split[1] || '-' + split[0], true, '');\n                parseOptions.pData = IntlBase.getFormatData(split[0], true, '');\n            }\n        }\n        else {\n            parseOptions.nData = extend({}, {}, getValue(parseOptions.type + 'nData', numbers));\n            parseOptions.pData = extend({}, {}, getValue(parseOptions.type + 'pData', numbers));\n            if (parseOptions.type === 'currency' && option.currency) {\n                IntlBase.replaceBlazorCurrency([parseOptions.pData, parseOptions.nData], getValue('currencySymbol', numbers), option.currency);\n            }\n        }\n        return (value) => {\n            return this.getParsedNumber(value, parseOptions, numOptions);\n        };\n    }\n    /**\n     * Returns parsed number for the provided formatting options\n     *\n     * @param {string} value ?\n     * @param {NumericParts} options ?\n     * @param {NumericOptions} numOptions ?\n     * @returns {number} ?\n     */\n    static getParsedNumber(value, options, numOptions) {\n        let isNegative;\n        let isPercent;\n        let tempValue;\n        let lead;\n        let end;\n        let ret;\n        if (value.indexOf(options.infinity) !== -1) {\n            return Infinity;\n        }\n        else {\n            value = ParserBase.convertValueParts(value, options.symbolRegex, numOptions.symbolMatch);\n            value = ParserBase.convertValueParts(value, numOptions.numberParseRegex, numOptions.numericPair);\n            value = value.indexOf('-') !== -1 ? value.replace('-.', '-0.') : value;\n            if (value.indexOf('.') === 0) {\n                value = '0' + value;\n            }\n            const matches = value.match(parseRegex);\n            if (isNullOrUndefined(matches)) {\n                return NaN;\n            }\n            lead = matches[1];\n            tempValue = matches[2];\n            const exponent = matches[5];\n            end = matches[6];\n            isNegative = options.custom ? ((lead === options.nData.nlead) && (end === options.nData.nend)) :\n                ((lead.indexOf(options.nData.nlead) !== -1) && (end.indexOf(options.nData.nend) !== -1));\n            isPercent = isNegative ?\n                options.nData.isPercent :\n                options.pData.isPercent;\n            tempValue = tempValue.replace(groupRegex, '');\n            if (exponent) {\n                tempValue += exponent;\n            }\n            ret = +tempValue;\n            if (options.type === 'percent' || isPercent) {\n                ret = ret / 100;\n            }\n            if (options.custom || options.fractionDigits) {\n                ret = parseFloat(ret.toFixed(options.custom ?\n                    (isNegative ? options.nData.maximumFractionDigits : options.pData.maximumFractionDigits) : options.fractionDigits));\n            }\n            if (options.maximumFractionDigits) {\n                ret = this.convertMaxFracDigits(tempValue, options, ret, isNegative);\n            }\n            if (isNegative) {\n                ret *= -1;\n            }\n            return ret;\n        }\n    }\n    static convertMaxFracDigits(value, options, ret, isNegative) {\n        let decimalSplitValue = value.split('.');\n        if (decimalSplitValue[1] && decimalSplitValue[1].length > options.maximumFractionDigits) {\n            ret = +(ret.toFixed(options.custom ?\n                (isNegative ? options.nData.maximumFractionDigits : options.pData.maximumFractionDigits) : options.maximumFractionDigits));\n        }\n        return ret;\n    }\n}\n\nclass Observer {\n    constructor(context) {\n        this.ranArray = [];\n        this.boundedEvents = {};\n        if (isNullOrUndefined(context)) {\n            return;\n        }\n        this.context = context;\n    }\n    /**\n     * To attach handler for given property in current context.\n     *\n     * @param {string} property - specifies the name of the event.\n     * @param {Function} handler - Specifies the handler function to be called while event notified.\n     * @param {Object} context - Specifies the context binded to the handler.\n     * @param {string} id - specifies the random generated id.\n     * @returns {void}\n     */\n    on(property, handler, context, id) {\n        if (isNullOrUndefined(handler)) {\n            return;\n        }\n        const cntxt = context || this.context;\n        if (this.notExist(property)) {\n            this.boundedEvents[property] = [{ handler: handler, context: cntxt }];\n            return;\n        }\n        if (!isNullOrUndefined(id)) {\n            if (this.ranArray.indexOf(id) === -1) {\n                this.ranArray.push(id);\n                this.boundedEvents[property].push({ handler: handler, context: cntxt, id: id });\n            }\n        }\n        else if (!this.isHandlerPresent(this.boundedEvents[property], handler)) {\n            this.boundedEvents[property].push({ handler: handler, context: cntxt });\n        }\n    }\n    /**\n     * To remove handlers from a event attached using on() function.\n     *\n     * @param {string} property - specifies the name of the event.\n     * @param {Function} handler - Optional argument specifies the handler function to be called while event notified.\n     * @param {string} id - specifies the random generated id.\n     * @returns {void} ?\n     */\n    off(property, handler, id) {\n        if (this.notExist(property)) {\n            return;\n        }\n        const curObject = getValue(property, this.boundedEvents);\n        if (handler) {\n            for (let i = 0; i < curObject.length; i++) {\n                if (id) {\n                    if (curObject[i].id === id) {\n                        curObject.splice(i, 1);\n                        const indexLocation = this.ranArray.indexOf(id);\n                        if (indexLocation !== -1) {\n                            this.ranArray.splice(indexLocation, 1);\n                        }\n                        break;\n                    }\n                }\n                else if (handler === curObject[i].handler) {\n                    curObject.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        else {\n            delete this.boundedEvents[property];\n        }\n    }\n    /**\n     * To notify the handlers in the specified event.\n     *\n     * @param {string} property - Specifies the event to be notify.\n     * @param {Object} argument - Additional parameters to pass while calling the handler.\n     * @param {Function} successHandler - this function will invoke after event successfully triggered\n     * @param {Function} errorHandler - this function will invoke after event if it was failure to call.\n     * @returns {void} ?\n     */\n    notify(property, argument, successHandler, errorHandler) {\n        if (this.notExist(property)) {\n            if (successHandler) {\n                successHandler.call(this, argument);\n            }\n            return;\n        }\n        if (argument) {\n            argument.name = property;\n        }\n        const blazor = 'Blazor';\n        const curObject = getValue(property, this.boundedEvents).slice(0);\n        if (window[blazor]) {\n            return this.blazorCallback(curObject, argument, successHandler, errorHandler, 0);\n        }\n        else {\n            for (const cur of curObject) {\n                cur.handler.call(cur.context, argument);\n            }\n            if (successHandler) {\n                successHandler.call(this, argument);\n            }\n        }\n    }\n    blazorCallback(objs, argument, successHandler, errorHandler, index) {\n        const isTrigger = index === objs.length - 1;\n        if (index < objs.length) {\n            const obj = objs[index];\n            const promise = obj.handler.call(obj.context, argument);\n            if (promise && typeof promise.then === 'function') {\n                if (!successHandler) {\n                    return promise;\n                }\n                promise.then((data) => {\n                    data = typeof data === 'string' && this.isJson(data) ? JSON.parse(data, this.dateReviver) : data;\n                    extend(argument, argument, data, true);\n                    if (successHandler && isTrigger) {\n                        successHandler.call(obj.context, argument);\n                    }\n                    else {\n                        return this.blazorCallback(objs, argument, successHandler, errorHandler, index + 1);\n                    }\n                }).catch((data) => {\n                    if (errorHandler) {\n                        errorHandler.call(obj.context, typeof data === 'string' &&\n                            this.isJson(data) ? JSON.parse(data, this.dateReviver) : data);\n                    }\n                });\n            }\n            else if (successHandler && isTrigger) {\n                successHandler.call(obj.context, argument);\n            }\n            else {\n                return this.blazorCallback(objs, argument, successHandler, errorHandler, index + 1);\n            }\n        }\n    }\n    // eslint-disable-next-line\n    dateReviver(key, value) {\n        const dPattern = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}/;\n        if (isBlazor && typeof value === 'string' && value.match(dPattern) !== null) {\n            return (new Date(value));\n        }\n        return (value);\n    }\n    isJson(value) {\n        try {\n            JSON.parse(value);\n        }\n        catch (e) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * To destroy handlers in the event\n     *\n     * @returns {void} ?\n     */\n    destroy() {\n        this.boundedEvents = this.context = undefined;\n    }\n    /**\n     * Returns if the property exists.\n     *\n     * @param {string} prop ?\n     * @returns {boolean} ?\n     */\n    notExist(prop) {\n        // eslint-disable-next-line\n        return this.boundedEvents.hasOwnProperty(prop) === false || this.boundedEvents[prop].length <= 0;\n    }\n    /**\n     * Returns if the handler is present.\n     *\n     * @param {BoundOptions[]} boundedEvents ?\n     * @param {Function} handler ?\n     * @returns {boolean} ?\n     */\n    isHandlerPresent(boundedEvents, handler) {\n        for (const cur of boundedEvents) {\n            if (cur.handler === handler) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\n/**\n * Specifies the observer used for external change detection.\n */\nconst onIntlChange = new Observer();\n/**\n * Specifies the default rtl status for EJ2 components.\n */\nlet rightToLeft = false;\n/**\n * Specifies the CLDR data loaded for internationalization functionalities.\n *\n * @private\n */\nconst cldrData = {};\n/**\n * Specifies the default culture value to be considered.\n *\n * @private\n */\nlet defaultCulture = 'en-US';\n/**\n * Specifies default currency code to be considered\n *\n * @private\n */\nlet defaultCurrencyCode = 'USD';\nconst mapper = ['numericObject', 'dateObject'];\n/**\n * Internationalization class provides support to parse and format the number and date object to the desired format.\n * ```typescript\n * // To set the culture globally\n * setCulture('en-GB');\n *\n * // To set currency code globally\n * setCurrencyCode('EUR');\n *\n * //Load cldr data\n * loadCldr(gregorainData);\n * loadCldr(timeZoneData);\n * loadCldr(numbersData);\n * loadCldr(numberSystemData);\n *\n * // To use formatter in component side\n * let Intl:Internationalization = new Internationalization();\n *\n * // Date formatting\n * let dateFormatter: Function = Intl.getDateFormat({skeleton:'long',type:'dateTime'});\n * dateFormatter(new Date('11/2/2016'));\n * dateFormatter(new Date('25/2/2030'));\n * Intl.formatDate(new Date(),{skeleton:'E'});\n *\n * //Number formatting\n * let numberFormatter: Function = Intl.getNumberFormat({skeleton:'C5'})\n * numberFormatter(24563334);\n * Intl.formatNumber(123123,{skeleton:'p2'});\n *\n * // Date parser\n * let dateParser: Function = Intl.getDateParser({skeleton:'short',type:'time'});\n * dateParser('10:30 PM');\n * Intl.parseDate('10',{skeleton:'H'});\n * ```\n */\nclass Internationalization {\n    constructor(cultureName) {\n        if (cultureName) {\n            this.culture = cultureName;\n        }\n    }\n    /**\n     * Returns the format function for given options.\n     *\n     * @param {DateFormatOptions} options - Specifies the format options in which the format function will return.\n     * @returns {Function} ?\n     */\n    getDateFormat(options) {\n        return DateFormat.dateFormat(this.getCulture(), options || { type: 'date', skeleton: 'short' }, cldrData);\n    }\n    /**\n     * Returns the format function for given options.\n     *\n     * @param {NumberFormatOptions} options - Specifies the format options in which the format function will return.\n     * @returns {Function} ?\n     */\n    getNumberFormat(options) {\n        if (options && !options.currency) {\n            options.currency = defaultCurrencyCode;\n        }\n        if (isBlazor() && options && !options.format) {\n            options.minimumFractionDigits = 0;\n        }\n        return NumberFormat.numberFormatter(this.getCulture(), options || {}, cldrData);\n    }\n    /**\n     * Returns the parser function for given options.\n     *\n     * @param {DateFormatOptions} options - Specifies the format options in which the parser function will return.\n     * @returns {Function} ?\n     */\n    getDateParser(options) {\n        return DateParser.dateParser(this.getCulture(), options || { skeleton: 'short', type: 'date' }, cldrData);\n    }\n    /**\n     * Returns the parser function for given options.\n     *\n     * @param {NumberFormatOptions} options - Specifies the format options in which the parser function will return.\n     * @returns {Function} ?\n     */\n    getNumberParser(options) {\n        if (isBlazor() && options && !options.format) {\n            options.minimumFractionDigits = 0;\n        }\n        return NumberParser.numberParser(this.getCulture(), options || { format: 'N' }, cldrData);\n    }\n    /**\n     * Returns the formatted string based on format options.\n     *\n     * @param {number} value - Specifies the number to format.\n     * @param {NumberFormatOptions} option - Specifies the format options in which the number will be formatted.\n     * @returns {string} ?\n     */\n    formatNumber(value, option) {\n        return this.getNumberFormat(option)(value);\n    }\n    /**\n     * Returns the formatted date string based on format options.\n     *\n     * @param {Date} value - Specifies the number to format.\n     * @param {DateFormatOptions} option - Specifies the format options in which the number will be formatted.\n     * @returns {string} ?\n     */\n    formatDate(value, option) {\n        return this.getDateFormat(option)(value);\n    }\n    /**\n     * Returns the date object for given date string and options.\n     *\n     * @param {string} value - Specifies the string to parse.\n     * @param {DateFormatOptions} option - Specifies the parse options in which the date string will be parsed.\n     * @returns {Date} ?\n     */\n    parseDate(value, option) {\n        return this.getDateParser(option)(value);\n    }\n    /**\n     * Returns the number object from the given string value and options.\n     *\n     * @param {string} value - Specifies the string to parse.\n     * @param {NumberFormatOptions} option - Specifies the parse options in which the  string number  will be parsed.\n     * @returns {number} ?\n     */\n    parseNumber(value, option) {\n        return this.getNumberParser(option)(value);\n    }\n    /**\n     * Returns Native Date Time Pattern\n     *\n     * @param {DateFormatOptions} option - Specifies the parse options for resultant date time pattern.\n     * @param {boolean} isExcelFormat - Specifies format value to be converted to excel pattern.\n     * @returns {string} ?\n     * @private\n     */\n    getDatePattern(option, isExcelFormat) {\n        return IntlBase.getActualDateTimeFormat(this.getCulture(), option, cldrData, isExcelFormat);\n    }\n    /**\n     * Returns Native Number Pattern\n     *\n     * @param {NumberFormatOptions} option - Specifies the parse options for resultant number pattern.\n     * @param {boolean} isExcel ?\n     * @returns {string} ?\n     * @private\n     */\n    getNumberPattern(option, isExcel) {\n        return IntlBase.getActualNumberFormat(this.getCulture(), option, cldrData, isExcel);\n    }\n    /**\n     * Returns the First Day of the Week\n     *\n     * @returns {number} ?\n     */\n    getFirstDayOfWeek() {\n        return IntlBase.getWeekData(this.getCulture(), cldrData);\n    }\n    /**\n     * Returns the culture\n     *\n     * @returns {string} ?\n     */\n    getCulture() {\n        return this.culture || defaultCulture;\n    }\n}\n/**\n * Set the default culture to all EJ2 components\n *\n * @param {string} cultureName - Specifies the culture name to be set as default culture.\n * @returns {void} ?\n */\nfunction setCulture(cultureName) {\n    defaultCulture = cultureName;\n    onIntlChange.notify('notifyExternalChange', { 'locale': defaultCulture });\n}\n/**\n * Set the default currency code to all EJ2 components\n *\n * @param {string} currencyCode Specifies the culture name to be set as default culture.\n * @returns {void} ?\n */\nfunction setCurrencyCode(currencyCode) {\n    defaultCurrencyCode = currencyCode;\n    onIntlChange.notify('notifyExternalChange', { 'currencyCode': defaultCurrencyCode });\n}\n/**\n * Load the CLDR data into context\n *\n * @param {Object[]} data Specifies the CLDR data's to be used for formatting and parser.\n * @returns {void} ?\n */\nfunction loadCldr(...data) {\n    for (const obj of data) {\n        extend(cldrData, obj, {}, true);\n    }\n}\n/**\n * To enable or disable RTL functionality for all components globally.\n *\n * @param {boolean} status - Optional argument Specifies the status value to enable or disable rtl option.\n * @returns {void} ?\n */\nfunction enableRtl(status = true) {\n    rightToLeft = status;\n    onIntlChange.notify('notifyExternalChange', { enableRtl: rightToLeft });\n}\n/**\n * To get the numeric CLDR object for given culture\n *\n * @param {string} locale - Specifies the locale for which numericObject to be returned.\n * @param {string} type ?\n * @returns {Object} ?\n * @ignore\n * @private\n */\nfunction getNumericObject(locale, type) {\n    // eslint-disable-next-line\n    let numObject = IntlBase.getDependables(cldrData, locale, '', true)[mapper[0]];\n    // eslint-disable-next-line\n    const dateObject = IntlBase.getDependables(cldrData, locale, '')[mapper[1]];\n    const numSystem = getValue('defaultNumberingSystem', numObject);\n    const symbPattern = isBlazor() ? getValue('numberSymbols', numObject) : getValue('symbols-numberSystem-' + numSystem, numObject);\n    const pattern = IntlBase.getSymbolPattern(type || 'decimal', numSystem, numObject, false);\n    return extend(symbPattern, IntlBase.getFormatData(pattern, true, '', true), { 'dateSeparator': IntlBase.getDateSeparator(dateObject) });\n}\n/**\n * To get the numeric CLDR  number base object for given culture\n *\n * @param {string} locale - Specifies the locale for which numericObject to be returned.\n * @param {string} currency - Specifies the currency for which numericObject to be returned.\n * @returns {string} ?\n * @ignore\n * @private\n */\nfunction getNumberDependable(locale, currency) {\n    // eslint-disable-next-line\n    const numObject = IntlBase.getDependables(cldrData, locale, '', true);\n    // eslint-disable-next-line\n    return IntlBase.getCurrencySymbol(numObject.numericObject, currency);\n}\n/**\n * To get the default date CLDR object.\n *\n * @param {string} mode ?\n * @returns {Object} ?\n * @ignore\n * @private\n */\nfunction getDefaultDateObject(mode) {\n    // eslint-disable-next-line\n    return IntlBase.getDependables(cldrData, '', mode, false)[mapper[1]];\n}\n\nconst blazorCultureFormats = {\n    'en-US': {\n        'd': 'M/d/y',\n        'D': 'EEEE, MMMM d, y',\n        'f': 'EEEE, MMMM d, y h:mm a',\n        'F': 'EEEE, MMMM d, y h:mm:s a',\n        'g': 'M/d/y h:mm a',\n        'G': 'M/d/yyyy h:mm:ss tt',\n        'm': 'MMMM d',\n        'M': 'MMMM d',\n        'r': 'ddd, dd MMM yyyy HH\\':\\'mm\\':\\'ss \\'GMT\\'',\n        'R': 'ddd, dd MMM yyyy HH\\':\\'mm\\':\\'ss \\'GMT\\'',\n        's': 'yyyy\\'-\\'MM\\'-\\'dd\\'T\\'HH\\':\\'mm\\':\\'ss',\n        't': 'h:mm tt',\n        'T': 'h:m:s tt',\n        'u': 'yyyy\\'-\\'MM\\'-\\'dd HH\\':\\'mm\\':\\'ss\\'Z\\'',\n        'U': 'dddd, MMMM d, yyyy h:mm:ss tt',\n        'y': 'MMMM yyyy',\n        'Y': 'MMMM yyyy'\n    }\n};\n/**\n * Date base common constants and function for date parser and formatter.\n */\n// eslint-disable-next-line\nvar IntlBase;\n(function (IntlBase) {\n    // tslint:disable-next-line:max-line-length\n    IntlBase.negativeDataRegex = /^(('[^']+'|''|[^*#@0,.E])*)(\\*.)?((([#,]*[0,]*0+)(\\.0*[0-9]*#*)?)|([#,]*@+#*))(E\\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;\n    IntlBase.customRegex = /^(('[^']+'|''|[^*#@0,.])*)(\\*.)?((([0#,]*[0,]*[0#]*)(\\.[0#]*)?)|([#,]*@+#*))(E\\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;\n    IntlBase.latnParseRegex = /0|1|2|3|4|5|6|7|8|9/g;\n    const fractionRegex = /[0-9]/g;\n    IntlBase.defaultCurrency = '$';\n    const mapper = ['infinity', 'nan', 'group', 'decimal'];\n    const patternRegex = /G|M|L|H|c|'| a|yy|y|EEEE|E/g;\n    const patternMatch = {\n        'G': '',\n        'M': 'm',\n        'L': 'm',\n        'H': 'h',\n        'c': 'd',\n        '\\'': '\"',\n        ' a': ' AM/PM',\n        'yy': 'yy',\n        'y': 'yyyy',\n        'EEEE': 'dddd',\n        'E': 'ddd'\n    };\n    IntlBase.dateConverterMapper = /dddd|ddd/ig;\n    const defaultFirstDay = 'sun';\n    IntlBase.islamicRegex = /^islamic/;\n    const firstDayMapper = {\n        'sun': 0,\n        'mon': 1,\n        'tue': 2,\n        'wed': 3,\n        'thu': 4,\n        'fri': 5,\n        'sat': 6\n    };\n    IntlBase.formatRegex = /(^[ncpae]{1})([0-1]?[0-9]|20)?$/i;\n    IntlBase.currencyFormatRegex = /(^[ca]{1})([0-1]?[0-9]|20)?$/i;\n    IntlBase.curWithoutNumberRegex = /(c|a)$/ig;\n    const typeMapper = {\n        '$': 'isCurrency',\n        '%': 'isPercent',\n        '-': 'isNegative',\n        0: 'nlead',\n        1: 'nend'\n    };\n    IntlBase.dateParseRegex = /([a-z])\\1*|'([^']|'')+'|''|./gi;\n    IntlBase.basicPatterns = ['short', 'medium', 'long', 'full'];\n    /* tslint:disable:quotemark */\n    IntlBase.defaultObject = {\n        'dates': {\n            'calendars': {\n                'gregorian': {\n                    'months': {\n                        'stand-alone': {\n                            'abbreviated': {\n                                '1': 'Jan',\n                                '2': 'Feb',\n                                '3': 'Mar',\n                                '4': 'Apr',\n                                '5': 'May',\n                                '6': 'Jun',\n                                '7': 'Jul',\n                                '8': 'Aug',\n                                '9': 'Sep',\n                                '10': 'Oct',\n                                '11': 'Nov',\n                                '12': 'Dec'\n                            },\n                            'narrow': {\n                                '1': 'J',\n                                '2': 'F',\n                                '3': 'M',\n                                '4': 'A',\n                                '5': 'M',\n                                '6': 'J',\n                                '7': 'J',\n                                '8': 'A',\n                                '9': 'S',\n                                '10': 'O',\n                                '11': 'N',\n                                '12': 'D'\n                            },\n                            'wide': {\n                                '1': 'January',\n                                '2': 'February',\n                                '3': 'March',\n                                '4': 'April',\n                                '5': 'May',\n                                '6': 'June',\n                                '7': 'July',\n                                '8': 'August',\n                                '9': 'September',\n                                '10': 'October',\n                                '11': 'November',\n                                '12': 'December'\n                            }\n                        }\n                    },\n                    'days': {\n                        'stand-alone': {\n                            'abbreviated': {\n                                'sun': 'Sun',\n                                'mon': 'Mon',\n                                'tue': 'Tue',\n                                'wed': 'Wed',\n                                'thu': 'Thu',\n                                'fri': 'Fri',\n                                'sat': 'Sat'\n                            },\n                            'narrow': {\n                                'sun': 'S',\n                                'mon': 'M',\n                                'tue': 'T',\n                                'wed': 'W',\n                                'thu': 'T',\n                                'fri': 'F',\n                                'sat': 'S'\n                            },\n                            'short': {\n                                'sun': 'Su',\n                                'mon': 'Mo',\n                                'tue': 'Tu',\n                                'wed': 'We',\n                                'thu': 'Th',\n                                'fri': 'Fr',\n                                'sat': 'Sa'\n                            },\n                            'wide': {\n                                'sun': 'Sunday',\n                                'mon': 'Monday',\n                                'tue': 'Tuesday',\n                                'wed': 'Wednesday',\n                                'thu': 'Thursday',\n                                'fri': 'Friday',\n                                'sat': 'Saturday'\n                            }\n                        }\n                    },\n                    'dayPeriods': {\n                        'format': {\n                            'wide': {\n                                'am': 'AM',\n                                'pm': 'PM'\n                            }\n                        }\n                    },\n                    'eras': {\n                        'eraNames': {\n                            '0': 'Before Christ',\n                            '0-alt-variant': 'Before Common Era',\n                            '1': 'Anno Domini',\n                            '1-alt-variant': 'Common Era'\n                        },\n                        'eraAbbr': {\n                            '0': 'BC',\n                            '0-alt-variant': 'BCE',\n                            '1': 'AD',\n                            '1-alt-variant': 'CE'\n                        },\n                        'eraNarrow': {\n                            '0': 'B',\n                            '0-alt-variant': 'BCE',\n                            '1': 'A',\n                            '1-alt-variant': 'CE'\n                        }\n                    },\n                    'dateFormats': {\n                        'full': 'EEEE, MMMM d, y',\n                        'long': 'MMMM d, y',\n                        'medium': 'MMM d, y',\n                        'short': 'M/d/yy'\n                    },\n                    'timeFormats': {\n                        'full': 'h:mm:ss a zzzz',\n                        'long': 'h:mm:ss a z',\n                        'medium': 'h:mm:ss a',\n                        'short': 'h:mm a'\n                    },\n                    'dateTimeFormats': {\n                        'full': '{1} \\'at\\' {0}',\n                        'long': '{1} \\'at\\' {0}',\n                        'medium': '{1}, {0}',\n                        'short': '{1}, {0}',\n                        'availableFormats': {\n                            'd': 'd',\n                            'E': 'ccc',\n                            'Ed': 'd E',\n                            'Ehm': 'E h:mm a',\n                            'EHm': 'E HH:mm',\n                            'Ehms': 'E h:mm:ss a',\n                            'EHms': 'E HH:mm:ss',\n                            'Gy': 'y G',\n                            'GyMMM': 'MMM y G',\n                            'GyMMMd': 'MMM d, y G',\n                            'GyMMMEd': 'E, MMM d, y G',\n                            'h': 'h a',\n                            'H': 'HH',\n                            'hm': 'h:mm a',\n                            'Hm': 'HH:mm',\n                            'hms': 'h:mm:ss a',\n                            'Hms': 'HH:mm:ss',\n                            'hmsv': 'h:mm:ss a v',\n                            'Hmsv': 'HH:mm:ss v',\n                            'hmv': 'h:mm a v',\n                            'Hmv': 'HH:mm v',\n                            'M': 'L',\n                            'Md': 'M/d',\n                            'MEd': 'E, M/d',\n                            'MMM': 'LLL',\n                            'MMMd': 'MMM d',\n                            'MMMEd': 'E, MMM d',\n                            'MMMMd': 'MMMM d',\n                            'ms': 'mm:ss',\n                            'y': 'y',\n                            'yM': 'M/y',\n                            'yMd': 'M/d/y',\n                            'yMEd': 'E, M/d/y',\n                            'yMMM': 'MMM y',\n                            'yMMMd': 'MMM d, y',\n                            'yMMMEd': 'E, MMM d, y',\n                            'yMMMM': 'MMMM y'\n                        }\n                    }\n                },\n                'islamic': {\n                    'months': {\n                        'stand-alone': {\n                            'abbreviated': {\n                                '1': 'Muh.',\n                                '2': 'Saf.',\n                                '3': 'Rab. I',\n                                '4': 'Rab. II',\n                                '5': 'Jum. I',\n                                '6': 'Jum. II',\n                                '7': 'Raj.',\n                                '8': 'Sha.',\n                                '9': 'Ram.',\n                                '10': 'Shaw.',\n                                '11': 'Dhuʻl-Q.',\n                                '12': 'Dhuʻl-H.'\n                            },\n                            'narrow': {\n                                '1': '1',\n                                '2': '2',\n                                '3': '3',\n                                '4': '4',\n                                '5': '5',\n                                '6': '6',\n                                '7': '7',\n                                '8': '8',\n                                '9': '9',\n                                '10': '10',\n                                '11': '11',\n                                '12': '12'\n                            },\n                            'wide': {\n                                '1': 'Muharram',\n                                '2': 'Safar',\n                                '3': 'Rabiʻ I',\n                                '4': 'Rabiʻ II',\n                                '5': 'Jumada I',\n                                '6': 'Jumada II',\n                                '7': 'Rajab',\n                                '8': 'Shaʻban',\n                                '9': 'Ramadan',\n                                '10': 'Shawwal',\n                                '11': 'Dhuʻl-Qiʻdah',\n                                '12': 'Dhuʻl-Hijjah'\n                            }\n                        }\n                    },\n                    'days': {\n                        'stand-alone': {\n                            'abbreviated': {\n                                'sun': 'Sun',\n                                'mon': 'Mon',\n                                'tue': 'Tue',\n                                'wed': 'Wed',\n                                'thu': 'Thu',\n                                'fri': 'Fri',\n                                'sat': 'Sat'\n                            },\n                            'narrow': {\n                                'sun': 'S',\n                                'mon': 'M',\n                                'tue': 'T',\n                                'wed': 'W',\n                                'thu': 'T',\n                                'fri': 'F',\n                                'sat': 'S'\n                            },\n                            'short': {\n                                'sun': 'Su',\n                                'mon': 'Mo',\n                                'tue': 'Tu',\n                                'wed': 'We',\n                                'thu': 'Th',\n                                'fri': 'Fr',\n                                'sat': 'Sa'\n                            },\n                            'wide': {\n                                'sun': 'Sunday',\n                                'mon': 'Monday',\n                                'tue': 'Tuesday',\n                                'wed': 'Wednesday',\n                                'thu': 'Thursday',\n                                'fri': 'Friday',\n                                'sat': 'Saturday'\n                            }\n                        }\n                    },\n                    'dayPeriods': {\n                        'format': {\n                            'wide': {\n                                'am': 'AM',\n                                'pm': 'PM'\n                            }\n                        }\n                    },\n                    'eras': {\n                        'eraNames': {\n                            '0': 'AH'\n                        },\n                        'eraAbbr': {\n                            '0': 'AH'\n                        },\n                        'eraNarrow': {\n                            '0': 'AH'\n                        }\n                    },\n                    'dateFormats': {\n                        'full': 'EEEE, MMMM d, y G',\n                        'long': 'MMMM d, y G',\n                        'medium': 'MMM d, y G',\n                        'short': 'M/d/y GGGGG'\n                    },\n                    'timeFormats': {\n                        'full': 'h:mm:ss a zzzz',\n                        'long': 'h:mm:ss a z',\n                        'medium': 'h:mm:ss a',\n                        'short': 'h:mm a'\n                    },\n                    'dateTimeFormats': {\n                        'full': '{1} \\'at\\' {0}',\n                        'long': '{1} \\'at\\' {0}',\n                        'medium': '{1}, {0}',\n                        'short': '{1}, {0}',\n                        'availableFormats': {\n                            'd': 'd',\n                            'E': 'ccc',\n                            'Ed': 'd E',\n                            'Ehm': 'E h:mm a',\n                            'EHm': 'E HH:mm',\n                            'Ehms': 'E h:mm:ss a',\n                            'EHms': 'E HH:mm:ss',\n                            'Gy': 'y G',\n                            'GyMMM': 'MMM y G',\n                            'GyMMMd': 'MMM d, y G',\n                            'GyMMMEd': 'E, MMM d, y G',\n                            'h': 'h a',\n                            'H': 'HH',\n                            'hm': 'h:mm a',\n                            'Hm': 'HH:mm',\n                            'hms': 'h:mm:ss a',\n                            'Hms': 'HH:mm:ss',\n                            'M': 'L',\n                            'Md': 'M/d',\n                            'MEd': 'E, M/d',\n                            'MMM': 'LLL',\n                            'MMMd': 'MMM d',\n                            'MMMEd': 'E, MMM d',\n                            'MMMMd': 'MMMM d',\n                            'ms': 'mm:ss',\n                            'y': 'y G',\n                            'yyyy': 'y G',\n                            'yyyyM': 'M/y GGGGG',\n                            'yyyyMd': 'M/d/y GGGGG',\n                            'yyyyMEd': 'E, M/d/y GGGGG',\n                            'yyyyMMM': 'MMM y G',\n                            'yyyyMMMd': 'MMM d, y G',\n                            'yyyyMMMEd': 'E, MMM d, y G',\n                            'yyyyMMMM': 'MMMM y G',\n                            'yyyyQQQ': 'QQQ y G',\n                            'yyyyQQQQ': 'QQQQ y G'\n                        }\n                    }\n                }\n            },\n            'timeZoneNames': {\n                'hourFormat': '+HH:mm;-HH:mm',\n                'gmtFormat': 'GMT{0}',\n                'gmtZeroFormat': 'GMT'\n            }\n        },\n        'numbers': {\n            'currencies': {\n                'USD': {\n                    'displayName': 'US Dollar',\n                    'symbol': '$',\n                    'symbol-alt-narrow': '$'\n                },\n                'EUR': {\n                    'displayName': 'Euro',\n                    'symbol': '€',\n                    'symbol-alt-narrow': '€'\n                },\n                'GBP': {\n                    'displayName': 'British Pound',\n                    'symbol-alt-narrow': '£'\n                }\n            },\n            'defaultNumberingSystem': 'latn',\n            'minimumGroupingDigits': '1',\n            'symbols-numberSystem-latn': {\n                'decimal': '.',\n                'group': ',',\n                'list': ';',\n                'percentSign': '%',\n                'plusSign': '+',\n                'minusSign': '-',\n                'exponential': 'E',\n                'superscriptingExponent': '×',\n                'perMille': '‰',\n                'infinity': '∞',\n                'nan': 'NaN',\n                'timeSeparator': ':'\n            },\n            'decimalFormats-numberSystem-latn': {\n                'standard': '#,##0.###'\n            },\n            'percentFormats-numberSystem-latn': {\n                'standard': '#,##0%'\n            },\n            'currencyFormats-numberSystem-latn': {\n                'standard': '¤#,##0.00',\n                'accounting': '¤#,##0.00;(¤#,##0.00)'\n            },\n            'scientificFormats-numberSystem-latn': {\n                'standard': '#E0'\n            }\n        }\n    };\n    IntlBase.blazorDefaultObject = {\n        'numbers': {\n            'mapper': {\n                '0': '0',\n                '1': '1',\n                '2': '2',\n                '3': '3',\n                '4': '4',\n                '5': '5',\n                '6': '6',\n                '7': '7',\n                '8': '8',\n                '9': '9'\n            },\n            'mapperDigits': '0123456789',\n            'numberSymbols': {\n                'decimal': '.',\n                'group': ',',\n                'plusSign': '+',\n                'minusSign': '-',\n                'percentSign': '%',\n                'nan': 'NaN',\n                'timeSeparator': ':',\n                'infinity': '∞'\n            },\n            'timeSeparator': ':',\n            'currencySymbol': '$',\n            'currencypData': {\n                'nlead': '$',\n                'nend': '',\n                'groupSeparator': ',',\n                'groupData': {\n                    'primary': 3\n                },\n                'maximumFraction': 2,\n                'minimumFraction': 2\n            },\n            'percentpData': {\n                'nlead': '',\n                'nend': '%',\n                'groupSeparator': ',',\n                'groupData': {\n                    'primary': 3\n                },\n                'maximumFraction': 2,\n                'minimumFraction': 2\n            },\n            'percentnData': {\n                'nlead': '-',\n                'nend': '%',\n                'groupSeparator': ',',\n                'groupData': {\n                    'primary': 3\n                },\n                'maximumFraction': 2,\n                'minimumFraction': 2\n            },\n            'currencynData': {\n                'nlead': '($',\n                'nend': ')',\n                'groupSeparator': ',',\n                'groupData': {\n                    'primary': 3\n                },\n                'maximumFraction': 2,\n                'minimumFraction': 2\n            },\n            'decimalnData': {\n                'nlead': '-',\n                'nend': '',\n                'groupData': {\n                    'primary': 3\n                },\n                'maximumFraction': 2,\n                'minimumFraction': 2\n            },\n            'decimalpData': {\n                'nlead': '',\n                'nend': '',\n                'groupData': {\n                    'primary': 3\n                },\n                'maximumFraction': 2,\n                'minimumFraction': 2\n            }\n        },\n        'dates': {\n            'dayPeriods': {\n                'am': 'AM',\n                'pm': 'PM'\n            },\n            'dateSeperator': '/',\n            'days': {\n                'abbreviated': {\n                    'sun': 'Sun',\n                    'mon': 'Mon',\n                    'tue': 'Tue',\n                    'wed': 'Wed',\n                    'thu': 'Thu',\n                    'fri': 'Fri',\n                    'sat': 'Sat'\n                },\n                'short': {\n                    'sun': 'Su',\n                    'mon': 'Mo',\n                    'tue': 'Tu',\n                    'wed': 'We',\n                    'thu': 'Th',\n                    'fri': 'Fr',\n                    'sat': 'Sa'\n                },\n                'wide': {\n                    'sun': 'Sunday',\n                    'mon': 'Monday',\n                    'tue': 'Tuesday',\n                    'wed': 'Wednesday',\n                    'thu': 'Thursday',\n                    'fri': 'Friday',\n                    'sat': 'Saturday'\n                }\n            },\n            'months': {\n                'abbreviated': {\n                    '1': 'Jan',\n                    '2': 'Feb',\n                    '3': 'Mar',\n                    '4': 'Apr',\n                    '5': 'May',\n                    '6': 'Jun',\n                    '7': 'Jul',\n                    '8': 'Aug',\n                    '9': 'Sep',\n                    '10': 'Oct',\n                    '11': 'Nov',\n                    '12': 'Dec'\n                },\n                'wide': {\n                    '1': 'January',\n                    '2': 'February',\n                    '3': 'March',\n                    '4': 'April',\n                    '5': 'May',\n                    '6': 'June',\n                    '7': 'July',\n                    '8': 'August',\n                    '9': 'September',\n                    '10': 'October',\n                    '11': 'November',\n                    '12': 'December'\n                }\n            },\n            'eras': {\n                '1': 'AD'\n            }\n        }\n    };\n    /* tslint:enable:quotemark */\n    IntlBase.monthIndex = {\n        3: 'abbreviated',\n        4: 'wide',\n        5: 'narrow',\n        1: 'abbreviated'\n    };\n    /**\n     *\n     */\n    IntlBase.month = 'months';\n    IntlBase.days = 'days';\n    /**\n     * Default numerber Object\n     */\n    IntlBase.patternMatcher = {\n        C: 'currency',\n        P: 'percent',\n        N: 'decimal',\n        A: 'currency',\n        E: 'scientific'\n    };\n    /**\n     * Returns the resultant pattern based on the skeleton, dateObject and the type provided\n     *\n     * @private\n     * @param {string} skeleton ?\n     * @param {Object} dateObject ?\n     * @param {string} type ?\n     * @param {boolean} isIslamic ?\n     * @param {string} blazorCulture ?\n     * @returns {string} ?\n     */\n    function getResultantPattern(skeleton, dateObject, type, isIslamic, blazorCulture) {\n        let resPattern;\n        const iType = type || 'date';\n        if (blazorCulture) {\n            resPattern = compareBlazorDateFormats({ skeleton: skeleton }, blazorCulture).format ||\n                compareBlazorDateFormats({ skeleton: 'd' }, 'en-US').format;\n        }\n        else {\n            if (IntlBase.basicPatterns.indexOf(skeleton) !== -1) {\n                resPattern = getValue(iType + 'Formats.' + skeleton, dateObject);\n                if (iType === 'dateTime') {\n                    const dPattern = getValue('dateFormats.' + skeleton, dateObject);\n                    const tPattern = getValue('timeFormats.' + skeleton, dateObject);\n                    resPattern = resPattern.replace('{1}', dPattern).replace('{0}', tPattern);\n                }\n            }\n            else {\n                resPattern = getValue('dateTimeFormats.availableFormats.' + skeleton, dateObject);\n            }\n            if (isUndefined(resPattern) && skeleton === 'yMd') {\n                resPattern = 'M/d/y';\n            }\n        }\n        return resPattern;\n    }\n    IntlBase.getResultantPattern = getResultantPattern;\n    /**\n     * Returns the dependable object for provided cldr data and culture\n     *\n     * @private\n     * @param {Object} cldr ?\n     * @param {string} culture ?\n     * @param {string} mode ?\n     * @param {boolean} isNumber ?\n     * @returns {any} ?\n     */\n    function getDependables(cldr, culture, mode, isNumber) {\n        const ret = {};\n        const calendartype = mode || 'gregorian';\n        ret.parserObject = ParserBase.getMainObject(cldr, culture) || (isBlazor() ? IntlBase.blazorDefaultObject : IntlBase.defaultObject);\n        if (isNumber) {\n            ret.numericObject = getValue('numbers', ret.parserObject);\n        }\n        else {\n            const dateString = isBlazor() ? 'dates' : ('dates.calendars.' + calendartype);\n            ret.dateObject = getValue(dateString, ret.parserObject);\n        }\n        return ret;\n    }\n    IntlBase.getDependables = getDependables;\n    /**\n     * Returns the symbol pattern for provided parameters\n     *\n     * @private\n     * @param {string} type ?\n     * @param {string} numSystem ?\n     * @param {Object} obj ?\n     * @param {boolean} isAccount ?\n     * @returns {string} ?\n     */\n    function getSymbolPattern(type, numSystem, obj, isAccount) {\n        return getValue(type + 'Formats-numberSystem-' +\n            numSystem + (isAccount ? '.accounting' : '.standard'), obj) || (isAccount ? getValue(type + 'Formats-numberSystem-' +\n            numSystem + '.standard', obj) : '');\n    }\n    IntlBase.getSymbolPattern = getSymbolPattern;\n    /**\n     *\n     * @param {string} format ?\n     * @returns {string} ?\n     */\n    function ConvertDateToWeekFormat(format) {\n        const convertMapper = format.match(IntlBase.dateConverterMapper);\n        if (convertMapper && isBlazor()) {\n            const tempString = convertMapper[0].length === 3 ? 'EEE' : 'EEEE';\n            return format.replace(IntlBase.dateConverterMapper, tempString);\n        }\n        return format;\n    }\n    IntlBase.ConvertDateToWeekFormat = ConvertDateToWeekFormat;\n    /**\n     *\n     * @param {DateFormatOptions} formatOptions ?\n     * @param {string} culture ?\n     * @returns {DateFormatOptions} ?\n     */\n    function compareBlazorDateFormats(formatOptions, culture) {\n        const format = formatOptions.format || formatOptions.skeleton;\n        let curFormatMapper = getValue((culture || 'en-US') + '.' + format, blazorCultureFormats);\n        if (!curFormatMapper) {\n            curFormatMapper = getValue('en-US.' + format, blazorCultureFormats);\n        }\n        if (curFormatMapper) {\n            curFormatMapper = ConvertDateToWeekFormat(curFormatMapper);\n            formatOptions.format = curFormatMapper.replace(/tt/, 'a');\n        }\n        return formatOptions;\n    }\n    IntlBase.compareBlazorDateFormats = compareBlazorDateFormats;\n    /**\n     * Returns proper numeric skeleton\n     *\n     * @private\n     * @param {string} skeleton ?\n     * @returns {any} ?\n     */\n    function getProperNumericSkeleton(skeleton) {\n        const matches = skeleton.match(IntlBase.formatRegex);\n        const ret = {};\n        const pattern = matches[1].toUpperCase();\n        ret.isAccount = (pattern === 'A');\n        // eslint-disable-next-line\n        ret.type = IntlBase.patternMatcher[pattern];\n        if (skeleton.length > 1) {\n            ret.fractionDigits = parseInt(matches[2], 10);\n        }\n        return ret;\n    }\n    IntlBase.getProperNumericSkeleton = getProperNumericSkeleton;\n    /**\n     * Returns format data for number formatting like minimum fraction, maximum fraction, etc..,\n     *\n     * @private\n     * @param {string} pattern ?\n     * @param {boolean} needFraction ?\n     * @param {string} cSymbol ?\n     * @param {boolean} fractionOnly ?\n     * @returns {any} ?\n     */\n    function getFormatData(pattern, needFraction, cSymbol, fractionOnly) {\n        const nData = fractionOnly ? {} : { nlead: '', nend: '' };\n        const match = pattern.match(IntlBase.customRegex);\n        if (match) {\n            if (!fractionOnly) {\n                nData.nlead = changeCurrencySymbol(match[1], cSymbol);\n                nData.nend = changeCurrencySymbol(match[10], cSymbol);\n                nData.groupPattern = match[4];\n            }\n            const fraction = match[7];\n            if (fraction && needFraction) {\n                const fmatch = fraction.match(fractionRegex);\n                if (!isNullOrUndefined(fmatch)) {\n                    nData.minimumFraction = fmatch.length;\n                }\n                else {\n                    nData.minimumFraction = 0;\n                }\n                nData.maximumFraction = fraction.length - 1;\n            }\n        }\n        return nData;\n    }\n    IntlBase.getFormatData = getFormatData;\n    /**\n     * Changes currency symbol\n     *\n     * @private\n     * @param {string} val ?\n     * @param {string} sym ?\n     * @returns {string} ?\n     */\n    function changeCurrencySymbol(val, sym) {\n        if (val) {\n            return val.replace(IntlBase.defaultCurrency, sym);\n        }\n        return '';\n    }\n    IntlBase.changeCurrencySymbol = changeCurrencySymbol;\n    /**\n     * Returns currency symbol based on currency code ?\n     *\n     * @private\n     * @param {Object} numericObject ?\n     * @param {string} currencyCode ?\n     * @param {string} altSymbol ?\n     * @returns {string} ?\n     */\n    function getCurrencySymbol(numericObject, currencyCode, altSymbol) {\n        const symbol = altSymbol ? ('.' + altSymbol) : '.symbol';\n        const getCurrency = getValue('currencies.' + currencyCode + symbol, numericObject) ||\n            getValue('currencies.' + currencyCode + '.symbol-alt-narrow', numericObject) || '$';\n        return getCurrency;\n    }\n    IntlBase.getCurrencySymbol = getCurrencySymbol;\n    /**\n     * Returns formatting options for custom number format\n     *\n     * @private\n     * @param {string} format ?\n     * @param {CommonOptions} dOptions ?\n     * @param {any} obj ?\n     * @returns {any} ?\n     */\n    function customFormat(format, dOptions, obj) {\n        const options = {};\n        const formatSplit = format.split(';');\n        const data = ['pData', 'nData', 'zeroData'];\n        for (let i = 0; i < formatSplit.length; i++) {\n            // eslint-disable-next-line\n            options[data[i]] = customNumberFormat(formatSplit[i], dOptions, obj);\n        }\n        if (isNullOrUndefined(options.nData)) {\n            options.nData = extend({}, options.pData);\n            options.nData.nlead = isNullOrUndefined(dOptions) ? '-' + options.nData.nlead : dOptions.minusSymbol + options.nData.nlead;\n        }\n        return options;\n    }\n    IntlBase.customFormat = customFormat;\n    /**\n     * Returns custom formatting options\n     *\n     * @private\n     * @param {string} format ?\n     * @param {CommonOptions} dOptions ?\n     * @param {Object} numObject ?\n     * @returns {any} ?\n     */\n    function customNumberFormat(format, dOptions, numObject) {\n        const cOptions = { type: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0 };\n        const pattern = format.match(IntlBase.customRegex);\n        if (isNullOrUndefined(pattern) || (pattern[5] === '' && format !== 'N/A')) {\n            cOptions.type = undefined;\n            return cOptions;\n        }\n        cOptions.nlead = pattern[1];\n        cOptions.nend = pattern[10];\n        let integerPart = pattern[6];\n        cOptions.useGrouping = integerPart.indexOf(',') !== -1;\n        integerPart = integerPart.replace(/,/g, '');\n        const fractionPart = pattern[7];\n        if (integerPart.indexOf('0') !== -1) {\n            cOptions.minimumIntegerDigits = integerPart.length - integerPart.indexOf('0');\n        }\n        if (!isNullOrUndefined(fractionPart)) {\n            cOptions.minimumFractionDigits = fractionPart.lastIndexOf('0');\n            cOptions.maximumFractionDigits = fractionPart.lastIndexOf('#');\n            if (cOptions.minimumFractionDigits === -1) {\n                cOptions.minimumFractionDigits = 0;\n            }\n            if (cOptions.maximumFractionDigits === -1 || cOptions.maximumFractionDigits < cOptions.minimumFractionDigits) {\n                cOptions.maximumFractionDigits = cOptions.minimumFractionDigits;\n            }\n        }\n        if (!isNullOrUndefined(dOptions)) {\n            extend(cOptions, isCurrencyPercent([cOptions.nlead, cOptions.nend], '$', dOptions.currencySymbol));\n            if (!cOptions.isCurrency) {\n                extend(cOptions, isCurrencyPercent([cOptions.nlead, cOptions.nend], '%', dOptions.percentSymbol));\n            }\n        }\n        else {\n            extend(cOptions, isCurrencyPercent([cOptions.nlead, cOptions.nend], '%', '%'));\n        }\n        if (!isNullOrUndefined(numObject)) {\n            const symbolPattern = getSymbolPattern(cOptions.type, dOptions.numberMapper.numberSystem, numObject, false);\n            if (cOptions.useGrouping) {\n                // eslint-disable-next-line\n                cOptions.groupSeparator = dOptions.numberMapper.numberSymbols[mapper[2]];\n                cOptions.groupData = NumberFormat.getGroupingDetails(symbolPattern.split(';')[0]);\n            }\n            cOptions.nlead = cOptions.nlead.replace(/'/g, '');\n            cOptions.nend = cOptions.nend.replace(/'/g, '');\n        }\n        return cOptions;\n    }\n    IntlBase.customNumberFormat = customNumberFormat;\n    /**\n     * Returns formatting options for currency or percent type\n     *\n     * @private\n     * @param {string[]} parts ?\n     * @param {string} actual ?\n     * @param {string} symbol ?\n     * @returns {any} ?\n     */\n    function isCurrencyPercent(parts, actual, symbol) {\n        const options = { nlead: parts[0], nend: parts[1] };\n        for (let i = 0; i < 2; i++) {\n            const part = parts[i];\n            const loc = part.indexOf(actual);\n            if ((loc !== -1) && ((loc < part.indexOf('\\'')) || (loc > part.lastIndexOf('\\'')))) {\n                // eslint-disable-next-line\n                options[typeMapper[i]] = part.substr(0, loc) + symbol + part.substr(loc + 1);\n                // eslint-disable-next-line\n                options[typeMapper[actual]] = true;\n                options.type = options.isCurrency ? 'currency' : 'percent';\n                break;\n            }\n        }\n        return options;\n    }\n    IntlBase.isCurrencyPercent = isCurrencyPercent;\n    /**\n     * Returns culture based date separator\n     *\n     * @private\n     * @param {Object} dateObj ?\n     * @returns {string} ?\n     */\n    function getDateSeparator(dateObj) {\n        const value = (getValue('dateFormats.short', dateObj) || '').match(/[d‏M‏]([^d‏M])[d‏M‏]/i);\n        return value ? value[1] : '/';\n    }\n    IntlBase.getDateSeparator = getDateSeparator;\n    /**\n     * Returns Native Date Time pattern\n     *\n     * @private\n     * @param {string} culture ?\n     * @param {DateFormatOptions} options ?\n     * @param {Object} cldr ?\n     * @param {boolean} isExcelFormat ?\n     * @returns {string} ?\n     */\n    function getActualDateTimeFormat(culture, options, cldr, isExcelFormat) {\n        const dependable = getDependables(cldr, culture, options.calendar);\n        if (isBlazor()) {\n            options = compareBlazorDateFormats(options, culture);\n        }\n        let actualPattern = options.format || getResultantPattern(options.skeleton, dependable.dateObject, options.type);\n        if (isExcelFormat) {\n            actualPattern = actualPattern.replace(patternRegex, (pattern) => {\n                // eslint-disable-next-line\n                return patternMatch[pattern];\n            });\n            if (actualPattern.indexOf('z') !== -1) {\n                const tLength = actualPattern.match(/z/g).length;\n                let timeZonePattern;\n                const options = { 'timeZone': {} };\n                options.numMapper = ParserBase.getNumberMapper(dependable.parserObject, ParserBase.getNumberingSystem(cldr));\n                options.timeZone = getValue('dates.timeZoneNames', dependable.parserObject);\n                const value = new Date();\n                const timezone = value.getTimezoneOffset();\n                let pattern = (tLength < 4) ? '+H;-H' : options.timeZone.hourFormat;\n                pattern = pattern.replace(/:/g, options.numMapper.timeSeparator);\n                if (timezone === 0) {\n                    timeZonePattern = options.timeZone.gmtZeroFormat;\n                }\n                else {\n                    timeZonePattern = DateFormat.getTimeZoneValue(timezone, pattern);\n                    timeZonePattern = options.timeZone.gmtFormat.replace(/\\{0\\}/, timeZonePattern);\n                }\n                actualPattern = actualPattern.replace(/[z]+/, '\"' + timeZonePattern + '\"');\n            }\n            actualPattern = actualPattern.replace(/ $/, '');\n        }\n        return actualPattern;\n    }\n    IntlBase.getActualDateTimeFormat = getActualDateTimeFormat;\n    /**\n     *\n     * @param {string} actual ?\n     * @param {any} option ?\n     * @returns {any} ?\n     */\n    // eslint-disable-next-line\n    function processSymbol(actual, option) {\n        if (actual.indexOf(',') !== -1) {\n            // eslint-disable-next-line\n            let split = actual.split(',');\n            actual = (split[0] + getValue('numberMapper.numberSymbols.group', option) +\n                split[1].replace('.', getValue('numberMapper.numberSymbols.decimal', option)));\n        }\n        else {\n            actual = actual.replace('.', getValue('numberMapper.numberSymbols.decimal', option));\n        }\n        return actual;\n    }\n    /**\n     * Returns Native Number pattern\n     *\n     * @private\n     * @param {string} culture ?\n     * @param {NumberFormatOptions} options ?\n     * @param {Object} cldr ?\n     * @param {boolean} isExcel ?\n     * @returns {string} ?\n     */\n    function getActualNumberFormat(culture, options, cldr, isExcel) {\n        const dependable = getDependables(cldr, culture, '', true);\n        const parseOptions = { custom: true };\n        const numrericObject = dependable.numericObject;\n        let minFrac;\n        const curObj = {};\n        const curMatch = (options.format || '').match(IntlBase.currencyFormatRegex);\n        const type = IntlBase.formatRegex.test(options.format) ? getProperNumericSkeleton(options.format || 'N') : {};\n        const dOptions = {};\n        if (curMatch) {\n            dOptions.numberMapper = isBlazor() ?\n                extend({}, dependable.numericObject) :\n                ParserBase.getNumberMapper(dependable.parserObject, ParserBase.getNumberingSystem(cldr), true);\n            const curCode = isBlazor() ? getValue('currencySymbol', dependable.numericObject) :\n                getCurrencySymbol(dependable.numericObject, options.currency || defaultCurrencyCode, options.altSymbol);\n            let symbolPattern = getSymbolPattern('currency', dOptions.numberMapper.numberSystem, dependable.numericObject, (/a/i).test(options.format));\n            symbolPattern = symbolPattern.replace(/\\u00A4/g, curCode);\n            const split = symbolPattern.split(';');\n            curObj.hasNegativePattern = isBlazor() ? true : (split.length > 1);\n            curObj.nData = isBlazor() ? getValue(type.type + 'nData', numrericObject) :\n                getFormatData(split[1] || '-' + split[0], true, curCode);\n            curObj.pData = isBlazor() ? getValue(type.type + 'pData', numrericObject) :\n                getFormatData(split[0], false, curCode);\n            if (!curMatch[2] && !options.minimumFractionDigits && !options.maximumFractionDigits) {\n                minFrac = getFormatData(symbolPattern.split(';')[0], true, '', true).minimumFraction;\n            }\n        }\n        let actualPattern;\n        if ((IntlBase.formatRegex.test(options.format)) || !(options.format)) {\n            extend(parseOptions, getProperNumericSkeleton(options.format || 'N'));\n            parseOptions.custom = false;\n            actualPattern = '###0';\n            if (parseOptions.fractionDigits || options.minimumFractionDigits || options.maximumFractionDigits || minFrac) {\n                const defaultMinimum = 0;\n                if (parseOptions.fractionDigits) {\n                    options.minimumFractionDigits = options.maximumFractionDigits = parseOptions.fractionDigits;\n                }\n                actualPattern = fractionDigitsPattern(actualPattern, minFrac || parseOptions.fractionDigits ||\n                    options.minimumFractionDigits || defaultMinimum, options.maximumFractionDigits || defaultMinimum);\n            }\n            if (options.minimumIntegerDigits) {\n                actualPattern = minimumIntegerPattern(actualPattern, options.minimumIntegerDigits);\n            }\n            if (options.useGrouping) {\n                actualPattern = groupingPattern(actualPattern);\n            }\n            if (parseOptions.type === 'currency' || (parseOptions.type && isBlazor())) {\n                if (isBlazor() && parseOptions.type !== 'currency') {\n                    curObj.pData = getValue(parseOptions.type + 'pData', numrericObject);\n                    curObj.nData = getValue(parseOptions.type + 'nData', numrericObject);\n                }\n                const cPattern = actualPattern;\n                actualPattern = curObj.pData.nlead + cPattern + curObj.pData.nend;\n                if (curObj.hasNegativePattern || isBlazor()) {\n                    actualPattern += ';' + curObj.nData.nlead + cPattern + curObj.nData.nend;\n                }\n            }\n            if (parseOptions.type === 'percent' && !isBlazor()) {\n                actualPattern += ' %';\n            }\n        }\n        else {\n            actualPattern = options.format.replace(/'/g, '\"');\n        }\n        if (Object.keys(dOptions).length > 0) {\n            actualPattern = !isExcel ? processSymbol(actualPattern, dOptions) : actualPattern;\n        }\n        return actualPattern;\n    }\n    IntlBase.getActualNumberFormat = getActualNumberFormat;\n    /**\n     *\n     * @param {string} pattern ?\n     * @param {number} minDigits ?\n     * @param {number} maxDigits ?\n     * @returns {string} ?\n     */\n    function fractionDigitsPattern(pattern, minDigits, maxDigits) {\n        pattern += '.';\n        for (let a = 0; a < minDigits; a++) {\n            pattern += '0';\n        }\n        if (minDigits < maxDigits) {\n            const diff = maxDigits - minDigits;\n            for (let b = 0; b < diff; b++) {\n                pattern += '#';\n            }\n        }\n        return pattern;\n    }\n    IntlBase.fractionDigitsPattern = fractionDigitsPattern;\n    /**\n     *\n     * @param {string} pattern ?\n     * @param {number} digits ?\n     * @returns {string} ?\n     */\n    function minimumIntegerPattern(pattern, digits) {\n        const temp = pattern.split('.');\n        let integer = '';\n        for (let x = 0; x < digits; x++) {\n            integer += '0';\n        }\n        return temp[1] ? (integer + '.' + temp[1]) : integer;\n    }\n    IntlBase.minimumIntegerPattern = minimumIntegerPattern;\n    /**\n     *\n     * @param {string} pattern ?\n     * @returns {string} ?\n     */\n    function groupingPattern(pattern) {\n        const temp = pattern.split('.');\n        let integer = temp[0];\n        const no = 3 - integer.length % 3;\n        const hash = (no && no === 1) ? '#' : (no === 2 ? '##' : '');\n        integer = hash + integer;\n        pattern = '';\n        for (let x = integer.length - 1; x > 0; x = x - 3) {\n            pattern = ',' + integer[x - 2] + integer[x - 1] + integer[x] + pattern;\n        }\n        pattern = pattern.slice(1);\n        return temp[1] ? (pattern + '.' + temp[1]) : pattern;\n    }\n    IntlBase.groupingPattern = groupingPattern;\n    /**\n     *\n     * @param {string} culture ?\n     * @param {Object} cldr ?\n     * @returns {number} ?\n     */\n    function getWeekData(culture, cldr) {\n        let firstDay = defaultFirstDay;\n        const mapper = getValue('supplemental.weekData.firstDay', cldr);\n        let iCulture = culture;\n        if ((/en-/).test(iCulture)) {\n            iCulture = iCulture.slice(3);\n        }\n        iCulture = iCulture.slice(0, 2).toUpperCase() + iCulture.substr(2);\n        if (mapper) {\n            firstDay = mapper[iCulture] || defaultFirstDay;\n        }\n        return firstDayMapper[firstDay];\n    }\n    IntlBase.getWeekData = getWeekData;\n    /**\n     * @private\n     * @param {any} pData ?\n     * @param {string} aCurrency ?\n     * @param {string} rCurrency ?\n     * @returns {void} ?\n     */\n    function replaceBlazorCurrency(pData, aCurrency, rCurrency) {\n        const iCurrency = getBlazorCurrencySymbol(rCurrency);\n        if (aCurrency !== iCurrency) {\n            for (const data of pData) {\n                data.nend = data.nend.replace(aCurrency, iCurrency);\n                data.nlead = data.nlead.replace(aCurrency, iCurrency);\n            }\n        }\n    }\n    IntlBase.replaceBlazorCurrency = replaceBlazorCurrency;\n    /**\n     * @private\n     * @param {Date} date ?\n     * @returns {number} ?\n     */\n    function getWeekOfYear(date) {\n        const newYear = new Date(date.getFullYear(), 0, 1);\n        let day = newYear.getDay();\n        let weeknum;\n        day = (day >= 0 ? day : day + 7);\n        const daynum = Math.floor((date.getTime() - newYear.getTime() -\n            (date.getTimezoneOffset() - newYear.getTimezoneOffset()) * 60000) / 86400000) + 1;\n        if (day < 4) {\n            weeknum = Math.floor((daynum + day - 1) / 7) + 1;\n            if (weeknum > 52) {\n                const nYear = new Date(this.getFullYear() + 1, 0, 1);\n                let nday = nYear.getDay();\n                nday = nday >= 0 ? nday : nday + 7;\n                weeknum = nday < 4 ? 1 : 53;\n            }\n        }\n        else {\n            weeknum = Math.floor((daynum + day - 1) / 7);\n        }\n        return weeknum;\n    }\n    IntlBase.getWeekOfYear = getWeekOfYear;\n})(IntlBase || (IntlBase = {}));\n\nconst headerRegex = /^(.*?):[ \\t]*([^\\r\\n]*)$/gm;\nconst defaultType = 'GET';\n/**\n * Ajax class provides ability to make asynchronous HTTP request to the server\n * ```typescript\n *   var ajax = new Ajax(\"index.html\", \"GET\", true);\n *   ajax.send().then(\n *               function (value) {\n *                   console.log(value);\n *               },\n *               function (reason) {\n *                   console.log(reason);\n *               });\n * ```\n */\nclass Ajax {\n    /**\n     * Constructor for Ajax class\n     *\n     * @param  {string|Object} options ?\n     * @param  {string} type ?\n     * @param  {boolean} async ?\n     * @returns defaultType any\n     */\n    constructor(options, type, async, contentType) {\n        /**\n         * A boolean value indicating whether the request should be sent asynchronous or not.\n         *\n         * @default true\n         */\n        this.mode = true;\n        /**\n         * A boolean value indicating whether to ignore the promise reject.\n         *\n         * @private\n         * @default true\n         */\n        this.emitError = true;\n        this.options = {};\n        if (typeof options === 'string') {\n            this.url = options;\n            this.type = type ? type.toUpperCase() : defaultType;\n            this.mode = !isNullOrUndefined(async) ? async : true;\n        }\n        else if (typeof options === 'object') {\n            this.options = options;\n            merge(this, this.options);\n        }\n        this.type = this.type ? this.type.toUpperCase() : defaultType;\n        this.contentType = (this.contentType !== undefined) ? this.contentType : contentType;\n    }\n    /**\n     *\n     * Send the request to server.\n     *\n     * @param {any} data - To send the user data\n     * @return {Promise} ?\n     */\n    send(data) {\n        this.data = isNullOrUndefined(data) ? this.data : data;\n        const eventArgs = {\n            cancel: false,\n            httpRequest: null\n        };\n        const promise = new Promise((resolve, reject) => {\n            this.httpRequest = new XMLHttpRequest();\n            this.httpRequest.onreadystatechange = () => { this.stateChange(resolve, reject); };\n            if (!isNullOrUndefined(this.onLoad)) {\n                this.httpRequest.onload = this.onLoad;\n            }\n            if (!isNullOrUndefined(this.onProgress)) {\n                this.httpRequest.onprogress = this.onProgress;\n            }\n            /* istanbul ignore next */\n            if (!isNullOrUndefined(this.onAbort)) {\n                this.httpRequest.onabort = this.onAbort;\n            }\n            /* istanbul ignore next */\n            if (!isNullOrUndefined(this.onError)) {\n                this.httpRequest.onerror = this.onError;\n            }\n            //** Upload Events **/\n            /* istanbul ignore next */\n            if (!isNullOrUndefined(this.onUploadProgress)) {\n                this.httpRequest.upload.onprogress = this.onUploadProgress;\n            }\n            this.httpRequest.open(this.type, this.url, this.mode);\n            // Set default headers\n            if (!isNullOrUndefined(this.data) && this.contentType !== null) {\n                this.httpRequest.setRequestHeader('Content-Type', this.contentType || 'application/json; charset=utf-8');\n            }\n            if (this.beforeSend) {\n                eventArgs.httpRequest = this.httpRequest;\n                this.beforeSend(eventArgs);\n            }\n            if (!eventArgs.cancel) {\n                this.httpRequest.send(!isNullOrUndefined(this.data) ? this.data : null);\n            }\n        });\n        return promise;\n    }\n    successHandler(data) {\n        if (this.onSuccess) {\n            this.onSuccess(data, this);\n        }\n        return data;\n    }\n    failureHandler(reason) {\n        if (this.onFailure) {\n            this.onFailure(this.httpRequest);\n        }\n        return reason;\n    }\n    stateChange(resolve, reject) {\n        let data = this.httpRequest.responseText;\n        if (this.dataType && this.dataType.toLowerCase() === 'json') {\n            if (data === '') {\n                data = undefined;\n            }\n            else {\n                try {\n                    data = JSON.parse(data);\n                }\n                catch (error) {\n                    // no exception handle\n                }\n            }\n        }\n        if (this.httpRequest.readyState === 4) {\n            //success range should be 200 to 299\n            if ((this.httpRequest.status >= 200 && this.httpRequest.status <= 299) || this.httpRequest.status === 304) {\n                resolve(this.successHandler(data));\n            }\n            else {\n                if (this.emitError) {\n                    reject(new Error(this.failureHandler(this.httpRequest.statusText)));\n                }\n                else {\n                    resolve();\n                }\n            }\n        }\n    }\n    /**\n     * To get the response header from XMLHttpRequest\n     *\n     * @param  {string} key Key to search in the response header\n     * @returns {string} ?\n     */\n    getResponseHeader(key) {\n        let responseHeaders;\n        let header;\n        // eslint-disable-next-line\n        responseHeaders = {};\n        let headers = headerRegex.exec(this.httpRequest.getAllResponseHeaders());\n        while (headers) {\n            responseHeaders[headers[1].toLowerCase()] = headers[2];\n            headers = headerRegex.exec(this.httpRequest.getAllResponseHeaders());\n        }\n        // eslint-disable-next-line\n        header = responseHeaders[key.toLowerCase()];\n        return isNullOrUndefined(header) ? null : header;\n    }\n}\n\nconst REGX_MOBILE = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini|mobile/i;\nconst REGX_IE = /msie|trident/i;\nconst REGX_IE11 = /Trident\\/7\\./;\nconst REGX_IOS = /(ipad|iphone|ipod touch)/i;\nconst REGX_IOS7 = /(ipad|iphone|ipod touch);.*os 7_\\d|(ipad|iphone|ipod touch);.*os 8_\\d/i;\nconst REGX_ANDROID = /android/i;\nconst REGX_WINDOWS = /trident|windows phone|edge/i;\nconst REGX_VERSION = /(version)[ /]([\\w.]+)/i;\nconst REGX_BROWSER = {\n    OPERA: /(opera|opr)(?:.*version|)[ /]([\\w.]+)/i,\n    EDGE: /(edge)(?:.*version|)[ /]([\\w.]+)/i,\n    CHROME: /(chrome|crios)[ /]([\\w.]+)/i,\n    PANTHOMEJS: /(phantomjs)[ /]([\\w.]+)/i,\n    SAFARI: /(safari)[ /]([\\w.]+)/i,\n    WEBKIT: /(webkit)[ /]([\\w.]+)/i,\n    MSIE: /(msie|trident) ([\\w.]+)/i,\n    MOZILLA: /(mozilla)(?:.*? rv:([\\w.]+)|)/i\n};\n/* istanbul ignore else  */\nif (typeof window !== 'undefined') {\n    window.browserDetails = window.browserDetails || {};\n}\n/**\n * Get configuration details for Browser\n *\n * @private\n */\nclass Browser {\n    static extractBrowserDetail() {\n        const browserInfo = { culture: {} };\n        const keys = Object.keys(REGX_BROWSER);\n        let clientInfo = [];\n        for (const key of keys) {\n            clientInfo = Browser.userAgent.match(REGX_BROWSER[key]);\n            if (clientInfo) {\n                browserInfo.name = (clientInfo[1].toLowerCase() === 'opr' ? 'opera' : clientInfo[1].toLowerCase());\n                browserInfo.name = (clientInfo[1].toLowerCase() === 'crios' ? 'chrome' : browserInfo.name);\n                browserInfo.version = clientInfo[2];\n                browserInfo.culture.name = browserInfo.culture.language = navigator.language;\n                // eslint-disable-next-line\n                if (!!Browser.userAgent.match(REGX_IE11)) {\n                    browserInfo.name = 'msie';\n                    break;\n                }\n                const version = Browser.userAgent.match(REGX_VERSION);\n                if (browserInfo.name === 'safari' && version) {\n                    browserInfo.version = version[2];\n                }\n                break;\n            }\n        }\n        return browserInfo;\n    }\n    /**\n     * To get events from the browser\n     *\n     * @param {string} event - type of event triggered.\n     * @returns {boolean}\n     */\n    static getEvent(event) {\n        // eslint-disable-next-line\n        const events = {\n            start: {\n                isPointer: 'pointerdown', isTouch: 'touchstart', isDevice: 'mousedown'\n            },\n            move: {\n                isPointer: 'pointermove', isTouch: 'touchmove', isDevice: 'mousemove'\n            },\n            end: {\n                isPointer: 'pointerup', isTouch: 'touchend', isDevice: 'mouseup'\n            },\n            cancel: {\n                isPointer: 'pointercancel', isTouch: 'touchcancel', isDevice: 'mouseleave'\n            }\n        };\n        return (Browser.isPointer ? events[event].isPointer :\n            (Browser.isTouch ? events[event].isTouch + (!Browser.isDevice ? ' ' + events[event].isDevice : '')\n                : events[event].isDevice));\n    }\n    /**\n     * To get the Touch start event from browser\n     *\n     * @returns {string}\n     */\n    static getTouchStartEvent() {\n        return Browser.getEvent('start');\n    }\n    /**\n     * To get the Touch end event from browser\n     *\n     * @returns {string}\n     */\n    static getTouchEndEvent() {\n        return Browser.getEvent('end');\n    }\n    /**\n     * To get the Touch move event from browser\n     *\n     * @returns {string}\n     */\n    static getTouchMoveEvent() {\n        return Browser.getEvent('move');\n    }\n    /**\n     * To cancel the touch event from browser\n     *\n     * @returns {string}\n     */\n    static getTouchCancelEvent() {\n        return Browser.getEvent('cancel');\n    }\n    /**\n     * To get the value based on provided key and regX\n     *\n     * @param {string} key ?\n     * @param {RegExp} regX ?\n     * @returns {Object} ?\n     */\n    static getValue(key, regX) {\n        const browserDetails = window.browserDetails;\n        if ('undefined' === typeof browserDetails[key]) {\n            return browserDetails[key] = regX.test(Browser.userAgent);\n        }\n        return browserDetails[key];\n    }\n    //Properties\n    /**\n     * Property specifies the userAgent of the browser. Default userAgent value is based on the browser.\n     * Also we can set our own userAgent.\n     *\n     * @param {string} uA ?\n     */\n    static set userAgent(uA) {\n        Browser.uA = uA;\n        window.browserDetails = {};\n    }\n    static get userAgent() {\n        return Browser.uA;\n    }\n    //Read Only Properties\n    /**\n     * Property is to get the browser information like Name, Version and Language\n     *\n     * @returns {BrowserInfo} ?\n     */\n    static get info() {\n        if (isUndefined(window.browserDetails.info)) {\n            return window.browserDetails.info = Browser.extractBrowserDetail();\n        }\n        return window.browserDetails.info;\n    }\n    /**\n     * Property is to get whether the userAgent is based IE.\n     *\n     * @returns {boolean} ?\n     */\n    static get isIE() {\n        return Browser.getValue('isIE', REGX_IE);\n    }\n    /**\n     * Property is to get whether the browser has touch support.\n     *\n     * @returns {boolean} ?\n     */\n    static get isTouch() {\n        if (isUndefined(window.browserDetails.isTouch)) {\n            return (window.browserDetails.isTouch =\n                ('ontouchstart' in window.navigator) ||\n                    (window &&\n                        window.navigator &&\n                        (window.navigator.maxTouchPoints > 0)) || ('ontouchstart' in window));\n        }\n        return window.browserDetails.isTouch;\n    }\n    /**\n     * Property is to get whether the browser has Pointer support.\n     *\n     * @returns {boolean} ?\n     */\n    static get isPointer() {\n        if (isUndefined(window.browserDetails.isPointer)) {\n            return window.browserDetails.isPointer = ('pointerEnabled' in window.navigator);\n        }\n        return window.browserDetails.isPointer;\n    }\n    /**\n     * Property is to get whether the browser has MSPointer support.\n     *\n     * @returns {boolean} ?\n     */\n    static get isMSPointer() {\n        if (isUndefined(window.browserDetails.isMSPointer)) {\n            return window.browserDetails.isMSPointer = ('msPointerEnabled' in window.navigator);\n        }\n        return window.browserDetails.isMSPointer;\n    }\n    /**\n     * Property is to get whether the userAgent is device based.\n     *\n     * @returns {boolean} ?\n     */\n    static get isDevice() {\n        return Browser.getValue('isDevice', REGX_MOBILE);\n    }\n    /**\n     * Property is to get whether the userAgent is IOS.\n     *\n     * @returns {boolean} ?\n     */\n    static get isIos() {\n        return Browser.getValue('isIos', REGX_IOS);\n    }\n    /**\n     * Property is to get whether the userAgent is Ios7.\n     *\n     * @returns {boolean} ?\n     */\n    static get isIos7() {\n        return Browser.getValue('isIos7', REGX_IOS7);\n    }\n    /**\n     * Property is to get whether the userAgent is Android.\n     *\n     * @returns {boolean} ?\n     */\n    static get isAndroid() {\n        return Browser.getValue('isAndroid', REGX_ANDROID);\n    }\n    /**\n     * Property is to identify whether application ran in web view.\n     *\n     * @returns {boolean} ?\n     */\n    static get isWebView() {\n        if (isUndefined(window.browserDetails.isWebView)) {\n            window.browserDetails.isWebView = !(isUndefined(window.cordova) && isUndefined(window.PhoneGap)\n                && isUndefined(window.phonegap) && window.forge !== 'object');\n            return window.browserDetails.isWebView;\n        }\n        return window.browserDetails.isWebView;\n    }\n    /**\n     * Property is to get whether the userAgent is Windows.\n     *\n     * @returns {boolean} ?\n     */\n    static get isWindows() {\n        return Browser.getValue('isWindows', REGX_WINDOWS);\n    }\n    /**\n     * Property is to get the touch start event. It returns event name based on browser.\n     *\n     * @returns {string} ?\n     */\n    static get touchStartEvent() {\n        if (isUndefined(window.browserDetails.touchStartEvent)) {\n            return window.browserDetails.touchStartEvent = Browser.getTouchStartEvent();\n        }\n        return window.browserDetails.touchStartEvent;\n    }\n    /**\n     * Property is to get the touch move event. It returns event name based on browser.\n     *\n     * @returns {string} ?\n     */\n    static get touchMoveEvent() {\n        if (isUndefined(window.browserDetails.touchMoveEvent)) {\n            return window.browserDetails.touchMoveEvent = Browser.getTouchMoveEvent();\n        }\n        return window.browserDetails.touchMoveEvent;\n    }\n    /**\n     * Property is to get the touch end event. It returns event name based on browser.\n     *\n     * @returns {string} ?\n     */\n    static get touchEndEvent() {\n        if (isUndefined(window.browserDetails.touchEndEvent)) {\n            return window.browserDetails.touchEndEvent = Browser.getTouchEndEvent();\n        }\n        return window.browserDetails.touchEndEvent;\n    }\n    /**\n     * Property is to cancel the touch end event.\n     *\n     * @returns {string} ?\n     */\n    static get touchCancelEvent() {\n        if (isUndefined(window.browserDetails.touchCancelEvent)) {\n            return window.browserDetails.touchCancelEvent = Browser.getTouchCancelEvent();\n        }\n        return window.browserDetails.touchCancelEvent;\n    }\n}\n/* istanbul ignore next */\nBrowser.uA = typeof navigator !== 'undefined' ? navigator.userAgent : '';\n\n/**\n * EventHandler class provides option to add, remove, clear and trigger events to a HTML DOM element\n * ```html\n * <div id=\"Eventdiv\">  </div>\n * <script>\n *   let node: HTMLElement = document.querySelector(\"#Eventdiv\");\n *   EventHandler.addEventListener(node, \"click\", function(){\n *       // click handler function code\n *   });\n *   EventHandler.addEventListener(node, \"onmouseover\", function(){\n *       // mouseover handler function code\n *   });\n *   EventHandler.removeEventListener(node, \"click\", function(){\n *       // click handler function code\n *   });\n *   eventObj.clearEvents();\n * </script>\n * ```\n */\nclass EventHandler {\n    // to get the event data based on element\n    static addOrGetEventData(element) {\n        if ('__eventList' in element) {\n            return element.__eventList.events;\n        }\n        else {\n            element.__eventList = {};\n            return element.__eventList.events = [];\n        }\n    }\n    /**\n     * Add an event to the specified DOM element.\n     *\n     * @param {any} element - Target HTML DOM element\n     * @param {string} eventName - A string that specifies the name of the event\n     * @param {Function} listener - Specifies the function to run when the event occurs\n     * @param {Object} bindTo - A object that binds 'this' variable in the event handler\n     * @param {number} intDebounce - Specifies at what interval given event listener should be triggered.\n     * @returns {Function} ?\n     */\n    static add(element, eventName, listener, bindTo, intDebounce) {\n        const eventData = EventHandler.addOrGetEventData(element);\n        let debounceListener;\n        if (intDebounce) {\n            debounceListener = debounce(listener, intDebounce);\n        }\n        else {\n            debounceListener = listener;\n        }\n        if (bindTo) {\n            debounceListener = debounceListener.bind(bindTo);\n        }\n        const event = eventName.split(' ');\n        for (let i = 0; i < event.length; i++) {\n            eventData.push({\n                name: event[i],\n                listener: listener,\n                debounce: debounceListener\n            });\n            if (Browser.isIE) {\n                element.addEventListener(event[i], debounceListener);\n            }\n            else {\n                element.addEventListener(event[i], debounceListener, { passive: false });\n            }\n        }\n        return debounceListener;\n    }\n    /**\n     * Remove an event listener that has been attached before.\n     *\n     * @param {any} element - Specifies the target html element to remove the event\n     * @param {string} eventName - A string that specifies the name of the event to remove\n     * @param {Function} listener - Specifies the function to remove\n     * @returns {void} ?\n     */\n    static remove(element, eventName, listener) {\n        const eventData = EventHandler.addOrGetEventData(element);\n        const event = eventName.split(' ');\n        for (let j = 0; j < event.length; j++) {\n            let index = -1;\n            let debounceListener;\n            if (eventData && eventData.length !== 0) {\n                eventData.some((x, i) => {\n                    return x.name === event[j] && x.listener === listener ?\n                        (index = i, debounceListener = x.debounce, true) : false;\n                });\n            }\n            if (index !== -1) {\n                eventData.splice(index, 1);\n            }\n            if (debounceListener) {\n                element.removeEventListener(event[j], debounceListener);\n            }\n        }\n    }\n    /**\n     * Clear all the event listeners that has been previously attached to the element.\n     *\n     * @param {any} element - Specifies the target html element to clear the events\n     * @returns {void} ?\n     */\n    static clearEvents(element) {\n        let eventData;\n        let copyData;\n        // eslint-disable-next-line\n        eventData = EventHandler.addOrGetEventData(element);\n        // eslint-disable-next-line\n        copyData = extend([], copyData, eventData);\n        for (let i = 0; i < copyData.length; i++) {\n            element.removeEventListener(copyData[i].name, copyData[i].debounce);\n            eventData.shift();\n        }\n    }\n    /**\n     * Trigger particular event of the element.\n     *\n     * @param {any} element - Specifies the target html element to trigger the events\n     * @param {string} eventName - Specifies the event to trigger for the specified element.\n     * Can be a custom event, or any of the standard events.\n     * @param {any} eventProp - Additional parameters to pass on to the event properties\n     * @returns {void} ?\n     */\n    static trigger(element, eventName, eventProp) {\n        const eventData = EventHandler.addOrGetEventData(element);\n        for (const event of eventData) {\n            if (event.name === eventName) {\n                event.debounce.call(this, eventProp);\n            }\n        }\n    }\n}\n\n/**\n * Functions related to dom operations.\n */\nconst SVG_REG = /^svg|^path|^g/;\n/**\n * Function to create Html element.\n *\n * @param {string} tagName - Name of the tag, id and class names.\n * @param {ElementProperties} properties - Object to set properties in the element.\n * @param {ElementProperties} properties.id - To set the id to the created element.\n * @param {ElementProperties} properties.className - To add classes to the element.\n * @param {ElementProperties} properties.innerHTML - To set the innerHTML to element.\n * @param {ElementProperties} properties.styles - To set the some custom styles to element.\n * @param {ElementProperties} properties.attrs - To set the attributes to element.\n * @returns {any} ?\n * @private\n */\nfunction createElement(tagName, properties) {\n    const element = (SVG_REG.test(tagName) ? document.createElementNS('http://www.w3.org/2000/svg', tagName) : document.createElement(tagName));\n    if (typeof (properties) === 'undefined') {\n        return element;\n    }\n    element.innerHTML = (properties.innerHTML ? properties.innerHTML : '');\n    if (properties.className !== undefined) {\n        element.className = properties.className;\n    }\n    if (properties.id !== undefined) {\n        element.id = properties.id;\n    }\n    if (properties.styles !== undefined) {\n        element.setAttribute('style', properties.styles);\n    }\n    if (properties.attrs !== undefined) {\n        attributes(element, properties.attrs);\n    }\n    return element;\n}\n/**\n * The function used to add the classes to array of elements\n *\n * @param  {Element[]|NodeList} elements - An array of elements that need to add a list of classes\n * @param  {string|string[]} classes - String or array of string that need to add an individual element as a class\n * @returns {any} .\n * @private\n */\nfunction addClass(elements, classes) {\n    const classList = getClassList(classes);\n    for (const ele of elements) {\n        for (const className of classList) {\n            if (isObject(ele)) {\n                const curClass = getValue('attributes.className', ele);\n                if (isNullOrUndefined(curClass)) {\n                    setValue('attributes.className', className, ele);\n                }\n                else if (!new RegExp('\\\\b' + className + '\\\\b', 'i').test(curClass)) {\n                    setValue('attributes.className', curClass + ' ' + className, ele);\n                }\n            }\n            else {\n                if (!ele.classList.contains(className)) {\n                    ele.classList.add(className);\n                }\n            }\n        }\n    }\n    return elements;\n}\n/**\n * The function used to add the classes to array of elements\n *\n * @param  {Element[]|NodeList} elements - An array of elements that need to remove a list of classes\n * @param  {string|string[]} classes - String or array of string that need to add an individual element as a class\n * @returns {any} .\n * @private\n */\nfunction removeClass(elements, classes) {\n    const classList = getClassList(classes);\n    for (const ele of elements) {\n        const flag = isObject(ele);\n        const canRemove = flag ? getValue('attributes.className', ele) : ele.className !== '';\n        if (canRemove) {\n            for (const className of classList) {\n                if (flag) {\n                    const classes = getValue('attributes.className', ele);\n                    const classArr = classes.split(' ');\n                    const index = classArr.indexOf(className);\n                    if (index !== -1) {\n                        classArr.splice(index, 1);\n                    }\n                    setValue('attributes.className', classArr.join(' '), ele);\n                }\n                else {\n                    ele.classList.remove(className);\n                }\n            }\n        }\n    }\n    return elements;\n}\n/**\n * The function used to get classlist.\n *\n * @param  {string | string[]} classes - An element the need to check visibility\n * @returns {string[]} ?\n * @private\n */\nfunction getClassList(classes) {\n    let classList = [];\n    if (typeof classes === 'string') {\n        classList.push(classes);\n    }\n    else {\n        classList = classes;\n    }\n    return classList;\n}\n/**\n * The function used to check element is visible or not.\n *\n * @param  {Element|Node} element - An element the need to check visibility\n * @returns {boolean} ?\n * @private\n */\nfunction isVisible(element) {\n    const ele = element;\n    return (ele.style.visibility === '' && ele.offsetWidth > 0);\n}\n/**\n * The function used to insert an array of elements into a first of the element.\n *\n * @param  {Element[]|NodeList} fromElements - An array of elements that need to prepend.\n * @param  {Element} toElement - An element that is going to prepend.\n * @param {boolean} isEval - ?\n * @returns {Element[] | NodeList} ?\n * @private\n */\nfunction prepend(fromElements, toElement, isEval) {\n    const docFrag = document.createDocumentFragment();\n    for (const ele of fromElements) {\n        docFrag.appendChild(ele);\n    }\n    toElement.insertBefore(docFrag, toElement.firstElementChild);\n    if (isEval) {\n        executeScript(toElement);\n    }\n    return fromElements;\n}\n/**\n * The function used to insert an array of elements into last of the element.\n *\n * @param  {Element[]|NodeList} fromElements - An array of elements that need to append.\n * @param  {Element} toElement - An element that is going to prepend.\n * @param {boolean} isEval - ?\n * @returns {Element[] | NodeList} ?\n * @private\n */\nfunction append(fromElements, toElement, isEval) {\n    const docFrag = document.createDocumentFragment();\n    for (const ele of fromElements) {\n        docFrag.appendChild(ele);\n    }\n    toElement.appendChild(docFrag);\n    if (isEval) {\n        executeScript(toElement);\n    }\n    return fromElements;\n}\n/**\n * The function is used to evaluate script from Ajax request\n *\n * @param {Element} ele - An element is going to evaluate the script\n * @returns {void} ?\n */\nfunction executeScript(ele) {\n    const eleArray = ele.querySelectorAll('script');\n    eleArray.forEach((element) => {\n        const script = document.createElement('script');\n        script.text = element.innerHTML;\n        document.head.appendChild(script);\n        detach(script);\n    });\n}\n/**\n * The function used to remove the element from parentnode\n *\n * @param  {Element|Node|HTMLElement} element - An element that is going to detach from the Dom\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\nfunction detach(element) {\n    const parentNode = element.parentNode;\n    if (parentNode) {\n        return parentNode.removeChild(element);\n    }\n}\n/**\n * The function used to remove the element from Dom also clear the bounded events\n *\n * @param  {Element|Node|HTMLElement} element - An element remove from the Dom\n * @returns {void} ?\n * @private\n */\nfunction remove(element) {\n    const parentNode = element.parentNode;\n    EventHandler.clearEvents(element);\n    parentNode.removeChild(element);\n}\n/**\n * The function helps to set multiple attributes to an element\n *\n * @param  {Element|Node} element - An element that need to set attributes.\n * @param  {string} attributes - JSON Object that is going to as attributes.\n * @returns {Element} ?\n * @private\n */\n// eslint-disable-next-line\nfunction attributes(element, attributes) {\n    const keys = Object.keys(attributes);\n    const ele = element;\n    for (const key of keys) {\n        if (isObject(ele)) {\n            let iKey = key;\n            if (key === 'tabindex') {\n                iKey = 'tabIndex';\n            }\n            ele.attributes[iKey] = attributes[key];\n        }\n        else {\n            ele.setAttribute(key, attributes[key]);\n        }\n    }\n    return ele;\n}\n/**\n * The function selects the element from giving context.\n *\n * @param  {string} selector - Selector string need fetch element\n * @param  {Document|Element} context - It is an optional type, That specifies a Dom context.\n * @param {boolean} needsVDOM ?\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\nfunction select(selector, context = document, needsVDOM) {\n    selector = querySelectId(selector);\n    return context.querySelector(selector);\n}\n/**\n * The function selects an array of element from the given context.\n *\n * @param  {string} selector - Selector string need fetch element\n * @param  {Document|Element} context - It is an optional type, That specifies a Dom context.\n * @param {boolean} needsVDOM ?\n * @returns {HTMLElement[]} ?\n * @private\n */\n// eslint-disable-next-line\nfunction selectAll(selector, context = document, needsVDOM) {\n    selector = querySelectId(selector);\n    const nodeList = context.querySelectorAll(selector);\n    return nodeList;\n}\n/**\n * The function selects an id of element from the given context.\n *\n * @param  {string} selector - Selector string need fetch element\n * @returns {string} ?\n * @private\n */\nfunction querySelectId(selector) {\n    if (selector.match(/#[0-9]/g)) {\n        const idList = selector.split(',');\n        for (let i = 0; i < idList.length; i++) {\n            const list = idList[i].split(' ');\n            for (let j = 0; j < list.length; j++) {\n                if (list[j].indexOf('#') > -1) {\n                    if (!list[j].match(/\\[.*\\]/)) {\n                        const splitId = list[j].split('#');\n                        if (splitId[1].match(/^\\d/)) {\n                            const setId = list[j].split('.');\n                            setId[0] = setId[0].replace(/#/, '[id=\\'') + '\\']';\n                            list[j] = setId.join('.');\n                        }\n                    }\n                }\n            }\n            idList[i] = list.join(' ');\n        }\n        return idList.join(',');\n    }\n    return selector;\n}\n/**\n * Returns single closest parent element based on class selector.\n *\n * @param  {Element} element - An element that need to find the closest element.\n * @param  {string} selector - A classSelector of closest element.\n * @returns {Element} ?\n * @private\n */\nfunction closest(element, selector) {\n    let el = element;\n    if (typeof el.closest === 'function') {\n        return el.closest(selector);\n    }\n    while (el && el.nodeType === 1) {\n        if (matches(el, selector)) {\n            return el;\n        }\n        el = el.parentNode;\n    }\n    return null;\n}\n/**\n * Returns all sibling elements of the given element.\n *\n * @param  {Element|Node} element - An element that need to get siblings.\n * @returns {Element[]} ?\n * @private\n */\nfunction siblings(element) {\n    const siblings = [];\n    const childNodes = Array.prototype.slice.call(element.parentNode.childNodes);\n    for (const curNode of childNodes) {\n        if (curNode.nodeType === Node.ELEMENT_NODE && element !== curNode) {\n            siblings.push(curNode);\n        }\n    }\n    return siblings;\n}\n/**\n * set the value if not exist. Otherwise set the existing value\n *\n * @param  {HTMLElement} element - An element to which we need to set value.\n * @param  {string} property - Property need to get or set.\n * @param  {string} value - value need to set.\n * @returns {string} ?\n * @private\n */\nfunction getAttributeOrDefault(element, property, value) {\n    let attrVal;\n    const isObj = isObject(element);\n    if (isObj) {\n        attrVal = getValue('attributes.' + property, element);\n    }\n    else {\n        attrVal = element.getAttribute(property);\n    }\n    if (isNullOrUndefined(attrVal) && value) {\n        if (!isObj) {\n            element.setAttribute(property, value.toString());\n        }\n        else {\n            element.attributes[property] = value;\n        }\n        attrVal = value;\n    }\n    return attrVal;\n}\n/**\n * Set the style attributes to Html element.\n *\n * @param {HTMLElement} element - Element which we want to set attributes\n * @param {any} attrs - Set the given attributes to element\n * @returns {void} ?\n * @private\n */\nfunction setStyleAttribute(element, attrs) {\n    if (attrs !== undefined) {\n        Object.keys(attrs).forEach((key) => {\n            // eslint-disable-next-line\n            element.style[key] = attrs[key];\n        });\n    }\n}\n/**\n * Method for add and remove classes to a dom element.\n *\n * @param {Element} element - Element for add and remove classes\n * @param {string[]} addClasses - List of classes need to be add to the element\n * @param {string[]} removeClasses - List of classes need to be remove from the element\n * @returns {void} ?\n * @private\n */\nfunction classList(element, addClasses, removeClasses) {\n    addClass([element], addClasses);\n    removeClass([element], removeClasses);\n}\n/**\n * Method to check whether the element matches the given selector.\n *\n * @param {Element} element - Element to compare with the selector.\n * @param {string} selector - String selector which element will satisfy.\n * @returns {void} ?\n * @private\n */\nfunction matches(element, selector) {\n    // eslint-disable-next-line\n    let matches = element.matches || element.msMatchesSelector || element.webkitMatchesSelector;\n    if (matches) {\n        return matches.call(element, selector);\n    }\n    else {\n        return [].indexOf.call(document.querySelectorAll(selector), element) !== -1;\n    }\n}\n/**\n * Method to get the html text from DOM.\n *\n * @param {HTMLElement} ele - Element to compare with the selector.\n * @param {string} innerHTML - String selector which element will satisfy.\n * @returns {void} ?\n * @private\n */\nfunction includeInnerHTML(ele, innerHTML) {\n    ele.innerHTML = innerHTML;\n}\n/**\n * Method to get the containsclass.\n *\n * @param {HTMLElement} ele - Element to compare with the selector.\n * @param {string} className - String selector which element will satisfy.\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\nfunction containsClass(ele, className) {\n    if (isObject(ele)) {\n        // eslint-disable-next-line\n        return new RegExp('\\\\b' + className + '\\\\b', 'i').test(ele.attributes.className);\n    }\n    else {\n        return ele.classList.contains(className);\n    }\n}\n/**\n * Method to check whether the element matches the given selector.\n *\n * @param {Object} element - Element to compare with the selector.\n * @param {boolean} deep ?\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\nfunction cloneNode(element, deep) {\n    if (isObject(element)) {\n        if (deep) {\n            return extend({}, {}, element, true);\n        }\n    }\n    else {\n        return element.cloneNode(deep);\n    }\n}\n\nconst isColEName = new RegExp(']');\n/* tslint:enable:no-any */\n/**\n * Base library module is common module for Framework modules like touch,keyboard and etc.,\n *\n * @private\n */\nclass Base {\n    /**\n     * Base constructor accept options and element\n     *\n     * @param {Object} options ?\n     * @param {string} element ?\n     */\n    constructor(options, element) {\n        this.isRendered = false;\n        this.isComplexArraySetter = false;\n        this.isServerRendered = false;\n        this.allowServerDataBinding = true;\n        this.isProtectedOnChange = true;\n        this.properties = {};\n        this.changedProperties = {};\n        this.oldProperties = {};\n        this.bulkChanges = {};\n        this.refreshing = false;\n        this.ignoreCollectionWatch = false;\n        // eslint-disable-next-line\n        this.finalUpdate = () => { };\n        this.childChangedProperties = {};\n        this.modelObserver = new Observer(this);\n        if (!isUndefined(element)) {\n            if ('string' === typeof (element)) {\n                this.element = document.querySelector(element);\n            }\n            else {\n                this.element = element;\n            }\n            if (!isNullOrUndefined(this.element)) {\n                this.isProtectedOnChange = false;\n                this.addInstance();\n            }\n        }\n        if (!isUndefined(options)) {\n            this.setProperties(options, true);\n        }\n        this.isDestroyed = false;\n    }\n    /** Property base section */\n    /**\n     * Function used to set bunch of property at a time.\n     *\n     * @private\n     * @param  {Object} prop - JSON object which holds components properties.\n     * @param  {boolean} muteOnChange ? - Specifies to true when we set properties.\n     * @returns {void} ?\n     */\n    setProperties(prop, muteOnChange) {\n        const prevDetection = this.isProtectedOnChange;\n        this.isProtectedOnChange = !!muteOnChange;\n        merge(this, prop);\n        if (muteOnChange !== true) {\n            merge(this.changedProperties, prop);\n            this.dataBind();\n        }\n        else if (isBlazor() && this.isRendered) {\n            this.serverDataBind(prop);\n        }\n        this.finalUpdate();\n        this.changedProperties = {};\n        this.oldProperties = {};\n        this.isProtectedOnChange = prevDetection;\n    }\n    /**\n     * Calls for child element data bind\n     *\n     * @param {Object} obj ?\n     * @param {Object} parent ?\n     * @returns {void} ?\n     */\n    // tslint:disable-next-line:no-any\n    static callChildDataBind(obj, parent) {\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (parent[key] instanceof Array) {\n                for (const obj of parent[key]) {\n                    if (obj.dataBind !== undefined) {\n                        obj.dataBind();\n                    }\n                }\n            }\n            else {\n                parent[key].dataBind();\n            }\n        }\n    }\n    clearChanges() {\n        this.finalUpdate();\n        this.changedProperties = {};\n        this.oldProperties = {};\n        this.childChangedProperties = {};\n    }\n    /**\n     * Bind property changes immediately to components\n     *\n     * @returns {void} ?\n     */\n    dataBind() {\n        Base.callChildDataBind(this.childChangedProperties, this);\n        if (Object.getOwnPropertyNames(this.changedProperties).length) {\n            const prevDetection = this.isProtectedOnChange;\n            const newChanges = this.changedProperties;\n            const oldChanges = this.oldProperties;\n            this.clearChanges();\n            this.isProtectedOnChange = true;\n            this.onPropertyChanged(newChanges, oldChanges);\n            this.isProtectedOnChange = prevDetection;\n        }\n    }\n    /* tslint:disable:no-any */\n    serverDataBind(newChanges) {\n        if (!isBlazor()) {\n            return;\n        }\n        newChanges = newChanges ? newChanges : {};\n        extend(this.bulkChanges, {}, newChanges, true);\n        const sfBlazor = 'sfBlazor';\n        if (this.allowServerDataBinding && window[sfBlazor].updateModel) {\n            window[sfBlazor].updateModel(this);\n            this.bulkChanges = {};\n        }\n    }\n    /* tslint:enable:no-any */\n    saveChanges(key, newValue, oldValue) {\n        if (isBlazor()) {\n            // tslint:disable-next-line:no-any\n            const newChanges = {};\n            newChanges[key] = newValue;\n            this.serverDataBind(newChanges);\n        }\n        if (this.isProtectedOnChange) {\n            return;\n        }\n        this.oldProperties[key] = oldValue;\n        this.changedProperties[key] = newValue;\n        this.finalUpdate();\n        this.finalUpdate = setImmediate(this.dataBind.bind(this));\n    }\n    /** Event Base Section */\n    /**\n     * Adds the handler to the given event listener.\n     *\n     * @param {string} eventName - A String that specifies the name of the event\n     * @param {Function} handler - Specifies the call to run when the event occurs.\n     * @returns {void} ?\n     */\n    addEventListener(eventName, handler) {\n        this.modelObserver.on(eventName, handler);\n    }\n    /**\n     * Removes the handler from the given event listener.\n     *\n     * @param {string} eventName - A String that specifies the name of the event to remove\n     * @param {Function} handler - Specifies the function to remove\n     * @returns {void} ?\n     */\n    removeEventListener(eventName, handler) {\n        this.modelObserver.off(eventName, handler);\n    }\n    /**\n     * Triggers the handlers in the specified event.\n     *\n     * @private\n     * @param {string} eventName - Specifies the event to trigger for the specified component properties.\n     * Can be a custom event, or any of the standard events.\n     * @param {Event} eventProp - Additional parameters to pass on to the event properties\n     * @param {Function} successHandler - this function will invoke after event successfully triggered\n     * @param {Function} errorHandler - this function will invoke after event if it failured to call.\n     * @returns {void} ?\n     */\n    trigger(eventName, eventProp, successHandler, errorHandler) {\n        if (this.isDestroyed !== true) {\n            const prevDetection = this.isProtectedOnChange;\n            this.isProtectedOnChange = false;\n            let data = this.modelObserver.notify(eventName, eventProp, successHandler, errorHandler);\n            if (isColEName.test(eventName)) {\n                const handler = getValue(eventName, this);\n                if (handler) {\n                    const blazor = 'Blazor';\n                    if (window[blazor]) {\n                        const promise = handler.call(this, eventProp);\n                        if (promise && typeof promise.then === 'function') {\n                            if (!successHandler) {\n                                data = promise;\n                            }\n                            else {\n                                promise.then((data) => {\n                                    if (successHandler) {\n                                        data = typeof data === 'string' && this.modelObserver.isJson(data) ?\n                                            JSON.parse(data) : data;\n                                        successHandler.call(this, data);\n                                    }\n                                }).catch((data) => {\n                                    if (errorHandler) {\n                                        data = typeof data === 'string' && this.modelObserver.isJson(data) ? JSON.parse(data) : data;\n                                        errorHandler.call(this, data);\n                                    }\n                                });\n                            }\n                        }\n                        else if (successHandler) {\n                            successHandler.call(this, eventProp);\n                        }\n                    }\n                    else {\n                        handler.call(this, eventProp);\n                        if (successHandler) {\n                            successHandler.call(this, eventProp);\n                        }\n                    }\n                }\n                else if (successHandler) {\n                    successHandler.call(this, eventProp);\n                }\n            }\n            this.isProtectedOnChange = prevDetection;\n            return data;\n        }\n    }\n    /**\n     * To maintain instance in base class\n     *\n     * @returns {void} ?\n     */\n    addInstance() {\n        // Add module class to the root element\n        const moduleClass = 'e-' + this.getModuleName().toLowerCase();\n        addClass([this.element], ['e-lib', moduleClass]);\n        if (!isNullOrUndefined(this.element.ej2_instances)) {\n            this.element.ej2_instances.push(this);\n        }\n        else {\n            setValue('ej2_instances', [this], this.element);\n        }\n    }\n    /**\n     * To remove the instance from the element\n     *\n     * @returns {void} ?\n     */\n    destroy() {\n        // eslint-disable-next-line\n        this.element.ej2_instances =\n            this.element.ej2_instances.filter((i) => { return i !== this; });\n        removeClass([this.element], ['e-' + this.getModuleName()]);\n        if (this.element.ej2_instances.length === 0) {\n            // Remove module class from the root element\n            removeClass([this.element], ['e-lib']);\n        }\n        this.clearChanges();\n        this.modelObserver.destroy();\n        this.isDestroyed = true;\n    }\n}\n/**\n * Global function to get the component instance from the rendered element.\n *\n * @param {HTMLElement} elem Specifies the HTMLElement or element id string.\n * @param {string} comp Specifies the component module name or Component.\n * @returns {any} ?\n */\n// tslint:disable-next-line:no-any\nfunction getComponent(elem, comp) {\n    let instance;\n    let i;\n    const ele = typeof elem === 'string' ? document.getElementById(elem) : elem;\n    for (i = 0; i < ele.ej2_instances.length; i++) {\n        instance = ele.ej2_instances[i];\n        if (typeof comp === 'string') {\n            const compName = instance.getModuleName();\n            if (comp === compName) {\n                return instance;\n            }\n        }\n        else {\n            // tslint:disable-next-line:no-any\n            if (instance instanceof comp) {\n                return instance;\n            }\n        }\n    }\n    return undefined;\n}\n/**\n * Function to remove the child instances.\n *\n * @param {HTMLElement} element ?\n * @return {void}\n * @private\n */\n// tslint:disable-next-line:no-any\nfunction removeChildInstance(element) {\n    // tslint:disable-next-line:no-any\n    const childEle = [].slice.call(element.getElementsByClassName('e-control'));\n    for (let i = 0; i < childEle.length; i++) {\n        const compName = childEle[i].classList[1].split('e-')[1];\n        // tslint:disable-next-line:no-any\n        const compInstance = getComponent(childEle[i], compName);\n        if (!isUndefined(compInstance)) {\n            compInstance.destroy();\n        }\n    }\n}\n\n/**\n * Returns the Class Object\n *\n * @param {ClassObject} instance - instance of ClassObject\n * @param {string} curKey - key of the current instance\n * @param {Object} defaultValue - default Value\n * @param {Object[]} type ?\n * @returns {ClassObject} ?\n */\n// eslint-disable-next-line\nfunction getObject(instance, curKey, defaultValue, type) {\n    // eslint-disable-next-line\n    if (!instance.properties.hasOwnProperty(curKey) || !(instance.properties[curKey] instanceof type)) {\n        instance.properties[curKey] = createInstance(type, [instance, curKey, defaultValue]);\n    }\n    return instance.properties[curKey];\n}\n/**\n * Returns object array\n *\n * @param {ClassObject} instance ?\n * @param {string} curKey ?\n * @param {Object[]} defaultValue ?\n * @param {Object} type ?\n * @param {boolean} isSetter ?\n * @param {boolean} isFactory ?\n * @returns {Object[]} ?\n */\n// eslint-disable-next-line\nfunction getObjectArray(instance, curKey, defaultValue, type, isSetter, isFactory) {\n    const result = [];\n    const len = defaultValue ? defaultValue.length : 0;\n    for (let i = 0; i < len; i++) {\n        let curType = type;\n        if (isFactory) {\n            curType = type(defaultValue[i], instance);\n        }\n        if (isSetter) {\n            const inst = createInstance(curType, [instance, curKey, {}, true]);\n            inst.setProperties(defaultValue[i], true);\n            result.push(inst);\n        }\n        else {\n            result.push(createInstance(curType, [instance, curKey, defaultValue[i], false]));\n        }\n    }\n    return result;\n}\n/**\n * Returns the properties of the object\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @returns {void} ?\n */\nfunction propertyGetter(defaultValue, curKey) {\n    return function () {\n        // eslint-disable-next-line\n        if (!this.properties.hasOwnProperty(curKey)) {\n            this.properties[curKey] = defaultValue;\n        }\n        return this.properties[curKey];\n    };\n}\n/**\n * Set the properties for the object\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @returns {void} ?\n */\nfunction propertySetter(defaultValue, curKey) {\n    return function (newValue) {\n        if (this.properties[curKey] !== newValue) {\n            // eslint-disable-next-line\n            let oldVal = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;\n            this.saveChanges(curKey, newValue, oldVal);\n            this.properties[curKey] = newValue;\n        }\n    };\n}\n/**\n * Returns complex objects\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n// eslint-disable-next-line\nfunction complexGetter(defaultValue, curKey, type) {\n    return function () {\n        return getObject(this, curKey, defaultValue, type);\n    };\n}\n/**\n * Sets complex objects\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexSetter(defaultValue, curKey, type) {\n    return function (newValue) {\n        getObject(this, curKey, defaultValue, type).setProperties(newValue);\n    };\n}\n/**\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {FunctionConstructor} type ?\n * @returns {void} ?\n */\n// eslint-disable-next-line\nfunction complexFactoryGetter(defaultValue, curKey, type) {\n    return function () {\n        const curType = type({});\n        // eslint-disable-next-line\n        if (this.properties.hasOwnProperty(curKey)) {\n            return this.properties[curKey];\n        }\n        else {\n            return getObject(this, curKey, defaultValue, curType);\n        }\n    };\n}\n/**\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexFactorySetter(defaultValue, curKey, type) {\n    return function (newValue) {\n        const curType = type(newValue, this);\n        getObject(this, curKey, defaultValue, curType).setProperties(newValue);\n    };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexArrayGetter(defaultValue, curKey, type) {\n    return function () {\n        // eslint-disable-next-line\n        if (!this.properties.hasOwnProperty(curKey)) {\n            const defCollection = getObjectArray(this, curKey, defaultValue, type, false);\n            this.properties[curKey] = defCollection;\n        }\n        const ignore = ((this.controlParent !== undefined && this.controlParent.ignoreCollectionWatch)\n            || this.ignoreCollectionWatch);\n        // eslint-disable-next-line\n        if (!this.properties[curKey].hasOwnProperty('push') && !ignore) {\n            ['push', 'pop'].forEach((extendFunc) => {\n                const descriptor = {\n                    value: complexArrayDefinedCallback(extendFunc, curKey, type, this.properties[curKey]).bind(this),\n                    configurable: true\n                };\n                Object.defineProperty(this.properties[curKey], extendFunc, descriptor);\n            });\n        }\n        // eslint-disable-next-line\n        if (!this.properties[curKey].hasOwnProperty('isComplexArray')) {\n            Object.defineProperty(this.properties[curKey], 'isComplexArray', { value: true });\n        }\n        return this.properties[curKey];\n    };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexArraySetter(defaultValue, curKey, type) {\n    return function (newValue) {\n        this.isComplexArraySetter = true;\n        const oldValueCollection = getObjectArray(this, curKey, defaultValue, type, false);\n        const newValCollection = getObjectArray(this, curKey, newValue, type, true);\n        this.isComplexArraySetter = false;\n        this.saveChanges(curKey, newValCollection, oldValueCollection);\n        this.properties[curKey] = newValCollection;\n    };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexArrayFactorySetter(defaultValue, curKey, type) {\n    return function (newValue) {\n        // eslint-disable-next-line\n        const oldValueCollection = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;\n        const newValCollection = getObjectArray(this, curKey, newValue, type, true, true);\n        this.saveChanges(curKey, newValCollection, oldValueCollection);\n        this.properties[curKey] = newValCollection;\n    };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {FunctionConstructor} type ?\n * @returns {void} ?\n */\nfunction complexArrayFactoryGetter(defaultValue, curKey, type) {\n    return function () {\n        const curType = type({});\n        // eslint-disable-next-line\n        if (!this.properties.hasOwnProperty(curKey)) {\n            const defCollection = getObjectArray(this, curKey, defaultValue, curType, false);\n            this.properties[curKey] = defCollection;\n        }\n        return this.properties[curKey];\n    };\n}\n/**\n *\n * @param {string} dFunc ?\n * @param {string} curKey ?\n * @param {Object} type ?\n * @param {Object} prop ?\n * @returns {Object} ?\n */\nfunction complexArrayDefinedCallback(dFunc, curKey, type, prop) {\n    /* tslint:disable no-function-expression */\n    return function (...newValue) {\n        const keyString = this.propName ? this.getParentKey() + '.' + curKey + '-' : curKey + '-';\n        switch (dFunc) {\n            case 'push':\n                for (let i = 0; i < newValue.length; i++) {\n                    Array.prototype[dFunc].apply(prop, [newValue[i]]);\n                    const model = getArrayModel(keyString + (prop.length - 1), newValue[i], !this.controlParent, dFunc);\n                    this.serverDataBind(model, newValue[i], false, dFunc);\n                }\n                break;\n            case 'pop':\n                Array.prototype[dFunc].apply(prop);\n                // eslint-disable-next-line\n                let model = getArrayModel(keyString + prop.length, null, !this.controlParent, dFunc);\n                this.serverDataBind(model, { ejsAction: 'pop' }, false, dFunc);\n                break;\n        }\n        return prop;\n    };\n}\n/**\n *\n * @param {string} keyString ?\n * @param {Object} value ?\n * @param {boolean} isControlParent ?\n * @param {string} arrayFunction ?\n * @returns {Object} ?\n */\nfunction getArrayModel(keyString, value, isControlParent, arrayFunction) {\n    let modelObject = keyString;\n    if (isControlParent) {\n        modelObject = {};\n        modelObject[keyString] = value;\n        if (value && typeof value === 'object') {\n            const action = 'ejsAction';\n            modelObject[keyString][action] = arrayFunction;\n        }\n    }\n    return modelObject;\n}\n// eslint-disable-next-line\n/**\n * Method used to create property. General syntax below.\n *\n * @param {Object} defaultValue - Specifies the default value of property.\n * @returns {PropertyDecorator} ?\n * ```\n * @Property('TypeScript')\n * propertyName: Type;\n * ```\n * @private\n */\nfunction Property(defaultValue) {\n    return (target, key) => {\n        const propertyDescriptor = {\n            set: propertySetter(defaultValue, key),\n            get: propertyGetter(defaultValue, key),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'prop', defaultValue);\n    };\n}\n/**\n * Method used to create complex property. General syntax below.\n *\n * @param  {any} defaultValue - Specifies the default value of property.\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @Complex<Type>({},Type)\n * propertyName: Type;\n * ```\n * @private\n */\nfunction Complex(defaultValue, type) {\n    return (target, key) => {\n        const propertyDescriptor = {\n            set: complexSetter(defaultValue, key, type),\n            get: complexGetter(defaultValue, key, type),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'complexProp', defaultValue, type);\n    };\n}\n/**\n * Method used to create complex Factory property. General syntax below.\n *\n * @param  {Function} type - Specifies the class factory type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @ComplexFactory(defaultType, factoryFunction)\n * propertyName: Type1 | Type2;\n * ```\n * @private\n */\nfunction ComplexFactory(type) {\n    return (target, key) => {\n        const propertyDescriptor = {\n            set: complexFactorySetter({}, key, type),\n            get: complexFactoryGetter({}, key, type),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'complexProp', {}, type);\n    };\n}\n/**\n * Method used to create complex array property. General syntax below.\n *\n * @param  {any} defaultValue - Specifies the default value of property.\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @Collection([], Type);\n * propertyName: Type;\n * ```\n * @private\n */\nfunction Collection(defaultValue, type) {\n    return (target, key) => {\n        const propertyDescriptor = {\n            set: complexArraySetter(defaultValue, key, type),\n            get: complexArrayGetter(defaultValue, key, type),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'colProp', defaultValue, type);\n    };\n}\n/**\n * Method used to create complex factory array property. General syntax below.\n *\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyCollectionInfo} ?\n * ```\n * @Collection([], Type);\n * propertyName: Type;\n * ```\n * @private\n */\nfunction CollectionFactory(type) {\n    return (target, key) => {\n        const propertyDescriptor = {\n            set: complexArrayFactorySetter([], key, type),\n            get: complexArrayFactoryGetter([], key, type),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'colProp', {}, type);\n    };\n}\n/**\n * Method used to create event property. General syntax below.\n *\n * @returns {PropertyDecorator} ?\n * ```\n * @Event(()=>{return true;})\n * ```\n * @private\n */\nfunction Event$1() {\n    return (target, key) => {\n        const eventDescriptor = {\n            set: function (newValue) {\n                const oldValue = this.properties[key];\n                if (oldValue !== newValue) {\n                    const finalContext = getParentContext(this, key);\n                    if (isUndefined(oldValue) === false) {\n                        finalContext.context.removeEventListener(finalContext.prefix, oldValue);\n                    }\n                    finalContext.context.addEventListener(finalContext.prefix, newValue);\n                    this.properties[key] = newValue;\n                }\n            },\n            get: propertyGetter(undefined, key),\n            enumerable: true,\n            configurable: true\n        };\n        Object.defineProperty(target, key, eventDescriptor);\n        addPropertyCollection(target, key, 'event');\n    };\n}\n/**\n * NotifyPropertyChanges is triggers the call back when the property has been changed.\n *\n * @param {Function} classConstructor ?\n * @returns {void} ?\n * ```\n *  @NotifyPropertyChanges\n * class DemoClass implements INotifyPropertyChanged {\n *\n *     @Property()\n *     property1: string;\n *\n *     dataBind: () => void;\n *\n *     constructor() { }\n *\n *     onPropertyChanged(newProp: any, oldProp: any) {\n *         // Called when property changed\n *     }\n * }\n * ```\n * @private\n */\n// eslint-disable-next-line\nfunction NotifyPropertyChanges(classConstructor) {\n    /** Need to code */\n}\n/**\n * Method  used to create the builderObject for the target component.\n *\n * @param {BuildInfo} target ?\n * @param {string} key ?\n * @param {string} propertyType ?\n * @param {Object} defaultValue ?\n * @param {Function} type ?\n * @returns {void} ?\n * @private\n */\nfunction addPropertyCollection(target, key, propertyType, defaultValue, type) {\n    if (isUndefined(target.propList)) {\n        target.propList = {\n            props: [],\n            complexProps: [],\n            colProps: [],\n            events: [],\n            propNames: [],\n            complexPropNames: [],\n            colPropNames: [],\n            eventNames: []\n        };\n    }\n    // eslint-disable-next-line\n    target.propList[propertyType + 's'].push({\n        propertyName: key,\n        defaultValue: defaultValue,\n        type: type\n    });\n    // eslint-disable-next-line\n    target.propList[propertyType + 'Names'].push(key);\n}\n/**\n * Returns an object containing the builder properties\n *\n * @param {Function} component ?\n * @returns {Object} ?\n * @private\n */\nfunction getBuilderProperties(component) {\n    if (isUndefined(component.prototype.builderObject)) {\n        component.prototype.builderObject = {\n            properties: {}, propCollections: [], add: function () {\n                this.isPropertyArray = true;\n                this.propCollections.push(extend({}, this.properties, {}));\n            }\n        };\n        const rex = /complex/;\n        for (const key of Object.keys(component.prototype.propList)) {\n            for (const prop of component.prototype.propList[key]) {\n                if (rex.test(key)) {\n                    component.prototype.builderObject[prop.propertyName] = function (value) {\n                        const childType = {};\n                        merge(childType, getBuilderProperties(prop.type));\n                        value(childType);\n                        let tempValue;\n                        if (!childType.isPropertyArray) {\n                            tempValue = extend({}, childType.properties, {});\n                        }\n                        else {\n                            tempValue = childType.propCollections;\n                        }\n                        this.properties[prop.propertyName] = tempValue;\n                        childType.properties = {};\n                        childType.propCollections = [];\n                        childType.isPropertyArray = false;\n                        return this;\n                    };\n                }\n                else {\n                    component.prototype.builderObject[prop.propertyName] = function (value) {\n                        this.properties[prop.propertyName] = value;\n                        return this;\n                    };\n                }\n            }\n        }\n    }\n    return component.prototype.builderObject;\n}\n/**\n * Method used to create builder for the components\n *\n * @param {any} component -specifies the target component for which builder to be created.\n * @returns {Object} ?\n * @private\n */\nfunction CreateBuilder(component) {\n    const builderFunction = function (element) {\n        this.element = element;\n        return this;\n    };\n    const instanceFunction = (element) => {\n        // eslint-disable-next-line\n        if (!builderFunction.prototype.hasOwnProperty('create')) {\n            builderFunction.prototype = getBuilderProperties(component);\n            builderFunction.prototype.create = function () {\n                const temp = extend({}, {}, this.properties);\n                this.properties = {};\n                return new component(temp, this.element);\n            };\n        }\n        return new builderFunction(element);\n    };\n    return instanceFunction;\n}\n/**\n * Returns parent options for the object\n *\n * @param {Object} context ?\n * @param {string} prefix ?\n * @returns {ParentOption} ?\n * @private\n */\nfunction getParentContext(context, prefix) {\n    // eslint-disable-next-line\n    if (context.hasOwnProperty('parentObj') === false) {\n        return { context: context, prefix: prefix };\n    }\n    else {\n        const curText = getValue('propName', context);\n        if (curText) {\n            prefix = curText + '-' + prefix;\n        }\n        return getParentContext(getValue('parentObj', context), prefix);\n    }\n}\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Animation_1;\n/**\n * The Animation framework provide options to animate the html DOM elements\n * ```typescript\n *   let animeObject = new Animation({\n *      name: 'SlideLeftIn',\n *      duration: 1000\n *   });\n *   animeObject.animate('#anime1');\n *   animeObject.animate('#anime2', { duration: 500 });\n * ```\n */\nlet Animation = Animation_1 = class Animation extends Base {\n    constructor(options) {\n        super(options, undefined);\n        /**\n         * @private\n         */\n        this.easing = {\n            ease: 'cubic-bezier(0.250, 0.100, 0.250, 1.000)',\n            linear: 'cubic-bezier(0.250, 0.250, 0.750, 0.750)',\n            easeIn: 'cubic-bezier(0.420, 0.000, 1.000, 1.000)',\n            easeOut: 'cubic-bezier(0.000, 0.000, 0.580, 1.000)',\n            easeInOut: 'cubic-bezier(0.420, 0.000, 0.580, 1.000)',\n            elasticInOut: 'cubic-bezier(0.5,-0.58,0.38,1.81)',\n            elasticIn: 'cubic-bezier(0.17,0.67,0.59,1.81)',\n            elasticOut: 'cubic-bezier(0.7,-0.75,0.99,1.01)'\n        };\n    }\n    /**\n     * Applies animation to the current element.\n     *\n     * @param {string | HTMLElement} element - Element which needs to be animated.\n     * @param {AnimationModel} options - Overriding default animation settings.\n     * @returns {void} ?\n     */\n    animate(element, options) {\n        options = !options ? {} : options;\n        const model = this.getModel(options);\n        if (typeof element === 'string') {\n            const elements = Array.prototype.slice.call(selectAll(element, document));\n            for (const element of elements) {\n                model.element = element;\n                Animation_1.delayAnimation(model);\n            }\n        }\n        else {\n            model.element = element;\n            Animation_1.delayAnimation(model);\n        }\n    }\n    /**\n     * Stop the animation effect on animated element.\n     *\n     * @param {HTMLElement} element - Element which needs to be stop the animation.\n     * @param {AnimationOptions} model - Handling the animation model at stop function.\n     * @return {void}\n     */\n    static stop(element, model) {\n        element.style.animation = '';\n        element.removeAttribute('e-animate');\n        const animationId = element.getAttribute('e-animation-id');\n        if (animationId) {\n            const frameId = parseInt(animationId, 10);\n            cancelAnimationFrame(frameId);\n            element.removeAttribute('e-animation-id');\n        }\n        if (model && model.end) {\n            model.end.call(this, model);\n        }\n    }\n    /**\n     * Set delay to animation element\n     *\n     * @param {AnimationModel} model ?\n     * @returns {void}\n     */\n    static delayAnimation(model) {\n        if (model.delay) {\n            setTimeout(() => { Animation_1.applyAnimation(model); }, model.delay);\n        }\n        else {\n            Animation_1.applyAnimation(model);\n        }\n    }\n    /**\n     * Triggers animation\n     *\n     * @param {AnimationModel} model ?\n     * @returns {void}\n     */\n    static applyAnimation(model) {\n        model.timeStamp = 0;\n        let step = 0;\n        let timerId = 0;\n        let prevTimeStamp = 0;\n        const duration = model.duration;\n        model.element.setAttribute('e-animate', 'true');\n        const startAnimation = (timeStamp) => {\n            try {\n                if (timeStamp) {\n                    // let step: number = model.timeStamp = timeStamp - startTime;\n                    /** phantomjs workaround for timestamp fix */\n                    prevTimeStamp = prevTimeStamp === 0 ? timeStamp : prevTimeStamp;\n                    model.timeStamp = (timeStamp + model.timeStamp) - prevTimeStamp;\n                    prevTimeStamp = timeStamp;\n                    /** phantomjs workaround end */\n                    // trigger animation begin event\n                    if (!step && model.begin) {\n                        model.begin.call(this, model);\n                    }\n                    step = step + 1;\n                    const avg = model.timeStamp / step;\n                    if (model.timeStamp < duration && model.timeStamp + avg < duration && model.element.getAttribute('e-animate')) {\n                        // apply animation effect to the current element\n                        model.element.style.animation = model.name + ' ' + model.duration + 'ms ' + model.timingFunction;\n                        if (model.progress) {\n                            model.progress.call(this, model);\n                        }\n                        // repeat requestAnimationFrame\n                        requestAnimationFrame(startAnimation);\n                    }\n                    else {\n                        // clear requestAnimationFrame\n                        cancelAnimationFrame(timerId);\n                        model.element.removeAttribute('e-animation-id');\n                        model.element.removeAttribute('e-animate');\n                        model.element.style.animation = '';\n                        if (model.end) {\n                            model.end.call(this, model);\n                        }\n                    }\n                }\n                else {\n                    //startTime = performance.now();\n                    // set initial requestAnimationFrame\n                    timerId = requestAnimationFrame(startAnimation);\n                    model.element.setAttribute('e-animation-id', timerId.toString());\n                }\n            }\n            catch (e) {\n                cancelAnimationFrame(timerId);\n                model.element.removeAttribute('e-animation-id');\n                if (model.fail) {\n                    model.fail.call(this, e);\n                }\n            }\n        };\n        startAnimation();\n    }\n    /**\n     * Returns Animation Model\n     *\n     * @param {AnimationModel} options ?\n     * @returns {AnimationModel} ?\n     */\n    getModel(options) {\n        return {\n            name: options.name || this.name,\n            delay: options.delay || this.delay,\n            duration: (options.duration !== undefined ? options.duration : this.duration),\n            begin: options.begin || this.begin,\n            end: options.end || this.end,\n            fail: options.fail || this.fail,\n            progress: options.progress || this.progress,\n            timingFunction: this.easing[options.timingFunction] ? this.easing[options.timingFunction] :\n                (options.timingFunction || this.easing[this.timingFunction])\n        };\n    }\n    /**\n     * @private\n     * @param {AnimationModel} newProp ?\n     * @param {AnimationModel} oldProp ?\n     * @returns {void} ?\n     */\n    // eslint-disable-next-line\n    onPropertyChanged(newProp, oldProp) {\n        // no code needed\n    }\n    /**\n     * Returns module name as animation\n     *\n     * @private\n     * @returns {void} ?\n     */\n    getModuleName() {\n        return 'animation';\n    }\n    /**\n     *\n     * @private\n     * @returns {void} ?\n     */\n    destroy() {\n        //Override base destroy;\n    }\n};\n__decorate([\n    Property('FadeIn')\n], Animation.prototype, \"name\", void 0);\n__decorate([\n    Property(400)\n], Animation.prototype, \"duration\", void 0);\n__decorate([\n    Property('ease')\n], Animation.prototype, \"timingFunction\", void 0);\n__decorate([\n    Property(0)\n], Animation.prototype, \"delay\", void 0);\n__decorate([\n    Event$1()\n], Animation.prototype, \"progress\", void 0);\n__decorate([\n    Event$1()\n], Animation.prototype, \"begin\", void 0);\n__decorate([\n    Event$1()\n], Animation.prototype, \"end\", void 0);\n__decorate([\n    Event$1()\n], Animation.prototype, \"fail\", void 0);\nAnimation = Animation_1 = __decorate([\n    NotifyPropertyChanges\n], Animation);\n/**\n * Ripple provides material theme's wave effect when an element is clicked\n * ```html\n * <div id='ripple'></div>\n * <script>\n *   rippleEffect(document.getElementById('ripple'));\n * </script>\n * ```\n *\n * @private\n * @param {HTMLElement} element - Target element\n * @param {RippleOptions} rippleOptions - Ripple options .\n * @param {Function} done .\n * @returns {void} .\n */\nfunction rippleEffect(element, rippleOptions, done) {\n    const rippleModel = getRippleModel(rippleOptions);\n    if (rippleModel.rippleFlag === false || (rippleModel.rippleFlag === undefined && !isRippleEnabled)) {\n        return Function;\n    }\n    element.setAttribute('data-ripple', 'true');\n    EventHandler.add(element, 'mousedown', rippleHandler, { parent: element, rippleOptions: rippleModel });\n    EventHandler.add(element, 'mouseup', rippleUpHandler, { parent: element, rippleOptions: rippleModel, done: done });\n    EventHandler.add(element, 'mouseleave', rippleLeaveHandler, { parent: element, rippleOptions: rippleModel });\n    if (Browser.isPointer) {\n        EventHandler.add(element, 'transitionend', rippleLeaveHandler, { parent: element, rippleOptions: rippleModel });\n    }\n    return (() => {\n        element.removeAttribute('data-ripple');\n        EventHandler.remove(element, 'mousedown', rippleHandler);\n        EventHandler.remove(element, 'mouseup', rippleUpHandler);\n        EventHandler.remove(element, 'mouseleave', rippleLeaveHandler);\n        EventHandler.remove(element, 'transitionend', rippleLeaveHandler);\n    });\n}\n/**\n * Handler for ripple model\n *\n * @param {RippleOptions} rippleOptions ?\n * @returns {RippleOptions} ?\n */\nfunction getRippleModel(rippleOptions) {\n    const rippleModel = {\n        selector: rippleOptions && rippleOptions.selector ? rippleOptions.selector : null,\n        ignore: rippleOptions && rippleOptions.ignore ? rippleOptions.ignore : null,\n        rippleFlag: rippleOptions && rippleOptions.rippleFlag,\n        isCenterRipple: rippleOptions && rippleOptions.isCenterRipple,\n        duration: rippleOptions && rippleOptions.duration ? rippleOptions.duration : 350\n    };\n    return rippleModel;\n}\n/**\n * Handler for ripple event\n *\n * @param {MouseEvent} e ?\n * @returns {void} ?\n * @private\n */\nfunction rippleHandler(e) {\n    const target = (e.target);\n    const selector = this.rippleOptions.selector;\n    const element = selector ? closest(target, selector) : target;\n    if (!element || (this.rippleOptions && closest(target, this.rippleOptions.ignore))) {\n        return;\n    }\n    const offset = element.getBoundingClientRect();\n    const offsetX = e.pageX - document.body.scrollLeft;\n    const offsetY = e.pageY - ((!document.body.scrollTop && document.documentElement) ?\n        document.documentElement.scrollTop : document.body.scrollTop);\n    const pageX = Math.max(Math.abs(offsetX - offset.left), Math.abs(offsetX - offset.right));\n    const pageY = Math.max(Math.abs(offsetY - offset.top), Math.abs(offsetY - offset.bottom));\n    const radius = Math.sqrt(pageX * pageX + pageY * pageY);\n    let diameter = radius * 2 + 'px';\n    let x = offsetX - offset.left - radius;\n    let y = offsetY - offset.top - radius;\n    if (this.rippleOptions && this.rippleOptions.isCenterRipple) {\n        x = 0;\n        y = 0;\n        diameter = '100%';\n    }\n    element.classList.add('e-ripple');\n    const duration = this.rippleOptions.duration.toString();\n    const styles = 'width: ' + diameter + ';height: ' + diameter + ';left: ' + x + 'px;top: ' + y + 'px;' +\n        'transition-duration: ' + duration + 'ms;';\n    const rippleElement = createElement('div', { className: 'e-ripple-element', styles: styles });\n    element.appendChild(rippleElement);\n    window.getComputedStyle(rippleElement).getPropertyValue('opacity');\n    rippleElement.style.transform = 'scale(1)';\n    if (element !== this.parent) {\n        EventHandler.add(element, 'mouseleave', rippleLeaveHandler, { parent: this.parent, rippleOptions: this.rippleOptions });\n    }\n}\n/**\n * Handler for ripple element mouse up event\n *\n * @param {MouseEvent} e ?\n * @returns {void} ?\n * @private\n */\nfunction rippleUpHandler(e) {\n    removeRipple(e, this);\n}\n/**\n * Handler for ripple element mouse move event\n *\n * @param {MouseEvent} e ?\n * @returns {void} ?\n * @private\n */\nfunction rippleLeaveHandler(e) {\n    removeRipple(e, this);\n}\n/**\n * Handler for removing ripple element\n *\n * @param {MouseEvent} e ?\n * @param {RippleArgs} eventArgs ?\n * @returns {void} ?\n * @private\n */\nfunction removeRipple(e, eventArgs) {\n    const duration = eventArgs.rippleOptions.duration;\n    const target = (e.target);\n    const selector = eventArgs.rippleOptions.selector;\n    const element = selector ? closest(target, selector) : target;\n    if (!element || (element && element.className.indexOf('e-ripple') === -1)) {\n        return;\n    }\n    const rippleElements = selectAll('.e-ripple-element', element);\n    const rippleElement = rippleElements[rippleElements.length - 1];\n    if (rippleElement) {\n        rippleElement.style.opacity = '0.5';\n    }\n    if (eventArgs.parent !== element) {\n        EventHandler.remove(element, 'mouseleave', rippleLeaveHandler);\n    }\n    /* tslint:disable:align */\n    setTimeout(() => {\n        if (rippleElement && rippleElement.parentNode) {\n            rippleElement.parentNode.removeChild(rippleElement);\n        }\n        if (!element.getElementsByClassName('e-ripple-element').length) {\n            element.classList.remove('e-ripple');\n        }\n        if (eventArgs.done) {\n            eventArgs.done(e);\n        }\n    }, duration);\n}\nlet isRippleEnabled = false;\n/**\n * Animation Module provides support to enable ripple effect functionality to Essential JS 2 components.\n *\n * @param {boolean} isRipple Specifies the boolean value to enable or disable ripple effect.\n * @returns {boolean} ?\n */\nfunction enableRipple(isRipple) {\n    isRippleEnabled = isRipple;\n    return isRippleEnabled;\n}\n\n/**\n * Module loading operations\n */\nconst MODULE_SUFFIX = 'Module';\nclass ModuleLoader {\n    constructor(parent) {\n        this.loadedModules = [];\n        this.parent = parent;\n    }\n    /**\n     * Inject required modules in component library\n     *\n     * @returns {void} ?\n     * @param {ModuleDeclaration[]} requiredModules - Array of modules to be required\n     * @param {Function[]} moduleList - Array of modules to be injected from sample side\n     */\n    inject(requiredModules, moduleList) {\n        const reqLength = requiredModules.length;\n        if (reqLength === 0) {\n            this.clean();\n            return;\n        }\n        if (this.loadedModules.length) {\n            this.clearUnusedModule(requiredModules);\n        }\n        for (let i = 0; i < reqLength; i++) {\n            const modl = requiredModules[i];\n            for (const module of moduleList) {\n                const modName = modl.member;\n                if (module.prototype.getModuleName() === modl.member && !this.isModuleLoaded(modName)) {\n                    const moduleObject = createInstance(module, modl.args);\n                    const memberName = this.getMemberName(modName);\n                    if (modl.isProperty) {\n                        setValue(memberName, module, this.parent);\n                    }\n                    else {\n                        setValue(memberName, moduleObject, this.parent);\n                    }\n                    const loadedModule = modl;\n                    loadedModule.member = memberName;\n                    this.loadedModules.push(loadedModule);\n                }\n            }\n        }\n    }\n    /**\n     * To remove the created object while destroying the control\n     *\n     * @returns {void}\n     */\n    clean() {\n        for (const modules of this.loadedModules) {\n            if (!modules.isProperty) {\n                getValue(modules.member, this.parent).destroy();\n            }\n        }\n        this.loadedModules = [];\n    }\n    /**\n     * Removes all unused modules\n     *\n     * @param {ModuleDeclaration[]} moduleList ?\n     * @returns {void} ?\n     */\n    clearUnusedModule(moduleList) {\n        const usedModules = moduleList.map((arg) => { return this.getMemberName(arg.member); });\n        const removableModule = this.loadedModules.filter((module) => {\n            return usedModules.indexOf(module.member) === -1;\n        });\n        for (const mod of removableModule) {\n            if (!mod.isProperty) {\n                getValue(mod.member, this.parent).destroy();\n            }\n            this.loadedModules.splice(this.loadedModules.indexOf(mod), 1);\n            deleteObject(this.parent, mod.member);\n        }\n    }\n    /**\n     * To get the name of the member.\n     *\n     * @param {string} name ?\n     * @returns {string} ?\n     */\n    getMemberName(name) {\n        return name[0].toLowerCase() + name.substring(1) + MODULE_SUFFIX;\n    }\n    /**\n     * Returns boolean based on whether the module specified is loaded or not\n     *\n     * @param {string} modName ?\n     * @returns {boolean} ?\n     */\n    isModuleLoaded(modName) {\n        for (const mod of this.loadedModules) {\n            if (mod.member === this.getMemberName(modName)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\n/**\n * To detect the changes for inner properties.\n *\n * @private\n */\nclass ChildProperty {\n    constructor(parent, propName, defaultValue, isArray) {\n        this.isComplexArraySetter = false;\n        this.properties = {};\n        this.changedProperties = {};\n        this.childChangedProperties = {};\n        this.oldProperties = {};\n        // eslint-disable-next-line\n        this.finalUpdate = () => { };\n        this.callChildDataBind = getValue('callChildDataBind', Base);\n        this.parentObj = parent;\n        this.controlParent = this.parentObj.controlParent || this.parentObj;\n        this.propName = propName;\n        this.isParentArray = isArray;\n        this.setProperties(defaultValue, true);\n    }\n    /**\n     * Updates the property changes\n     *\n     * @param {boolean} val ?\n     * @param {string} propName ?\n     * @returns {void} ?\n     */\n    updateChange(val, propName) {\n        if (val === true) {\n            this.parentObj.childChangedProperties[propName] = val;\n        }\n        else {\n            delete this.parentObj.childChangedProperties[propName];\n        }\n        if (this.parentObj.updateChange) {\n            this.parentObj.updateChange(val, this.parentObj.propName);\n        }\n    }\n    /**\n     * Updates time out duration\n     *\n     * @returns {void} ?\n     */\n    updateTimeOut() {\n        if (this.parentObj.updateTimeOut) {\n            this.parentObj.finalUpdate();\n            this.parentObj.updateTimeOut();\n        }\n        else {\n            const changeTime = setTimeout(this.parentObj.dataBind.bind(this.parentObj));\n            const clearUpdate = () => {\n                clearTimeout(changeTime);\n            };\n            this.finalUpdate = clearUpdate;\n        }\n    }\n    /**\n     * Clears changed properties\n     *\n     * @returns {void} ?\n     */\n    clearChanges() {\n        this.finalUpdate();\n        this.updateChange(false, this.propName);\n        this.oldProperties = {};\n        this.changedProperties = {};\n    }\n    /**\n     * Set property changes\n     *\n     * @param {Object} prop ?\n     * @param {boolean} muteOnChange ?\n     * @returns {void} ?\n     */\n    setProperties(prop, muteOnChange) {\n        if (muteOnChange === true) {\n            merge(this, prop);\n            this.updateChange(false, this.propName);\n            this.clearChanges();\n        }\n        else {\n            merge(this, prop);\n        }\n    }\n    /**\n     * Binds data\n     *\n     * @returns {void} ?\n     */\n    dataBind() {\n        this.callChildDataBind(this.childChangedProperties, this);\n        if (this.isParentArray) {\n            const curIndex = this.parentObj[this.propName].indexOf(this);\n            if (Object.keys(this.changedProperties).length) {\n                setValue(this.propName + '.' + curIndex, this.changedProperties, this.parentObj.changedProperties);\n                setValue(this.propName + '.' + curIndex, this.oldProperties, this.parentObj.oldProperties);\n            }\n        }\n        else {\n            this.parentObj.changedProperties[this.propName] = this.changedProperties;\n            this.parentObj.oldProperties[this.propName] = this.oldProperties;\n        }\n        this.clearChanges();\n    }\n    /**\n     * Saves changes to newer values\n     *\n     * @param {string} key ?\n     * @param {Object} newValue ?\n     * @param {Object} oldValue ?\n     * @param {boolean} restrictServerDataBind ?\n     * @returns {void} ?\n     */\n    saveChanges(key, newValue, oldValue, restrictServerDataBind) {\n        if (this.controlParent.isProtectedOnChange) {\n            return;\n        }\n        if (!restrictServerDataBind) {\n            this.serverDataBind(key, newValue, true);\n        }\n        this.oldProperties[key] = oldValue;\n        this.changedProperties[key] = newValue;\n        this.updateChange(true, this.propName);\n        this.finalUpdate();\n        this.updateTimeOut();\n    }\n    serverDataBind(key, value, isSaveChanges, action) {\n        if (isBlazor() && !this.parentObj.isComplexArraySetter) {\n            let parent;\n            const newChanges = {};\n            const parentKey = isSaveChanges ? this.getParentKey(true) + '.' + key : key;\n            /* istanbul ignore else  */\n            if (parentKey.indexOf('.') !== -1) {\n                const complexKeys = parentKey.split('.');\n                parent = newChanges;\n                for (let i = 0; i < complexKeys.length; i++) {\n                    const isFinal = i === complexKeys.length - 1;\n                    parent[complexKeys[i]] = isFinal ? value : {};\n                    parent = isFinal ? parent : parent[complexKeys[i]];\n                }\n            }\n            else {\n                newChanges[parentKey] = {};\n                parent = newChanges[parentKey];\n                newChanges[parentKey][key] = value;\n            }\n            /* istanbul ignore next */\n            if (this.isParentArray) {\n                const actionProperty = 'ejsAction';\n                parent[actionProperty] = action ? action : 'none';\n            }\n            this.controlParent.serverDataBind(newChanges);\n        }\n    }\n    getParentKey(isSaveChanges) {\n        // eslint-disable-next-line\n        let index = '';\n        let propName = this.propName;\n        /* istanbul ignore next */\n        if (this.isParentArray) {\n            index = this.parentObj[this.propName].indexOf(this);\n            let valueLength = this.parentObj[this.propName].length;\n            valueLength = isSaveChanges ? valueLength : (valueLength > 0 ? valueLength - 1 : 0);\n            index = index !== -1 ? '-' + index : '-' + valueLength;\n            propName = propName + index;\n        }\n        if (this.controlParent !== this.parentObj) {\n            propName = this.parentObj.getParentKey() + '.' + this.propName + index;\n        }\n        return propName;\n    }\n}\n\nvar __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nlet componentCount = 0;\nlet lastPageID;\nlet lastHistoryLen = 0;\nlet versionBasedStatePersistence = false;\n/**\n * To enable or disable version based statePersistence functionality for all components globally.\n *\n * @param {boolean} status - Optional argument Specifies the status value to enable or disable versionBasedStatePersistence option.\n * @returns {void}\n */\nfunction enableVersionBasedPersistence(status) {\n    versionBasedStatePersistence = status;\n}\n/**\n * Base class for all Essential JavaScript components\n */\nlet Component = class Component extends Base {\n    /**\n     * Initialize the constructor for component base\n     *\n     * @param {Object} options ?\n     * @param {string} selector ?\n     */\n    constructor(options, selector) {\n        super(options, selector);\n        this.randomId = uniqueID();\n        /**\n         * string template option for Blazor template rendering\n         *\n         * @private\n         */\n        this.isStringTemplate = false;\n        this.needsID = false;\n        this.isReactHybrid = false;\n        if (isNullOrUndefined(this.enableRtl)) {\n            this.setProperties({ 'enableRtl': rightToLeft }, true);\n        }\n        if (isNullOrUndefined(this.locale)) {\n            this.setProperties({ 'locale': defaultCulture }, true);\n        }\n        this.moduleLoader = new ModuleLoader(this);\n        this.localObserver = new Observer(this);\n        // tslint:disable-next-line:no-function-constructor-with-string-args\n        onIntlChange.on('notifyExternalChange', this.detectFunction, this, this.randomId);\n        if (!isUndefined(selector)) {\n            this.appendTo();\n        }\n    }\n    requiredModules() {\n        return [];\n    }\n    /**\n     * Destroys the sub modules while destroying the widget\n     *\n     * @returns {void} ?\n     */\n    destroy() {\n        if (this.isDestroyed) {\n            return;\n        }\n        if (this.enablePersistence) {\n            this.setPersistData();\n        }\n        this.localObserver.destroy();\n        if (this.refreshing) {\n            return;\n        }\n        removeClass([this.element], ['e-control']);\n        this.trigger('destroyed', { cancel: false });\n        super.destroy();\n        this.moduleLoader.clean();\n        onIntlChange.off('notifyExternalChange', this.detectFunction, this.randomId);\n    }\n    /**\n     * Applies all the pending property changes and render the component again.\n     *\n     * @returns {void} ?\n     */\n    refresh() {\n        this.refreshing = true;\n        this.moduleLoader.clean();\n        this.destroy();\n        this.clearChanges();\n        this.localObserver = new Observer(this);\n        this.preRender();\n        this.injectModules();\n        this.render();\n        this.refreshing = false;\n    }\n    accessMount() {\n        if (this.mount && !this.isReactHybrid) {\n            this.mount();\n        }\n    }\n    /**\n     * Returns the route element of the component\n     *\n     * @returns {HTMLElement} ?\n     */\n    getRootElement() {\n        if (this.isReactHybrid) {\n            // eslint-disable-next-line\n            return this.actualElement;\n        }\n        else {\n            return this.element;\n        }\n    }\n    /**\n     * Returns the persistence data for component\n     *\n     * @returns {any} ?\n     */\n    // eslint-disable-next-line\n    getLocalData() {\n        const eleId = this.getModuleName() + this.element.id;\n        if (versionBasedStatePersistence) {\n            return window.localStorage.getItem(eleId + this.ej2StatePersistenceVersion);\n        }\n        else {\n            return window.localStorage.getItem(eleId);\n        }\n    }\n    /**\n     * Appends the control within the given HTML element\n     *\n     * @param {string | HTMLElement} selector - Target element where control needs to be appended\n     * @returns {void} ?\n     */\n    appendTo(selector) {\n        if (!isNullOrUndefined(selector) && typeof (selector) === 'string') {\n            this.element = select(selector, document);\n        }\n        else if (!isNullOrUndefined(selector)) {\n            this.element = selector;\n        }\n        if (!isNullOrUndefined(this.element)) {\n            const moduleClass = 'e-' + this.getModuleName().toLowerCase();\n            addClass([this.element], ['e-control', moduleClass]);\n            this.isProtectedOnChange = false;\n            if (this.needsID && !this.element.id) {\n                this.element.id = this.getUniqueID(this.getModuleName());\n            }\n            if (this.enablePersistence) {\n                this.mergePersistData();\n                window.addEventListener('unload', this.setPersistData.bind(this));\n            }\n            const inst = getValue('ej2_instances', this.element);\n            if (!inst || inst.indexOf(this) === -1) {\n                super.addInstance();\n            }\n            this.preRender();\n            this.injectModules();\n            this.render();\n            if (!this.mount) {\n                this.trigger('created');\n            }\n            else {\n                this.accessMount();\n            }\n        }\n    }\n    /**\n     * It is used to process the post rendering functionalities to a component.\n     *\n     * @param {Node} wrapperElement ?\n     * @returns {void} ?\n     */\n    renderComplete(wrapperElement) {\n        if (isBlazor()) {\n            const sfBlazor = 'sfBlazor';\n            // eslint-disable-next-line\n            window[sfBlazor].renderComplete(this.element, wrapperElement);\n        }\n        this.isRendered = true;\n    }\n    /**\n     * When invoked, applies the pending property changes immediately to the component.\n     *\n     * @returns {void} ?\n     */\n    dataBind() {\n        this.injectModules();\n        super.dataBind();\n    }\n    /**\n     * Attach one or more  event handler to the current component context.\n     * It is used for internal handling event internally within the component only.\n     *\n     * @param {BoundOptions[]| string} event - It is  optional type either to  Set the collection of event list or the eventName.\n     * @param {Function} handler - optional parameter Specifies the handler to run when the event occurs\n     * @param {Object} context - optional parameter Specifies the context to be bind in the handler.\n     * @returns {void} ?\n     * @private\n     */\n    on(event, handler, context) {\n        if (typeof event === 'string') {\n            this.localObserver.on(event, handler, context);\n        }\n        else {\n            for (const arg of event) {\n                this.localObserver.on(arg.event, arg.handler, arg.context);\n            }\n        }\n    }\n    /**\n     * To remove one or more event handler that has been attached with the on() method.\n     *\n     * @param {BoundOptions[]| string} event - It is  optional type either to  Set the collection of event list or the eventName.\n     * @param {Function} handler - optional parameter Specifies the function to run when the event occurs\n     * @returns {void} ?\n     * @private\n     */\n    off(event, handler) {\n        if (typeof event === 'string') {\n            this.localObserver.off(event, handler);\n        }\n        else {\n            for (const arg of event) {\n                this.localObserver.off(arg.event, arg.handler);\n            }\n        }\n    }\n    /**\n     * To notify the handlers in the specified event.\n     *\n     * @param {string} property - Specifies the event to be notify.\n     * @param {Object} argument - Additional parameters to pass while calling the handler.\n     * @returns {void} ?\n     * @private\n     */\n    notify(property, argument) {\n        if (this.isDestroyed !== true) {\n            this.localObserver.notify(property, argument);\n        }\n    }\n    /**\n     * Get injected modules\n     *\n     * @returns {Function} ?\n     * @private\n     */\n    getInjectedModules() {\n        return this.injectedModules;\n    }\n    /**\n     * Dynamically injects the required modules to the component.\n     *\n     * @param {Function} moduleList ?\n     * @returns {void} ?\n     */\n    static Inject(...moduleList) {\n        if (!this.prototype.injectedModules) {\n            this.prototype.injectedModules = [];\n        }\n        for (let i = 0; i < moduleList.length; i++) {\n            if (this.prototype.injectedModules.indexOf(moduleList[i]) === -1) {\n                this.prototype.injectedModules.push(moduleList[i]);\n            }\n        }\n    }\n    /**\n     * This is a instance method to create an element.\n     *\n     * @param {string} tagName ?\n     * @param {ElementProperties} prop ?\n     * @param {boolean} isVDOM ?\n     * @returns {any} ?\n     * @private\n     */\n    // eslint-disable-next-line\n    createElement(tagName, prop, isVDOM) {\n        return createElement(tagName, prop);\n    }\n    /**\n     *\n     * @param {Function} handler - handler to be triggered after state Updated.\n     * @param {any} argument - Arguments to be passed to caller.\n     * @returns {void} .\n     * @private\n     */\n    // eslint-disable-next-line\n    triggerStateChange(handler, argument) {\n        if (this.isReactHybrid) {\n            // eslint-disable-next-line\n            this.setState();\n            this.currentContext = { calls: handler, args: argument };\n        }\n    }\n    // tslint: enable: no-any\n    injectModules() {\n        if (this.injectedModules && this.injectedModules.length) {\n            this.moduleLoader.inject(this.requiredModules(), this.injectedModules);\n        }\n    }\n    detectFunction(args) {\n        const prop = Object.keys(args);\n        if (prop.length) {\n            this[prop[0]] = args[prop[0]];\n        }\n    }\n    mergePersistData() {\n        let data;\n        if (versionBasedStatePersistence) {\n            data = window.localStorage.getItem(this.getModuleName() + this.element.id + this.ej2StatePersistenceVersion);\n        }\n        else {\n            data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        }\n        if (!(isNullOrUndefined(data) || (data === ''))) {\n            this.setProperties(JSON.parse(data), true);\n        }\n    }\n    setPersistData() {\n        if (!this.isDestroyed) {\n            if (versionBasedStatePersistence) {\n                window.localStorage.setItem(this.getModuleName() +\n                    this.element.id + this.ej2StatePersistenceVersion, this.getPersistData());\n            }\n            else {\n                window.localStorage.setItem(this.getModuleName() + this.element.id, this.getPersistData());\n            }\n        }\n    }\n    //tslint:disable-next-line\n    renderReactTemplates() {\n        //No Code\n    }\n    // eslint-disable-next-line\n    clearTemplate(templateName, index) {\n        //No Code\n    }\n    getUniqueID(definedName) {\n        if (this.isHistoryChanged()) {\n            componentCount = 0;\n        }\n        lastPageID = this.pageID(location.href);\n        lastHistoryLen = history.length;\n        return definedName + '_' + lastPageID + '_' + componentCount++;\n    }\n    pageID(url) {\n        let hash = 0;\n        if (url.length === 0) {\n            return hash;\n        }\n        for (let i = 0; i < url.length; i++) {\n            const char = url.charCodeAt(i);\n            hash = ((hash << 5) - hash) + char;\n            hash = hash & hash; // Convert to 32bit integer\n        }\n        return Math.abs(hash);\n    }\n    isHistoryChanged() {\n        return lastPageID !== this.pageID(location.href) || lastHistoryLen !== history.length;\n    }\n    addOnPersist(options) {\n        const persistObj = {};\n        for (const key of options) {\n            let objValue;\n            // eslint-disable-next-line\n            objValue = getValue(key, this);\n            if (!isUndefined(objValue)) {\n                setValue(key, this.getActualProperties(objValue), persistObj);\n            }\n        }\n        return JSON.stringify(persistObj, (key, value) => {\n            return this.getActualProperties(value);\n        });\n    }\n    getActualProperties(obj) {\n        if (obj instanceof ChildProperty) {\n            return getValue('properties', obj);\n        }\n        else {\n            return obj;\n        }\n    }\n    ignoreOnPersist(options) {\n        return JSON.stringify(this.iterateJsonProperties(this.properties, options));\n    }\n    iterateJsonProperties(obj, ignoreList) {\n        const newObj = {};\n        for (const key of Object.keys(obj)) {\n            if (ignoreList.indexOf(key) === -1) {\n                // eslint-disable-next-line\n                const value = obj[key];\n                if (typeof value === 'object' && !(value instanceof Array)) {\n                    const newList = ignoreList.filter((str) => {\n                        return new RegExp(key + '.').test(str);\n                    }).map((str) => {\n                        return str.replace(key + '.', '');\n                    });\n                    newObj[key] = this.iterateJsonProperties(this.getActualProperties(value), newList);\n                }\n                else {\n                    newObj[key] = value;\n                }\n            }\n        }\n        return newObj;\n    }\n};\n__decorate$1([\n    Property(false)\n], Component.prototype, \"enablePersistence\", void 0);\n__decorate$1([\n    Property()\n], Component.prototype, \"enableRtl\", void 0);\n__decorate$1([\n    Property()\n], Component.prototype, \"locale\", void 0);\nComponent = __decorate$1([\n    NotifyPropertyChanges\n], Component);\n//Function handling for page navigation detection\n/* istanbul ignore next */\n(() => {\n    if (typeof window !== 'undefined') {\n        window.addEventListener('popstate', \n        /* istanbul ignore next */\n        () => {\n            componentCount = 0;\n        });\n    }\n})();\n\nvar __decorate$2 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Draggable_1;\nconst defaultPosition = { left: 0, top: 0, bottom: 0, right: 0 };\nconst isDraggedObject = { isDragged: false };\n/**\n * Specifies the position coordinates\n */\nclass Position extends ChildProperty {\n}\n__decorate$2([\n    Property(0)\n], Position.prototype, \"left\", void 0);\n__decorate$2([\n    Property(0)\n], Position.prototype, \"top\", void 0);\n/**\n * Draggable Module provides support to enable draggable functionality in Dom Elements.\n * ```html\n * <div id='drag'>Draggable</div>\n * <script>\n * var ele = document.getElementById('drag');\n * var drag:Draggable = new Draggable(ele,{\n *     clone:false,\n *     drag: function(e) {\n *      //drag handler code.\n *      },\n *     handle:'.class'\n * });\n * </script>\n * ```\n */\nlet Draggable = Draggable_1 = class Draggable extends Base {\n    constructor(element, options) {\n        super(options, element);\n        this.dragLimit = Draggable_1.getDefaultPosition();\n        this.borderWidth = Draggable_1.getDefaultPosition();\n        this.padding = Draggable_1.getDefaultPosition();\n        this.diffX = 0;\n        this.prevLeft = 0;\n        this.prevTop = 0;\n        this.dragProcessStarted = false;\n        /* tslint:disable no-any */\n        this.tapHoldTimer = 0;\n        this.externalInitialize = false;\n        this.diffY = 0;\n        this.parentScrollX = 0;\n        this.parentScrollY = 0;\n        this.droppables = {};\n        this.bind();\n    }\n    bind() {\n        this.toggleEvents();\n        if (Browser.isIE) {\n            addClass([this.element], 'e-block-touch');\n        }\n        this.droppables[this.scope] = {};\n    }\n    static getDefaultPosition() {\n        return extend({}, defaultPosition);\n    }\n    toggleEvents(isUnWire) {\n        let ele;\n        if (!isUndefined(this.handle)) {\n            ele = select(this.handle, this.element);\n        }\n        let handler = (this.enableTapHold && Browser.isDevice && Browser.isTouch) ? this.mobileInitialize : this.initialize;\n        if (isUnWire) {\n            EventHandler.remove(ele || this.element, Browser.touchStartEvent, handler);\n        }\n        else {\n            EventHandler.add(ele || this.element, Browser.touchStartEvent, handler, this);\n        }\n    }\n    /* istanbul ignore next */\n    mobileInitialize(evt) {\n        let target = evt.currentTarget;\n        this.tapHoldTimer = setTimeout(() => {\n            this.externalInitialize = true;\n            this.removeTapholdTimer();\n            this.initialize(evt, target);\n        }, this.tapHoldThreshold);\n        EventHandler.add(document, Browser.touchMoveEvent, this.removeTapholdTimer, this);\n        EventHandler.add(document, Browser.touchEndEvent, this.removeTapholdTimer, this);\n    }\n    /* istanbul ignore next */\n    removeTapholdTimer() {\n        clearTimeout(this.tapHoldTimer);\n        EventHandler.remove(document, Browser.touchMoveEvent, this.removeTapholdTimer);\n        EventHandler.remove(document, Browser.touchEndEvent, this.removeTapholdTimer);\n    }\n    /* istanbul ignore next */\n    getScrollableParent(element, axis) {\n        let scroll = { 'vertical': 'scrollHeight', 'horizontal': 'scrollWidth' };\n        let client = { 'vertical': 'clientHeight', 'horizontal': 'clientWidth' };\n        if (isNullOrUndefined(element)) {\n            return null;\n        }\n        if (element[scroll[axis]] > element[client[axis]]) {\n            if (axis === 'vertical' ? element.scrollTop > 0 : element.scrollLeft > 0) {\n                if (axis === 'vertical') {\n                    this.parentScrollY = this.parentScrollY +\n                        (this.parentScrollY === 0 ? element.scrollTop : element.scrollTop - this.parentScrollY);\n                    this.tempScrollHeight = element.scrollHeight;\n                }\n                else {\n                    this.parentScrollX = this.parentScrollX +\n                        (this.parentScrollX === 0 ? element.scrollLeft : element.scrollLeft - this.parentScrollX);\n                    this.tempScrollWidth = element.scrollWidth;\n                }\n                if (!isNullOrUndefined(element)) {\n                    return this.getScrollableParent(element.parentNode, axis);\n                }\n                else {\n                    return element;\n                }\n            }\n            else {\n                return this.getScrollableParent(element.parentNode, axis);\n            }\n        }\n        else {\n            return this.getScrollableParent(element.parentNode, axis);\n        }\n    }\n    getScrollableValues() {\n        this.parentScrollX = 0;\n        this.parentScrollY = 0;\n        let isModalDialog = this.element.classList.contains('e-dialog') && this.element.classList.contains('e-dlg-modal');\n        let verticalScrollParent = this.getScrollableParent(this.element.parentNode, 'vertical');\n        let horizontalScrollParent = this.getScrollableParent(this.element.parentNode, 'horizontal');\n    }\n    initialize(evt, curTarget) {\n        this.currentStateTarget = evt.target;\n        if (this.isDragStarted()) {\n            return;\n        }\n        else {\n            this.isDragStarted(true);\n            this.externalInitialize = false;\n        }\n        this.target = (evt.currentTarget || curTarget);\n        this.dragProcessStarted = false;\n        if (this.abort) {\n            /* tslint:disable no-any */\n            let abortSelectors = this.abort;\n            if (typeof abortSelectors === 'string') {\n                abortSelectors = [abortSelectors];\n            }\n            for (let i = 0; i < abortSelectors.length; i++) {\n                if (!isNullOrUndefined(closest(evt.target, abortSelectors[i]))) {\n                    /* istanbul ignore next */\n                    if (this.isDragStarted()) {\n                        this.isDragStarted(true);\n                    }\n                    return;\n                }\n            }\n        }\n        if (this.preventDefault && !isUndefined(evt.changedTouches) && evt.type !== 'touchstart') {\n            evt.preventDefault();\n        }\n        this.element.setAttribute('aria-grabbed', 'true');\n        let intCoord = this.getCoordinates(evt);\n        this.initialPosition = { x: intCoord.pageX, y: intCoord.pageY };\n        if (!this.clone) {\n            let pos = this.element.getBoundingClientRect();\n            this.getScrollableValues();\n            if (evt.clientX === evt.pageX) {\n                this.parentScrollX = 0;\n            }\n            if (evt.clientY === evt.pageY) {\n                this.parentScrollY = 0;\n            }\n            this.relativeXPosition = intCoord.pageX - (pos.left + this.parentScrollX);\n            this.relativeYPosition = intCoord.pageY - (pos.top + this.parentScrollY);\n        }\n        if (this.externalInitialize) {\n            this.intDragStart(evt);\n        }\n        else {\n            EventHandler.add(document, Browser.touchMoveEvent, this.intDragStart, this);\n            EventHandler.add(document, Browser.touchEndEvent, this.intDestroy, this);\n        }\n        this.toggleEvents(true);\n        if (evt.type !== 'touchstart' && this.isPreventSelect) {\n            document.body.classList.add('e-prevent-select');\n        }\n        this.externalInitialize = false;\n        EventHandler.trigger(document.documentElement, Browser.touchStartEvent, evt);\n    }\n    intDragStart(evt) {\n        this.removeTapholdTimer();\n        let isChangeTouch = !isUndefined(evt.changedTouches);\n        if (isChangeTouch && (evt.changedTouches.length !== 1)) {\n            return;\n        }\n        if (isChangeTouch) {\n            evt.preventDefault();\n        }\n        let intCordinate = this.getCoordinates(evt);\n        let pos;\n        let styleProp = getComputedStyle(this.element);\n        this.margin = {\n            left: parseInt(styleProp.marginLeft, 10),\n            top: parseInt(styleProp.marginTop, 10),\n            right: parseInt(styleProp.marginRight, 10),\n            bottom: parseInt(styleProp.marginBottom, 10),\n        };\n        let element = this.element;\n        if (this.clone && this.dragTarget) {\n            let intClosest = closest(evt.target, this.dragTarget);\n            if (!isNullOrUndefined(intClosest)) {\n                element = intClosest;\n            }\n        }\n        /* istanbul ignore next */\n        if (this.isReplaceDragEle) {\n            element = this.currentStateCheck(evt.target, element);\n        }\n        this.offset = this.calculateParentPosition(element);\n        this.position = this.getMousePosition(evt, this.isDragScroll);\n        let x = this.initialPosition.x - intCordinate.pageX;\n        let y = this.initialPosition.y - intCordinate.pageY;\n        let distance = Math.sqrt((x * x) + (y * y));\n        if ((distance >= this.distance || this.externalInitialize)) {\n            let ele = this.getHelperElement(evt);\n            if (!ele || isNullOrUndefined(ele)) {\n                return;\n            }\n            let dragTargetElement = this.helperElement = ele;\n            this.parentClientRect = this.calculateParentPosition(dragTargetElement.offsetParent);\n            if (this.dragStart) {\n                let curTarget = this.getProperTargetElement(evt);\n                let args = {\n                    event: evt,\n                    element: element,\n                    target: curTarget,\n                    bindEvents: isBlazor() ? this.bindDragEvents.bind(this) : null,\n                    dragElement: dragTargetElement\n                };\n                this.trigger('dragStart', args);\n            }\n            if (this.dragArea) {\n                this.setDragArea();\n            }\n            else {\n                this.dragLimit = { left: 0, right: 0, bottom: 0, top: 0 };\n                this.borderWidth = { top: 0, left: 0 };\n            }\n            pos = { left: this.position.left - this.parentClientRect.left, top: this.position.top - this.parentClientRect.top };\n            if (this.clone && !this.enableTailMode) {\n                this.diffX = this.position.left - this.offset.left;\n                this.diffY = this.position.top - this.offset.top;\n            }\n            this.getScrollableValues();\n            // when drag element has margin-top\n            let styles = getComputedStyle(element);\n            let marginTop = parseFloat(styles.marginTop);\n            /* istanbul ignore next */\n            if (this.clone && marginTop !== 0) {\n                pos.top += marginTop;\n            }\n            if (this.enableScrollHandler && !this.clone) {\n                pos.top -= this.parentScrollY;\n                pos.left -= this.parentScrollX;\n            }\n            let posValue = this.getProcessedPositionValue({\n                top: (pos.top - this.diffY) + 'px',\n                left: (pos.left - this.diffX) + 'px'\n            });\n            this.dragElePosition = { top: pos.top, left: pos.left };\n            setStyleAttribute(dragTargetElement, this.getDragPosition({ position: 'absolute', left: posValue.left, top: posValue.top }));\n            EventHandler.remove(document, Browser.touchMoveEvent, this.intDragStart);\n            EventHandler.remove(document, Browser.touchEndEvent, this.intDestroy);\n            if (!isBlazor()) {\n                this.bindDragEvents(dragTargetElement);\n            }\n        }\n    }\n    bindDragEvents(dragTargetElement) {\n        if (isVisible(dragTargetElement)) {\n            EventHandler.add(document, Browser.touchMoveEvent, this.intDrag, this);\n            EventHandler.add(document, Browser.touchEndEvent, this.intDragStop, this);\n            this.setGlobalDroppables(false, this.element, dragTargetElement);\n        }\n        else {\n            this.toggleEvents();\n            document.body.classList.remove('e-prevent-select');\n        }\n    }\n    elementInViewport(el) {\n        this.top = el.offsetTop;\n        this.left = el.offsetLeft;\n        this.width = el.offsetWidth;\n        this.height = el.offsetHeight;\n        while (el.offsetParent) {\n            el = el.offsetParent;\n            this.top += el.offsetTop;\n            this.left += el.offsetLeft;\n        }\n        return (this.top >= window.pageYOffset &&\n            this.left >= window.pageXOffset &&\n            (this.top + this.height) <= (window.pageYOffset + window.innerHeight) &&\n            (this.left + this.width) <= (window.pageXOffset + window.innerWidth));\n    }\n    getProcessedPositionValue(value) {\n        if (this.queryPositionInfo) {\n            return this.queryPositionInfo(value);\n        }\n        return value;\n    }\n    calculateParentPosition(ele) {\n        if (isNullOrUndefined(ele)) {\n            return { left: 0, top: 0 };\n        }\n        let rect = ele.getBoundingClientRect();\n        let style = getComputedStyle(ele);\n        return {\n            left: (rect.left + window.pageXOffset) - parseInt(style.marginLeft, 10),\n            top: (rect.top + window.pageYOffset) - parseInt(style.marginTop, 10)\n        };\n    }\n    // tslint:disable-next-line:max-func-body-length\n    intDrag(evt) {\n        if (!isUndefined(evt.changedTouches) && (evt.changedTouches.length !== 1)) {\n            return;\n        }\n        let left;\n        let top;\n        this.position = this.getMousePosition(evt, this.isDragScroll);\n        let docHeight = this.getDocumentWidthHeight('Height');\n        if (docHeight < this.position.top) {\n            this.position.top = docHeight;\n        }\n        let docWidth = this.getDocumentWidthHeight('Width');\n        if (docWidth < this.position.left) {\n            this.position.left = docWidth;\n        }\n        if (this.drag) {\n            let curTarget = this.getProperTargetElement(evt);\n            this.trigger('drag', { event: evt, element: this.element, target: curTarget });\n        }\n        let eleObj = this.checkTargetElement(evt);\n        if (eleObj.target && eleObj.instance) {\n            /* tslint:disable no-any */\n            let flag = true;\n            if (this.hoverObject) {\n                if (this.hoverObject.instance !== eleObj.instance) {\n                    this.triggerOutFunction(evt, eleObj);\n                }\n                else {\n                    flag = false;\n                }\n            }\n            if (flag) {\n                eleObj.instance.dragData[this.scope] = this.droppables[this.scope];\n                eleObj.instance.intOver(evt, eleObj.target);\n                this.hoverObject = eleObj;\n            }\n        }\n        else if (this.hoverObject) {\n            this.triggerOutFunction(evt, eleObj);\n        }\n        let helperElement = this.droppables[this.scope].helper;\n        this.parentClientRect = this.calculateParentPosition(this.helperElement.offsetParent);\n        let tLeft = this.parentClientRect.left;\n        let tTop = this.parentClientRect.top;\n        let intCoord = this.getCoordinates(evt);\n        let pagex = intCoord.pageX;\n        let pagey = intCoord.pageY;\n        let dLeft = this.position.left - this.diffX;\n        let dTop = this.position.top - this.diffY;\n        let styles = getComputedStyle(helperElement);\n        let marginTop = parseFloat(styles.marginTop);\n        if (this.dragArea) {\n            if (this.pageX !== pagex || this.skipDistanceCheck) {\n                let helperWidth = helperElement.offsetWidth + (parseFloat(styles.marginLeft)\n                    + parseFloat(styles.marginRight));\n                if (this.dragLimit.left > dLeft && dLeft > 0) {\n                    left = this.dragLimit.left;\n                }\n                else if (this.dragLimit.right + window.pageXOffset < dLeft + helperWidth && dLeft > 0) {\n                    left = dLeft - (dLeft - this.dragLimit.right) + window.pageXOffset - helperWidth;\n                }\n                else {\n                    left = dLeft < 0 ? this.dragLimit.left : dLeft;\n                }\n            }\n            if (this.pageY !== pagey || this.skipDistanceCheck) {\n                let helperHeight = helperElement.offsetHeight + (parseFloat(styles.marginTop)\n                    + parseFloat(styles.marginBottom));\n                if (this.dragLimit.top > dTop && dTop > 0) {\n                    top = this.dragLimit.top;\n                }\n                else if (this.dragLimit.bottom + window.pageYOffset < dTop + helperHeight && dTop > 0) {\n                    top = dTop - (dTop - this.dragLimit.bottom) + window.pageYOffset - helperHeight;\n                }\n                else {\n                    top = dTop < 0 ? this.dragLimit.top : dTop;\n                }\n            }\n        }\n        else {\n            left = dLeft;\n            top = dTop;\n        }\n        let iTop = tTop + this.borderWidth.top;\n        let iLeft = tLeft + this.borderWidth.left;\n        if (this.dragProcessStarted) {\n            if (isNullOrUndefined(top)) {\n                top = this.prevTop;\n            }\n            if (isNullOrUndefined(left)) {\n                left = this.prevLeft;\n            }\n        }\n        let draEleTop;\n        let draEleLeft;\n        if (this.dragArea) {\n            this.dragLimit.top = this.clone ? this.dragLimit.top : 0;\n            draEleTop = (top - iTop) < 0 ? this.dragLimit.top : (top - iTop);\n            draEleLeft = (left - iLeft) < 0 ? this.dragElePosition.left : (left - iLeft);\n            // when drag-element has margin-top\n            /* istanbul ignore next */\n            if (marginTop > 0) {\n                if (this.clone) {\n                    draEleTop += this.element.offsetTop;\n                    if (dTop < 0) {\n                        if ((this.element.offsetTop + dTop) >= 0) {\n                            draEleTop = this.element.offsetTop + dTop;\n                        }\n                        else {\n                            draEleTop -= this.element.offsetTop;\n                        }\n                    }\n                    draEleTop = (this.dragLimit.bottom < draEleTop) ? this.dragLimit.bottom : draEleTop;\n                }\n                if ((top - iTop) < 0) {\n                    if (dTop + marginTop + (helperElement.offsetHeight - iTop) >= 0) {\n                        let tempDraEleTop = this.dragLimit.top + dTop - iTop;\n                        if ((tempDraEleTop + marginTop + iTop) < 0) {\n                            draEleTop -= marginTop + iTop;\n                        }\n                        else {\n                            draEleTop = tempDraEleTop;\n                        }\n                    }\n                    else {\n                        draEleTop -= marginTop + iTop;\n                    }\n                }\n            }\n        }\n        else {\n            draEleTop = top - iTop;\n            draEleLeft = left - iLeft;\n        }\n        if (this.enableScrollHandler && !this.clone) {\n            draEleTop -= this.parentScrollY;\n            draEleLeft -= this.parentScrollX;\n        }\n        let dragValue = this.getProcessedPositionValue({ top: draEleTop + 'px', left: draEleLeft + 'px' });\n        setStyleAttribute(helperElement, this.getDragPosition(dragValue));\n        if (!this.elementInViewport(helperElement) && this.enableAutoScroll) {\n            this.helperElement.scrollIntoView();\n        }\n        this.dragProcessStarted = true;\n        this.prevLeft = left;\n        this.prevTop = top;\n        this.position.left = left;\n        this.position.top = top;\n        this.pageX = pagex;\n        this.pageY = pagey;\n    }\n    triggerOutFunction(evt, eleObj) {\n        this.hoverObject.instance.intOut(evt, eleObj.target);\n        this.hoverObject.instance.dragData[this.scope] = null;\n        this.hoverObject = null;\n    }\n    getDragPosition(dragValue) {\n        let temp = extend({}, dragValue);\n        if (this.axis) {\n            if (this.axis === 'x') {\n                delete temp.top;\n            }\n            else if (this.axis === 'y') {\n                delete temp.left;\n            }\n        }\n        return temp;\n    }\n    getDocumentWidthHeight(str) {\n        let docBody = document.body;\n        let docEle = document.documentElement;\n        let returnValue = Math.max(docBody['scroll' + str], docEle['scroll' + str], docBody['offset' + str], docEle['offset' + str], docEle['client' + str]);\n        return returnValue;\n    }\n    intDragStop(evt) {\n        this.dragProcessStarted = false;\n        if (!isUndefined(evt.changedTouches) && (evt.changedTouches.length !== 1)) {\n            return;\n        }\n        let type = ['touchend', 'pointerup', 'mouseup'];\n        if (type.indexOf(evt.type) !== -1) {\n            if (this.dragStop) {\n                let curTarget = this.getProperTargetElement(evt);\n                this.trigger('dragStop', { event: evt, element: this.element, target: curTarget, helper: this.helperElement });\n            }\n            this.intDestroy(evt);\n        }\n        else {\n            this.element.setAttribute('aria-grabbed', 'false');\n        }\n        let eleObj = this.checkTargetElement(evt);\n        if (eleObj.target && eleObj.instance) {\n            eleObj.instance.dragStopCalled = true;\n            eleObj.instance.dragData[this.scope] = this.droppables[this.scope];\n            eleObj.instance.intDrop(evt, eleObj.target);\n        }\n        this.setGlobalDroppables(true);\n        document.body.classList.remove('e-prevent-select');\n    }\n    /**\n     * @private\n     */\n    intDestroy(evt) {\n        this.dragProcessStarted = false;\n        this.toggleEvents();\n        document.body.classList.remove('e-prevent-select');\n        this.element.setAttribute('aria-grabbed', 'false');\n        EventHandler.remove(document, Browser.touchMoveEvent, this.intDragStart);\n        EventHandler.remove(document, Browser.touchEndEvent, this.intDragStop);\n        EventHandler.remove(document, Browser.touchEndEvent, this.intDestroy);\n        EventHandler.remove(document, Browser.touchMoveEvent, this.intDrag);\n        if (this.isDragStarted()) {\n            this.isDragStarted(true);\n        }\n    }\n    // triggers when property changed\n    onPropertyChanged(newProp, oldProp) {\n        //No Code to handle\n    }\n    getModuleName() {\n        return 'draggable';\n    }\n    isDragStarted(change) {\n        if (change) {\n            isDraggedObject.isDragged = !isDraggedObject.isDragged;\n        }\n        return isDraggedObject.isDragged;\n    }\n    setDragArea() {\n        let eleWidthBound;\n        let eleHeightBound;\n        let top = 0;\n        let left = 0;\n        let ele;\n        let type = typeof this.dragArea;\n        if (type === 'string') {\n            ele = select(this.dragArea);\n        }\n        else {\n            ele = this.dragArea;\n        }\n        if (ele) {\n            let elementArea = ele.getBoundingClientRect();\n            eleWidthBound = ele.scrollWidth ? ele.scrollWidth : elementArea.right - elementArea.left;\n            eleHeightBound = ele.scrollHeight ? ele.scrollHeight : elementArea.bottom - elementArea.top;\n            let keys = ['Top', 'Left', 'Bottom', 'Right'];\n            let styles = getComputedStyle(ele);\n            for (let i = 0; i < keys.length; i++) {\n                let key = keys[i];\n                let tborder = styles['border' + key + 'Width'];\n                let tpadding = styles['padding' + key];\n                let lowerKey = key.toLowerCase();\n                this.borderWidth[lowerKey] = isNaN(parseFloat(tborder)) ? 0 : parseFloat(tborder);\n                this.padding[lowerKey] = isNaN(parseFloat(tpadding)) ? 0 : parseFloat(tpadding);\n            }\n            top = elementArea.top;\n            left = elementArea.left;\n            this.dragLimit.left = left + this.borderWidth.left + this.padding.left;\n            this.dragLimit.top = ele.offsetTop + this.borderWidth.top + this.padding.top;\n            this.dragLimit.right = left + eleWidthBound - (this.borderWidth.right + this.padding.right);\n            this.dragLimit.bottom = top + eleHeightBound - (this.borderWidth.bottom + this.padding.bottom);\n        }\n    }\n    getProperTargetElement(evt) {\n        let intCoord = this.getCoordinates(evt);\n        let ele;\n        let prevStyle = this.helperElement.style.pointerEvents || '';\n        if (compareElementParent(evt.target, this.helperElement) || evt.type.indexOf('touch') !== -1) {\n            this.helperElement.style.pointerEvents = 'none';\n            ele = document.elementFromPoint(intCoord.clientX, intCoord.clientY);\n            this.helperElement.style.pointerEvents = prevStyle;\n        }\n        else {\n            ele = evt.target;\n        }\n        return ele;\n    }\n    /* istanbul ignore next */\n    currentStateCheck(ele, oldEle) {\n        let elem;\n        if (!isNullOrUndefined(this.currentStateTarget) && this.currentStateTarget !== ele) {\n            elem = this.currentStateTarget;\n        }\n        else {\n            elem = !isNullOrUndefined(oldEle) ? oldEle : ele;\n        }\n        return elem;\n    }\n    getMousePosition(evt, isdragscroll) {\n        /* tslint:disable no-any */\n        let dragEle = evt.srcElement !== undefined ? evt.srcElement : evt.target;\n        let intCoord = this.getCoordinates(evt);\n        let pageX;\n        let pageY;\n        let isOffsetParent = isNullOrUndefined(dragEle.offsetParent);\n        /* istanbul ignore next */\n        if (isdragscroll) {\n            pageX = this.clone ? intCoord.pageX :\n                (intCoord.pageX + (isOffsetParent ? 0 : dragEle.offsetParent.scrollLeft)) - this.relativeXPosition;\n            pageY = this.clone ? intCoord.pageY :\n                (intCoord.pageY + (isOffsetParent ? 0 : dragEle.offsetParent.scrollTop)) - this.relativeYPosition;\n        }\n        else {\n            pageX = this.clone ? intCoord.pageX : (intCoord.pageX + window.pageXOffset) - this.relativeXPosition;\n            pageY = this.clone ? intCoord.pageY : (intCoord.pageY + window.pageYOffset) - this.relativeYPosition;\n        }\n        if (!this.clone && this.dragArea && !isdragscroll) {\n            this.getScrollableValues();\n            pageY -= this.tempScrollHeight ? this.parentScrollY : 0;\n            pageX -= this.tempScrollWidth ? this.parentScrollX : 0;\n        }\n        return {\n            left: pageX - (this.margin.left + this.cursorAt.left),\n            top: pageY - (this.margin.top + this.cursorAt.top)\n        };\n    }\n    getCoordinates(evt) {\n        if (evt.type.indexOf('touch') > -1) {\n            return evt.changedTouches[0];\n        }\n        return evt;\n    }\n    getHelperElement(evt) {\n        let element;\n        if (this.clone) {\n            if (this.helper) {\n                element = this.helper({ sender: evt, element: this.target });\n            }\n            else {\n                element = createElement('div', { className: 'e-drag-helper e-block-touch', innerHTML: 'Draggable' });\n                document.body.appendChild(element);\n            }\n        }\n        else {\n            element = this.element;\n        }\n        return element;\n    }\n    setGlobalDroppables(reset, drag, helper) {\n        this.droppables[this.scope] = reset ? null : {\n            draggable: drag,\n            helper: helper,\n            draggedElement: this.element\n        };\n    }\n    checkTargetElement(evt) {\n        let target = this.getProperTargetElement(evt);\n        let dropIns = this.getDropInstance(target);\n        if (!dropIns && target && !isNullOrUndefined(target.parentNode)) {\n            let parent = closest(target.parentNode, '.e-droppable') || target.parentElement;\n            if (parent) {\n                dropIns = this.getDropInstance(parent);\n            }\n        }\n        return { target: target, instance: dropIns };\n    }\n    getDropInstance(ele) {\n        let name = 'getModuleName';\n        let drop;\n        let eleInst = ele && ele.ej2_instances;\n        if (eleInst) {\n            for (let inst of eleInst) {\n                if (inst[name]() === 'droppable') {\n                    drop = inst;\n                    break;\n                }\n            }\n        }\n        return drop;\n    }\n    destroy() {\n        this.toggleEvents(true);\n        super.destroy();\n    }\n};\n__decorate$2([\n    Complex({}, Position)\n], Draggable.prototype, \"cursorAt\", void 0);\n__decorate$2([\n    Property(true)\n], Draggable.prototype, \"clone\", void 0);\n__decorate$2([\n    Property()\n], Draggable.prototype, \"dragArea\", void 0);\n__decorate$2([\n    Property()\n], Draggable.prototype, \"isDragScroll\", void 0);\n__decorate$2([\n    Property()\n], Draggable.prototype, \"isReplaceDragEle\", void 0);\n__decorate$2([\n    Property(true)\n], Draggable.prototype, \"isPreventSelect\", void 0);\n__decorate$2([\n    Event$1()\n], Draggable.prototype, \"drag\", void 0);\n__decorate$2([\n    Event$1()\n], Draggable.prototype, \"dragStart\", void 0);\n__decorate$2([\n    Event$1()\n], Draggable.prototype, \"dragStop\", void 0);\n__decorate$2([\n    Property(1)\n], Draggable.prototype, \"distance\", void 0);\n__decorate$2([\n    Property()\n], Draggable.prototype, \"handle\", void 0);\n__decorate$2([\n    Property()\n], Draggable.prototype, \"abort\", void 0);\n__decorate$2([\n    Property()\n], Draggable.prototype, \"helper\", void 0);\n__decorate$2([\n    Property('default')\n], Draggable.prototype, \"scope\", void 0);\n__decorate$2([\n    Property('')\n], Draggable.prototype, \"dragTarget\", void 0);\n__decorate$2([\n    Property()\n], Draggable.prototype, \"axis\", void 0);\n__decorate$2([\n    Property()\n], Draggable.prototype, \"queryPositionInfo\", void 0);\n__decorate$2([\n    Property(false)\n], Draggable.prototype, \"enableTailMode\", void 0);\n__decorate$2([\n    Property(false)\n], Draggable.prototype, \"skipDistanceCheck\", void 0);\n__decorate$2([\n    Property(true)\n], Draggable.prototype, \"preventDefault\", void 0);\n__decorate$2([\n    Property(false)\n], Draggable.prototype, \"enableAutoScroll\", void 0);\n__decorate$2([\n    Property(false)\n], Draggable.prototype, \"enableTapHold\", void 0);\n__decorate$2([\n    Property(750)\n], Draggable.prototype, \"tapHoldThreshold\", void 0);\n__decorate$2([\n    Property(false)\n], Draggable.prototype, \"enableScrollHandler\", void 0);\nDraggable = Draggable_1 = __decorate$2([\n    NotifyPropertyChanges\n], Draggable);\n\nvar __decorate$3 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Droppable Module provides support to enable droppable functionality in Dom Elements.\n * ```html\n * <div id='drop'>Droppable</div>\n * <script>\n * let ele:HTMLElement = document.getElementById('drop');\n * var drag:Droppable = new Droppable(ele,{\n *     accept:'.drop',\n *     drop: function(e) {\n *      //drop handler code.\n *     }\n * });\n * </script>\n * ```\n */\nlet Droppable = class Droppable extends Base {\n    constructor(element, options) {\n        super(options, element);\n        this.mouseOver = false;\n        this.dragData = {};\n        this.dragStopCalled = false;\n        this.bind();\n    }\n    bind() {\n        this.wireEvents();\n    }\n    wireEvents() {\n        EventHandler.add(this.element, Browser.touchEndEvent, this.intDrop, this);\n    }\n    // triggers when property changed\n    // eslint-disable-next-line\n    onPropertyChanged(newProp, oldProp) {\n        //No Code to handle\n    }\n    getModuleName() {\n        return 'droppable';\n    }\n    intOver(event, element) {\n        if (!this.mouseOver) {\n            const drag = this.dragData[this.scope];\n            this.trigger('over', { event: event, target: element, dragData: drag });\n            this.mouseOver = true;\n        }\n    }\n    intOut(event, element) {\n        if (this.mouseOver) {\n            this.trigger('out', { evt: event, target: element });\n            this.mouseOver = false;\n        }\n    }\n    intDrop(evt, element) {\n        if (!this.dragStopCalled) {\n            return;\n        }\n        else {\n            this.dragStopCalled = false;\n        }\n        let accept = true;\n        const drag = this.dragData[this.scope];\n        const isDrag = drag ? (drag.helper && isVisible(drag.helper)) : false;\n        let area;\n        if (isDrag) {\n            area = this.isDropArea(evt, drag.helper, element);\n            if (this.accept) {\n                accept = matches(drag.helper, this.accept);\n            }\n        }\n        if (isDrag && this.drop && area.canDrop && accept) {\n            this.trigger('drop', { event: evt, target: area.target, droppedElement: drag.helper, dragData: drag });\n        }\n        this.mouseOver = false;\n    }\n    isDropArea(evt, helper, element) {\n        const area = { canDrop: true, target: element || evt.target };\n        const isTouch = evt.type === 'touchend';\n        if (isTouch || area.target === helper) {\n            helper.style.display = 'none';\n            const coord = isTouch ? (evt.changedTouches[0]) : evt;\n            const ele = document.elementFromPoint(coord.clientX, coord.clientY);\n            area.canDrop = false;\n            area.canDrop = compareElementParent(ele, this.element);\n            if (area.canDrop) {\n                area.target = ele;\n            }\n            helper.style.display = '';\n        }\n        return area;\n    }\n    destroy() {\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.intDrop);\n        super.destroy();\n    }\n};\n__decorate$3([\n    Property()\n], Droppable.prototype, \"accept\", void 0);\n__decorate$3([\n    Property('default')\n], Droppable.prototype, \"scope\", void 0);\n__decorate$3([\n    Event$1()\n], Droppable.prototype, \"drop\", void 0);\n__decorate$3([\n    Event$1()\n], Droppable.prototype, \"over\", void 0);\n__decorate$3([\n    Event$1()\n], Droppable.prototype, \"out\", void 0);\nDroppable = __decorate$3([\n    NotifyPropertyChanges\n], Droppable);\n\nvar __decorate$4 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar KeyboardEvents_1;\nconst keyCode = {\n    'backspace': 8,\n    'tab': 9,\n    'enter': 13,\n    'shift': 16,\n    'control': 17,\n    'alt': 18,\n    'pause': 19,\n    'capslock': 20,\n    'space': 32,\n    'escape': 27,\n    'pageup': 33,\n    'pagedown': 34,\n    'end': 35,\n    'home': 36,\n    'leftarrow': 37,\n    'uparrow': 38,\n    'rightarrow': 39,\n    'downarrow': 40,\n    'insert': 45,\n    'delete': 46,\n    'f1': 112,\n    'f2': 113,\n    'f3': 114,\n    'f4': 115,\n    'f5': 116,\n    'f6': 117,\n    'f7': 118,\n    'f8': 119,\n    'f9': 120,\n    'f10': 121,\n    'f11': 122,\n    'f12': 123,\n    'semicolon': 186,\n    'plus': 187,\n    'comma': 188,\n    'minus': 189,\n    'dot': 190,\n    'forwardslash': 191,\n    'graveaccent': 192,\n    'openbracket': 219,\n    'backslash': 220,\n    'closebracket': 221,\n    'singlequote': 222\n};\n/**\n * KeyboardEvents class enables you to bind key action desired key combinations for ex., Ctrl+A, Delete, Alt+Space etc.\n * ```html\n * <div id='testEle'>  </div>;\n * <script>\n *   let node: HTMLElement = document.querySelector('#testEle');\n *   let kbInstance = new KeyboardEvents({\n *       element: node,\n *       keyConfigs:{ selectAll : 'ctrl+a' },\n *       keyAction: function (e:KeyboardEvent, action:string) {\n *           // handler function code\n *       }\n *   });\n * </script>\n * ```\n */\nlet KeyboardEvents = KeyboardEvents_1 = class KeyboardEvents extends Base {\n    /**\n     * Initializes the KeyboardEvents\n     *\n     * @param {HTMLElement} element ?\n     * @param {KeyboardEventsModel} options ?\n     */\n    constructor(element, options) {\n        super(options, element);\n        /**\n         * To handle a key press event returns null\n         *\n         * @param {KeyboardEventArgs} e ?\n         * @returns {void} ?\n         */\n        this.keyPressHandler = (e) => {\n            const isAltKey = e.altKey;\n            const isCtrlKey = e.ctrlKey;\n            const isShiftKey = e.shiftKey;\n            const curkeyCode = e.which;\n            const keys = Object.keys(this.keyConfigs);\n            for (const key of keys) {\n                const configCollection = this.keyConfigs[key].split(',');\n                for (const rconfig of configCollection) {\n                    const rKeyObj = KeyboardEvents_1.getKeyConfigData(rconfig.trim());\n                    if (isAltKey === rKeyObj.altKey && isCtrlKey === rKeyObj.ctrlKey &&\n                        isShiftKey === rKeyObj.shiftKey && curkeyCode === rKeyObj.keyCode) {\n                        e.action = key;\n                        if (this.keyAction) {\n                            this.keyAction(e);\n                        }\n                    }\n                }\n            }\n        };\n        this.bind();\n    }\n    /**\n     * Unwire bound events and destroy the instance.\n     *\n     * @returns {void} ?\n     */\n    destroy() {\n        this.unwireEvents();\n        super.destroy();\n    }\n    /**\n     * Function can be used to specify certain action if a property is changed\n     *\n     * @param {KeyboardEventsModel} newProp ?\n     * @param {KeyboardEventsModel} oldProp ?\n     * @returns {void} ?\n     * @private\n     */\n    // eslint-disable-next-line\n    onPropertyChanged(newProp, oldProp) {\n        // No code are needed\n    }\n    bind() {\n        this.wireEvents();\n    }\n    /**\n     * To get the module name, returns 'keyboard'.\n     *\n     * @returns {string} ?\n     * @private\n     */\n    getModuleName() {\n        return 'keyboard';\n    }\n    /**\n     * Wiring event handlers to events\n     *\n     * @returns {void} ?\n     * @private\n     */\n    wireEvents() {\n        this.element.addEventListener(this.eventName, this.keyPressHandler);\n    }\n    /**\n     * Unwiring event handlers to events\n     *\n     * @returns {void} ?\n     * @private\n     */\n    unwireEvents() {\n        this.element.removeEventListener(this.eventName, this.keyPressHandler);\n    }\n    /**\n     * To get the key configuration data\n     *\n     * @param {string} config - configuration data\n     * @returns {KeyData} ?\n     */\n    static getKeyConfigData(config) {\n        if (config in this.configCache) {\n            return this.configCache[config];\n        }\n        const keys = config.toLowerCase().split('+');\n        const keyData = {\n            altKey: (keys.indexOf('alt') !== -1 ? true : false),\n            ctrlKey: (keys.indexOf('ctrl') !== -1 ? true : false),\n            shiftKey: (keys.indexOf('shift') !== -1 ? true : false),\n            keyCode: null\n        };\n        if (keys[keys.length - 1].length > 1 && !!Number(keys[keys.length - 1])) {\n            keyData.keyCode = Number(keys[keys.length - 1]);\n        }\n        else {\n            keyData.keyCode = KeyboardEvents_1.getKeyCode(keys[keys.length - 1]);\n        }\n        KeyboardEvents_1.configCache[config] = keyData;\n        return keyData;\n    }\n    // Return the keycode value as string\n    static getKeyCode(keyVal) {\n        return keyCode[keyVal] || keyVal.toUpperCase().charCodeAt(0);\n    }\n};\nKeyboardEvents.configCache = {};\n__decorate$4([\n    Property({})\n], KeyboardEvents.prototype, \"keyConfigs\", void 0);\n__decorate$4([\n    Property('keyup')\n], KeyboardEvents.prototype, \"eventName\", void 0);\n__decorate$4([\n    Event$1()\n], KeyboardEvents.prototype, \"keyAction\", void 0);\nKeyboardEvents = KeyboardEvents_1 = __decorate$4([\n    NotifyPropertyChanges\n], KeyboardEvents);\n\n/**\n * L10n modules provides localized text for different culture.\n * ```typescript\n * import {setCulture} from '@syncfusion/ts-base-library';\n * //load global locale object common for all components.\n * L10n.load({\n *    'fr-BE': {\n *       'button': {\n *            'check': 'vérifié'\n *        }\n *    }\n * });\n * //set globale default locale culture.\n * setCulture('fr-BE');\n * let instance: L10n = new L10n('button', {\n *    check: 'checked'\n * });\n * //Get locale text for current property.\n * instance.getConstant('check');\n * //Change locale culture in a component.\n * instance.setLocale('en-US');\n * ```\n */\nclass L10n {\n    /**\n     * Constructor\n     *\n     * @param {string} controlName ?\n     * @param {Object} localeStrings ?\n     * @param {string} locale ?\n     */\n    constructor(controlName, localeStrings, locale) {\n        this.controlName = controlName;\n        this.localeStrings = localeStrings;\n        this.setLocale(locale || defaultCulture);\n    }\n    /**\n     * Sets the locale text\n     *\n     * @param {string} locale ?\n     * @returns {void} ?\n     */\n    setLocale(locale) {\n        const intLocale = this.intGetControlConstant(L10n.locale, locale);\n        this.currentLocale = intLocale || this.localeStrings;\n    }\n    /**\n     * Sets the global locale for all components.\n     *\n     * @param {Object} localeObject - specifies the localeObject to be set as global locale.\n     * @returns {void} ?\n     */\n    static load(localeObject) {\n        this.locale = extend(this.locale, localeObject, {}, true);\n    }\n    /**\n     * Returns current locale text for the property based on the culture name and control name.\n     *\n     * @param {string} prop - specifies the property for which localize text to be returned.\n     * @returns {string} ?\n     */\n    getConstant(prop) {\n        // Removed conditional operator because this method does not return correct value when passing 0 as value in localization\n        if (!isNullOrUndefined(this.currentLocale[prop])) {\n            return this.currentLocale[prop];\n        }\n        else {\n            return this.localeStrings[prop] || '';\n        }\n    }\n    /**\n     * Returns the control constant object for current object and the locale specified.\n     *\n     * @param {Object} curObject ?\n     * @param {string} locale ?\n     * @returns {Object} ?\n     */\n    intGetControlConstant(curObject, locale) {\n        if ((curObject)[locale]) {\n            return (curObject)[locale][this.controlName];\n        }\n        return null;\n    }\n}\nL10n.locale = {};\n\nvar __decorate$5 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * SwipeSettings is a framework module that provides support to handle swipe event like swipe up, swipe right, etc..,\n */\nclass SwipeSettings extends ChildProperty {\n}\n__decorate$5([\n    Property(50)\n], SwipeSettings.prototype, \"swipeThresholdDistance\", void 0);\nconst swipeRegex = /(Up|Down)/;\n/**\n * Touch class provides support to handle the touch event like tap, double tap, tap hold, etc..,\n * ```typescript\n *    let node: HTMLElement;\n * let touchObj: Touch = new Touch({\n *    element: node,\n *    tap: function (e) {\n *        // tap handler function code\n *    }\n *    tapHold: function (e) {\n *        // tap hold handler function code\n *    }\n *    scroll: function (e) {\n *        // scroll handler function code\n *    }\n *    swipe: function (e) {\n *        // swipe handler function code\n *    }\n * });\n * ```\n */\nlet Touch = class Touch extends Base {\n    /* End-Properties */\n    constructor(element, options) {\n        super(options, element);\n        this.touchAction = true;\n        this.tapCount = 0;\n        /**\n         *\n         * @param {MouseEventArgs | TouchEventArgs} evt ?\n         * @returns {void} ?\n         */\n        this.startEvent = (evt) => {\n            if (this.touchAction === true) {\n                const point = this.updateChangeTouches(evt);\n                if (evt.changedTouches !== undefined) {\n                    this.touchAction = false;\n                }\n                this.isTouchMoved = false;\n                this.movedDirection = '';\n                this.startPoint = this.lastMovedPoint = { clientX: point.clientX, clientY: point.clientY };\n                this.startEventData = point;\n                this.hScrollLocked = this.vScrollLocked = false;\n                this.tStampStart = Date.now();\n                this.timeOutTapHold = setTimeout(() => { this.tapHoldEvent(evt); }, this.tapHoldThreshold);\n                EventHandler.add(this.element, Browser.touchMoveEvent, this.moveEvent, this);\n                EventHandler.add(this.element, Browser.touchEndEvent, this.endEvent, this);\n                EventHandler.add(this.element, Browser.touchCancelEvent, this.cancelEvent, this);\n            }\n        };\n        /**\n         *\n         * @param {MouseEventArgs | TouchEventArgs} evt ?\n         * @returns {void} ?\n         */\n        this.moveEvent = (evt) => {\n            const point = this.updateChangeTouches(evt);\n            this.movedPoint = point;\n            this.isTouchMoved = !(point.clientX === this.startPoint.clientX && point.clientY === this.startPoint.clientY);\n            let eScrollArgs = {};\n            if (this.isTouchMoved) {\n                clearTimeout(this.timeOutTapHold);\n                this.calcScrollPoints(evt);\n                const scrollArg = {\n                    startEvents: this.startEventData,\n                    originalEvent: evt, startX: this.startPoint.clientX,\n                    startY: this.startPoint.clientY, distanceX: this.distanceX,\n                    distanceY: this.distanceY, scrollDirection: this.scrollDirection,\n                    velocity: this.getVelocity(point)\n                };\n                eScrollArgs = extend(eScrollArgs, {}, scrollArg);\n                this.trigger('scroll', eScrollArgs);\n                this.lastMovedPoint = { clientX: point.clientX, clientY: point.clientY };\n            }\n        };\n        /**\n         *\n         * @param {MouseEventArgs | TouchEventArgs} evt ?\n         * @returns {void} ?\n         */\n        this.cancelEvent = (evt) => {\n            clearTimeout(this.timeOutTapHold);\n            clearTimeout(this.timeOutTap);\n            this.tapCount = 0;\n            this.swipeFn(evt);\n            EventHandler.remove(this.element, Browser.touchCancelEvent, this.cancelEvent);\n        };\n        /**\n         *\n         * @param {MouseEventArgs | TouchEventArgs} evt ?\n         * @returns {void} ?\n         */\n        this.endEvent = (evt) => {\n            this.swipeFn(evt);\n            if (!this.isTouchMoved) {\n                if (typeof this.tap === 'function') {\n                    this.trigger('tap', { originalEvent: evt, tapCount: ++this.tapCount });\n                    this.timeOutTap = setTimeout(() => {\n                        this.tapCount = 0;\n                    }, this.tapThreshold);\n                }\n            }\n            this.modeclear();\n        };\n        /**\n         *\n         * @param {MouseEventArgs | TouchEventArgs} evt ?\n         * @returns {void} ?\n         */\n        this.swipeFn = (evt) => {\n            clearTimeout(this.timeOutTapHold);\n            clearTimeout(this.timeOutTap);\n            const point = this.updateChangeTouches(evt);\n            let diffX = point.clientX - this.startPoint.clientX;\n            let diffY = point.clientY - this.startPoint.clientY;\n            diffX = Math.floor(diffX < 0 ? -1 * diffX : diffX);\n            diffY = Math.floor(diffY < 0 ? -1 * diffY : diffX);\n            this.isTouchMoved = diffX > 1 || diffY > 1;\n            this.endPoint = point;\n            this.calcPoints(evt);\n            const swipeArgs = {\n                originalEvent: evt,\n                startEvents: this.startEventData,\n                startX: this.startPoint.clientX,\n                startY: this.startPoint.clientY,\n                distanceX: this.distanceX, distanceY: this.distanceY, swipeDirection: this.movedDirection,\n                velocity: this.getVelocity(point)\n            };\n            if (this.isTouchMoved) {\n                let eSwipeArgs;\n                const tDistance = this.swipeSettings.swipeThresholdDistance;\n                // eslint-disable-next-line\n                eSwipeArgs = extend(eSwipeArgs, this.defaultArgs, swipeArgs);\n                let canTrigger = false;\n                const ele = this.element;\n                const scrollBool = this.isScrollable(ele);\n                const moved = swipeRegex.test(this.movedDirection);\n                if ((tDistance < this.distanceX && !moved) || (tDistance < this.distanceY && moved)) {\n                    if (!scrollBool) {\n                        canTrigger = true;\n                    }\n                    else {\n                        canTrigger = this.checkSwipe(ele, moved);\n                    }\n                }\n                if (canTrigger) {\n                    this.trigger('swipe', eSwipeArgs);\n                }\n            }\n            this.modeclear();\n        };\n        this.modeclear = () => {\n            this.modeClear = setTimeout(() => {\n                this.touchAction = true;\n            }, (typeof this.tap !== 'function' ? 0 : 20));\n            this.lastTapTime = new Date().getTime();\n            EventHandler.remove(this.element, Browser.touchMoveEvent, this.moveEvent);\n            EventHandler.remove(this.element, Browser.touchEndEvent, this.endEvent);\n            EventHandler.remove(this.element, Browser.touchCancelEvent, this.cancelEvent);\n        };\n        this.bind();\n    }\n    // triggers when property changed\n    /**\n     *\n     * @private\n     * @param {TouchModel} newProp ?\n     * @param {TouchModel} oldProp ?\n     * @returns {void} ?\n     */\n    // eslint-disable-next-line\n    onPropertyChanged(newProp, oldProp) {\n        //No Code to handle\n    }\n    bind() {\n        this.wireEvents();\n        if (Browser.isIE) {\n            this.element.classList.add('e-block-touch');\n        }\n    }\n    /**\n     * To destroy the touch instance.\n     *\n     * @returns {void}\n     */\n    destroy() {\n        this.unwireEvents();\n        super.destroy();\n    }\n    // Need to changes the event binding once we updated the event handler.\n    wireEvents() {\n        EventHandler.add(this.element, Browser.touchStartEvent, this.startEvent, this);\n    }\n    unwireEvents() {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.startEvent);\n    }\n    /**\n     * Returns module name as touch\n     *\n     * @returns {string} ?\n     * @private\n     */\n    getModuleName() {\n        return 'touch';\n    }\n    /**\n     * Returns if the HTML element is Scrollable.\n     *\n     * @param {HTMLElement} element - HTML Element to check if Scrollable.\n     * @returns {boolean} ?\n     */\n    isScrollable(element) {\n        const eleStyle = getComputedStyle(element);\n        const style = eleStyle.overflow + eleStyle.overflowX + eleStyle.overflowY;\n        if ((/(auto|scroll)/).test(style)) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     *\n     * @param {MouseEventArgs | TouchEventArgs} evt ?\n     * @returns {void} ?\n     */\n    tapHoldEvent(evt) {\n        this.tapCount = 0;\n        this.touchAction = true;\n        let eTapArgs;\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.moveEvent);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.endEvent);\n        // eslint-disable-next-line\n        eTapArgs = { originalEvent: evt };\n        this.trigger('tapHold', eTapArgs);\n        EventHandler.remove(this.element, Browser.touchCancelEvent, this.cancelEvent);\n    }\n    calcPoints(evt) {\n        const point = this.updateChangeTouches(evt);\n        this.defaultArgs = { originalEvent: evt };\n        this.distanceX = Math.abs((Math.abs(point.clientX) - Math.abs(this.startPoint.clientX)));\n        this.distanceY = Math.abs((Math.abs(point.clientY) - Math.abs(this.startPoint.clientY)));\n        if (this.distanceX > this.distanceY) {\n            this.movedDirection = (point.clientX > this.startPoint.clientX) ? 'Right' : 'Left';\n        }\n        else {\n            this.movedDirection = (point.clientY < this.startPoint.clientY) ? 'Up' : 'Down';\n        }\n    }\n    calcScrollPoints(evt) {\n        const point = this.updateChangeTouches(evt);\n        this.defaultArgs = { originalEvent: evt };\n        this.distanceX = Math.abs((Math.abs(point.clientX) - Math.abs(this.lastMovedPoint.clientX)));\n        this.distanceY = Math.abs((Math.abs(point.clientY) - Math.abs(this.lastMovedPoint.clientY)));\n        if ((this.distanceX > this.distanceY || this.hScrollLocked === true) && this.vScrollLocked === false) {\n            this.scrollDirection = (point.clientX > this.lastMovedPoint.clientX) ? 'Right' : 'Left';\n            this.hScrollLocked = true;\n        }\n        else {\n            this.scrollDirection = (point.clientY < this.lastMovedPoint.clientY) ? 'Up' : 'Down';\n            this.vScrollLocked = true;\n        }\n    }\n    getVelocity(pnt) {\n        const newX = pnt.clientX;\n        const newY = pnt.clientY;\n        const newT = Date.now();\n        const xDist = newX - this.startPoint.clientX;\n        const yDist = newY - this.startPoint.clientX;\n        const interval = newT - this.tStampStart;\n        return Math.sqrt(xDist * xDist + yDist * yDist) / interval;\n    }\n    // eslint-disable-next-line\n    checkSwipe(ele, flag) {\n        const keys = ['scroll', 'offset'];\n        const temp = flag ? ['Height', 'Top'] : ['Width', 'Left'];\n        if ((ele[keys[0] + temp[0]] <= ele[keys[1] + temp[0]])) {\n            return true;\n        }\n        return (ele[keys[0] + temp[1]] === 0) ||\n            (ele[keys[1] + temp[0]] + ele[keys[0] + temp[1]] >= ele[keys[0] + temp[0]]);\n    }\n    updateChangeTouches(evt) {\n        const point = evt.changedTouches && evt.changedTouches.length !== 0 ? evt.changedTouches[0] : evt;\n        return point;\n    }\n};\n__decorate$5([\n    Event$1()\n], Touch.prototype, \"tap\", void 0);\n__decorate$5([\n    Event$1()\n], Touch.prototype, \"tapHold\", void 0);\n__decorate$5([\n    Event$1()\n], Touch.prototype, \"swipe\", void 0);\n__decorate$5([\n    Event$1()\n], Touch.prototype, \"scroll\", void 0);\n__decorate$5([\n    Property(350)\n], Touch.prototype, \"tapThreshold\", void 0);\n__decorate$5([\n    Property(750)\n], Touch.prototype, \"tapHoldThreshold\", void 0);\n__decorate$5([\n    Complex({}, SwipeSettings)\n], Touch.prototype, \"swipeSettings\", void 0);\nTouch = __decorate$5([\n    NotifyPropertyChanges\n], Touch);\n\n/**\n * Template Engine\n */\nconst LINES = new RegExp('\\\\n|\\\\r|\\\\s\\\\s+', 'g');\nconst QUOTES = new RegExp(/'|\"/g);\nconst IF_STMT = new RegExp('if ?\\\\(');\nconst ELSEIF_STMT = new RegExp('else if ?\\\\(');\nconst ELSE_STMT = new RegExp('else');\nconst FOR_STMT = new RegExp('for ?\\\\(');\nconst IF_OR_FOR = new RegExp('(/if|/for)');\nconst CALL_FUNCTION = new RegExp('\\\\((.*)\\\\)', '');\nconst NOT_NUMBER = new RegExp('^[0-9]+$', 'g');\nconst WORD = new RegExp('[\\\\w\"\\'.\\\\s+]+', 'g');\nconst DBL_QUOTED_STR = new RegExp('\"(.*?)\"', 'g');\nconst WORDIF = new RegExp('[\\\\w\"\\'@#$.\\\\s-+]+', 'g');\nlet exp = new RegExp('\\\\${([^}]*)}', 'g');\n// let cachedTemplate: Object = {};\nconst ARR_OBJ = /^\\..*/gm;\nconst SINGLE_SLASH = /\\\\/gi;\nconst DOUBLE_SLASH = /\\\\\\\\/gi;\nconst WORDFUNC = new RegExp('[\\\\w\"\\'@#$.\\\\s+]+', 'g');\nconst WINDOWFUNC = /\\window\\./gm;\n/**\n * The function to set regular expression for template expression string.\n *\n * @param {RegExp} value - Value expression.\n * @returns {RegExp} ?\n * @private\n */\n\n// /**\n//  * To render the template string from the given data.\n//  * @param  {string} template - String Template.\n//  * @param  {Object[]|JSON} data - DataSource for the template.\n//  * @param  {Object} helper? - custom helper object.\n//  */\n// export function template(template: string, data: JSON, helper?: Object): string {\n//     let hash: string = hashCode(template);\n//     let tmpl: Function;\n//     if (!cachedTemplate[hash]) {\n//         tmpl = cachedTemplate[hash] = compile(template, helper);\n//     } else {\n//         tmpl = cachedTemplate[hash];\n//     }\n//     return tmpl(data);\n// }\n/**\n * Compile the template string into template function.\n *\n * @param {string} template - The template string which is going to convert.\n * @param {Object} helper - Helper functions as an object.\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n * @private\n */\nfunction compile$1(template, helper, ignorePrefix) {\n    const argName = 'data';\n    const evalExpResult = evalExp(template, argName, helper, ignorePrefix);\n    const condtion = `var valueRegEx = (/value=\\\\'([A-Za-z0-9 _]*)((.)([\\\\w)(!-;?-■\\\\s]+)['])/g);\n    var hrefRegex = (/(?:href)([\\\\s='\"./]+)([\\\\w-./?=&\\\\\\\\#\"]+)((.)([\\\\w)(!-;/?-■\\\\s]+)['])/g);\n    if(str.match(valueRegEx)){\n        var check = str.match(valueRegEx);\n        var str1 = str;\n        for (var i=0; i < check.length; i++) {\n            var check1 = str.match(valueRegEx)[i].split('value=')[1];\n            var change = check1.match(/^'/) !== null ? check1.replace(/^'/, '\\\"') : check1;\n            change =change.match(/.$/)[0] === '\\\\'' ? change.replace(/.$/,'\\\"') : change;\n            str1 = str1.replace(check1, change);\n        }\n        str = str.replace(str, str1);\n    }\n    else if(str.match(hrefRegex)) {\n        var check = str.match(hrefRegex);\n        var str1 = str;\n        for (var i=0; i < check.length; i++) {\n            var check1 = str.match(hrefRegex)[i].split('href=')[1];\n            var change = check1.match(/^'/) !== null ? check1.replace(/^'/, '\\\"') : check1;\n            change =change.match(/.$/)[0] === '\\\\'' ? change.replace(/.$/,'\\\"') : change;\n            str1 = str1.replace(check1, change);\n        }\n        str = str.replace(str, str1);\n    }\n    `;\n    const fnCode = \"var str=\\\"\" + evalExpResult + \"\\\";\" + condtion + \" return str;\";\n    const fn = new Function(argName, fnCode);\n    return fn.bind(helper);\n}\n/** function used to evaluate the function expression\n *\n * @param {string} str ?\n * @param {string} nameSpace ?\n * @param {Object} helper ?\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n */\nfunction evalExp(str, nameSpace, helper, ignorePrefix) {\n    let varCOunt = 0;\n    /**\n     * Variable containing Local Keys\n     */\n    const localKeys = [];\n    const isClass = str.match(/class=\"([^\"]+|)\\s{2}/g);\n    let singleSpace = '';\n    if (isClass) {\n        isClass.forEach((value) => {\n            singleSpace = value.replace(/\\s\\s+/g, ' ');\n            str = str.replace(value, singleSpace);\n        });\n    }\n    return str.replace(LINES, '').replace(DBL_QUOTED_STR, '\\'$1\\'').replace(exp, \n    // eslint-disable-next-line\n    (match, cnt, offset, matchStr) => {\n        const SPECIAL_CHAR = /@|#|\\$/gm;\n        const matches = cnt.match(CALL_FUNCTION);\n        // matches to detect any function calls\n        if (matches) {\n            const rlStr = matches[1];\n            if (ELSEIF_STMT.test(cnt)) {\n                //handling else-if condition\n                cnt = '\";} ' + cnt.replace(matches[1], rlStr.replace(WORD, (str) => {\n                    str = str.trim();\n                    return addNameSpace(str, !(QUOTES.test(str)) && (localKeys.indexOf(str) === -1), nameSpace, localKeys, ignorePrefix);\n                })) + '{ \\n str = str + \"';\n            }\n            else if (IF_STMT.test(cnt)) {\n                //handling if condition\n                cnt = '\"; ' + cnt.replace(matches[1], rlStr.replace(WORDIF, (strs) => {\n                    return HandleSpecialCharArrObj(strs, nameSpace, localKeys, ignorePrefix);\n                })) + '{ \\n str = str + \"';\n            }\n            else if (FOR_STMT.test(cnt)) {\n                //handling for condition\n                const rlStr = matches[1].split(' of ');\n                // replace for each into actual JavaScript\n                // eslint-disable-next-line\n                cnt = '\"; ' + cnt.replace(matches[1], (mtc) => {\n                    localKeys.push(rlStr[0]);\n                    localKeys.push(rlStr[0] + 'Index');\n                    varCOunt = varCOunt + 1;\n                    // tslint:disable-next-line\n                    return 'var i' + varCOunt + '=0; i' + varCOunt + ' < ' + addNameSpace(rlStr[1], true, nameSpace, localKeys, ignorePrefix) + '.length; i' + varCOunt + '++';\n                }) + '{ \\n ' + rlStr[0] + '= ' + addNameSpace(rlStr[1], true, nameSpace, localKeys, ignorePrefix)\n                    + '[i' + varCOunt + ']; \\n var ' + rlStr[0] + 'Index=i' + varCOunt + '; \\n str = str + \"';\n            }\n            else {\n                //helper function handling\n                const fnStr = cnt.split('(');\n                // eslint-disable-next-line\n                let fNameSpace = (helper && helper.hasOwnProperty(fnStr[0]) ? 'this.' : 'global');\n                fNameSpace = (/\\./.test(fnStr[0]) ? '' : fNameSpace);\n                const ftArray = matches[1].split(',');\n                if (matches[1].length !== 0 && !(/data/).test(ftArray[0]) && !(/window./).test(ftArray[0])) {\n                    matches[1] = (fNameSpace === 'global' ? nameSpace + '.' + matches[1] : matches[1]);\n                }\n                const splRegexp = /@|\\$|#/gm;\n                const arrObj = /\\]\\./gm;\n                if (WINDOWFUNC.test(cnt) && arrObj.test(cnt) || splRegexp.test(cnt)) {\n                    const splArrRegexp = /@|\\$|#|\\]\\./gm;\n                    if (splArrRegexp.test(cnt)) {\n                        // tslint:disable-next-line\n                        cnt = '\"+ ' + (fNameSpace === 'global' ? '' : fNameSpace) + cnt.replace(matches[1], rlStr.replace(WORDFUNC, (strs) => {\n                            return HandleSpecialCharArrObj(strs, nameSpace, localKeys, ignorePrefix);\n                        })) + '+ \"';\n                    }\n                }\n                else {\n                    cnt = '\" + ' + (fNameSpace === 'global' ? '' : fNameSpace) +\n                        cnt.replace(rlStr, addNameSpace(matches[1].replace(/,( |)data.|,/gi, ',' + nameSpace + '.').replace(/,( |)data.window/gi, ',window'), (fNameSpace === 'global' ? false : true), nameSpace, localKeys, ignorePrefix)) +\n                        '+\"';\n                }\n            }\n        }\n        else if (ELSE_STMT.test(cnt)) {\n            // handling else condition\n            cnt = '\"; ' + cnt.replace(ELSE_STMT, '} else { \\n str = str + \"');\n            // eslint-disable-next-line\n        }\n        else if (!!cnt.match(IF_OR_FOR)) {\n            // close condition\n            cnt = cnt.replace(IF_OR_FOR, '\"; \\n } \\n str = str + \"');\n        }\n        else if (SPECIAL_CHAR.test(cnt)) {\n            // template string with double slash with special character\n            if (cnt.match(SINGLE_SLASH)) {\n                cnt = SlashReplace(cnt);\n            }\n            cnt = '\"+' + NameSpaceForspecialChar(cnt, (localKeys.indexOf(cnt) === -1), nameSpace, localKeys) + '\"]+\"';\n        }\n        else {\n            // template string with double slash\n            if (cnt.match(SINGLE_SLASH)) {\n                cnt = SlashReplace(cnt);\n                cnt = '\"+' + NameSpaceForspecialChar(cnt, (localKeys.indexOf(cnt) === -1), nameSpace, localKeys) + '\"]+\"';\n            }\n            else {\n                // evaluate normal expression\n                cnt = '\"+' + addNameSpace(cnt.replace(/,/gi, '+' + nameSpace + '.'), (localKeys.indexOf(cnt) === -1), nameSpace, localKeys, ignorePrefix) + '+\"';\n            }\n        }\n        return cnt;\n    });\n}\n/**\n *\n * @param {string} str ?\n * @param {boolean} addNS ?\n * @param {string} nameSpace ?\n * @param {string[]} ignoreList ?\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n */\nfunction addNameSpace(str, addNS, nameSpace, ignoreList, ignorePrefix) {\n    return ((addNS && !(NOT_NUMBER.test(str)) && ignoreList.indexOf(str.split('.')[0]) === -1 && !ignorePrefix) ? nameSpace + '.' + str : str);\n}\n/**\n *\n * @param {string} str ?\n * @param {boolean} addNS ?\n * @param {string} nameSpace ?\n * @param {string[]} ignoreList ?\n * @returns {string} ?\n */\nfunction NameSpaceArrObj(str, addNS, nameSpace, ignoreList) {\n    const arrObjReg = /^\\..*/gm;\n    return ((addNS && !(NOT_NUMBER.test(str)) &&\n        ignoreList.indexOf(str.split('.')[0]) === -1 && !(arrObjReg.test(str))) ? nameSpace + '.' + str : str);\n}\n// // Create hashCode for template string to storeCached function\n// function hashCode(str: string): string {\n//     return str.split('').reduce((a: number, b: string) => { a = ((a << 5) - a) + b.charCodeAt(0); return a & a; }, 0).toString();\n// }\n/**\n *\n * @param {string} str ?\n * @param {boolean} addNS ?\n * @param {string} nameSpace ?\n * @param {string[]} ignoreList ?\n * @returns {string} ?\n */\nfunction NameSpaceForspecialChar(str, addNS, nameSpace, ignoreList) {\n    return ((addNS && !(NOT_NUMBER.test(str)) && ignoreList.indexOf(str.split('.')[0]) === -1) ? nameSpace + '[\"' + str : str);\n}\n// eslint-disable-next-line\nfunction SlashReplace(tempStr) {\n    const double = '\\\\\\\\';\n    if (tempStr.match(DOUBLE_SLASH)) {\n        // eslint-disable-next-line\n        tempStr = tempStr;\n    }\n    else {\n        tempStr = tempStr.replace(SINGLE_SLASH, double);\n    }\n    return tempStr;\n}\n/**\n *\n * @param {string} str ?\n * @param {string} nameSpaceNew ?\n * @param {string[]} keys ?\n * @param {boolean} ignorePrefix ?\n * @returns {string} ?\n */\nfunction HandleSpecialCharArrObj(str, nameSpaceNew, keys, ignorePrefix) {\n    str = str.trim();\n    const windowFunc = /\\window\\./gm;\n    if (!windowFunc.test(str)) {\n        const quotes = /'|\"/gm;\n        const splRegexp = /@|\\$|#/gm;\n        if (splRegexp.test(str)) {\n            str = NameSpaceForspecialChar(str, (keys.indexOf(str) === -1), nameSpaceNew, keys) + '\"]';\n        }\n        if (ARR_OBJ.test(str)) {\n            return NameSpaceArrObj(str, !(quotes.test(str)) && (keys.indexOf(str) === -1), nameSpaceNew, keys);\n        }\n        else {\n            return addNameSpace(str, !(quotes.test(str)) && (keys.indexOf(str) === -1), nameSpaceNew, keys, ignorePrefix);\n        }\n    }\n    else {\n        return str;\n    }\n}\n\n/**\n * Template Engine Bridge\n */\nconst HAS_ROW = /^[\\n\\r.]+<tr|^<tr/;\nconst HAS_SVG = /^[\\n\\r.]+<svg|^<path|^<g/;\nconst blazorTemplates = {};\n/**\n *\n * @returns {string} ?\n */\nfunction getRandomId() {\n    return '-' + Math.random().toString(36).substr(2, 5);\n}\n/**\n * Compile the template string into template function.\n *\n * @param {string} templateString - The template string which is going to convert.\n * @param {Object} helper - Helper functions as an object.\n * @param {boolean} ignorePrefix ?\n * @returns {NodeList} ?\n * @private\n */\n// eslint-disable-next-line\nfunction compile$$1(templateString, helper, ignorePrefix) {\n    const compiler = engineObj.compile(templateString, helper, ignorePrefix);\n    // eslint-disable-next-line\n    return (data, component, propName, templateId, isStringTemplate, index, element) => {\n        const result = compiler(data, component, propName, element);\n        const blazorTemplateId = 'BlazorTemplateId';\n        if (isBlazor() && !isStringTemplate) {\n            const randomId = getRandomId();\n            let blazorId = templateId + randomId;\n            if (!blazorTemplates[templateId]) {\n                blazorTemplates[templateId] = [];\n            }\n            if (!isNullOrUndefined(index)) {\n                const keys = Object.keys(blazorTemplates[templateId][index]);\n                for (const key of keys) {\n                    if (key !== blazorTemplateId && data[key]) {\n                        blazorTemplates[templateId][index][key] = data[key];\n                    }\n                    if (key === blazorTemplateId) {\n                        blazorId = blazorTemplates[templateId][index][key];\n                    }\n                }\n            }\n            else {\n                data[blazorTemplateId] = blazorId;\n                blazorTemplates[templateId].push(data);\n            }\n            // eslint-disable-next-line\n            return propName === 'rowTemplate' ? [createElement('tr', { id: blazorId, className: 'e-blazor-template' })] :\n                // eslint-disable-next-line\n                [createElement('div', { id: blazorId, className: 'e-blazor-template' })];\n        }\n        if (typeof result === 'string') {\n            if (HAS_SVG.test(result)) {\n                const ele = createElement('svg', { innerHTML: result });\n                return ele.childNodes;\n            }\n            else {\n                const ele = createElement((HAS_ROW.test(result) ? 'table' : 'div'), { innerHTML: result });\n                return ele.childNodes;\n            }\n        }\n        else {\n            return result;\n        }\n    };\n}\n/**\n *\n * @param {string} templateId ?\n * @param {string} templateName ?\n * @param {string} comp ?\n * @param {boolean} isEmpty ?\n * @param {Function} callBack ?\n * @returns {void} ?\n */\nfunction updateBlazorTemplate(templateId, templateName, comp, isEmpty, callBack) {\n    if (isBlazor()) {\n        const ejsIntrop = 'sfBlazor';\n        window[ejsIntrop].updateTemplate(templateName, blazorTemplates[templateId], templateId, comp, callBack);\n        if (isEmpty !== false) {\n            blazorTemplates[templateId] = [];\n        }\n    }\n}\n/**\n *\n * @param {string} templateId ?\n * @param {string} templateName ?\n * @param {number} index ?\n * @returns {void} ?\n */\nfunction resetBlazorTemplate(templateId, templateName, index) {\n    const templateDiv = document.getElementById(templateId);\n    if (templateDiv) {\n        // eslint-disable-next-line\n        const innerTemplates = templateDiv.getElementsByClassName('blazor-inner-template');\n        for (let i = 0; i < innerTemplates.length; i++) {\n            let tempId = ' ';\n            if (!isNullOrUndefined(index)) {\n                tempId = innerTemplates[index].getAttribute('data-templateId');\n            }\n            else {\n                tempId = innerTemplates[i].getAttribute('data-templateId');\n            }\n            const tempElement = document.getElementById(tempId);\n            if (tempElement) {\n                const length = tempElement.childNodes.length;\n                for (let j = 0; j < length; j++) {\n                    if (!isNullOrUndefined(index)) {\n                        innerTemplates[index].appendChild(tempElement.childNodes[0]);\n                        i = innerTemplates.length;\n                    }\n                    else {\n                        innerTemplates[i].appendChild(tempElement.childNodes[0]);\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * Set your custom template engine for template rendering.\n *\n * @param  {ITemplateEngine} classObj - Class object for custom template.\n * @returns {void} ?\n * @private\n */\nfunction setTemplateEngine(classObj) {\n    engineObj.compile = classObj.compile;\n}\n/**\n * Get current template engine for template rendering\n *\n * @returns {string} ?\n * @private\n */\nfunction getTemplateEngine() {\n    return engineObj.compile;\n}\n//Default Engine Class\nclass Engine {\n    // eslint-disable-next-line\n    compile(templateString, helper = {}, ignorePrefix) {\n        return compile$1(templateString, helper);\n    }\n}\nconst engineObj = { compile: new Engine().compile };\n\n/**\n * SanitizeHtmlHelper for sanitize the value.\n */\nconst removeTags = [\n    'script',\n    'style',\n    'iframe[src]',\n    'link[href*=\"javascript:\"]',\n    'object[type=\"text/x-scriptlet\"]',\n    'object[data^=\"data:text/html;base64\"]',\n    'img[src^=\"data:text/html;base64\"]',\n    '[src^=\"javascript:\"]',\n    '[dynsrc^=\"javascript:\"]',\n    '[lowsrc^=\"javascript:\"]',\n    '[type^=\"application/x-shockwave-flash\"]'\n];\nconst removeAttrs = [\n    { attribute: 'href', selector: '[href*=\"javascript:\"]' },\n    { attribute: 'background', selector: '[background^=\"javascript:\"]' },\n    { attribute: 'style', selector: '[style*=\"javascript:\"]' },\n    { attribute: 'style', selector: '[style*=\"expression(\"]' },\n    { attribute: 'href', selector: 'a[href^=\"data:text/html;base64\"]' }\n];\nconst jsEvents = ['onchange',\n    'onclick',\n    'onmouseover',\n    'onmouseout',\n    'onkeydown',\n    'onload',\n    'onerror',\n    'onblur',\n    'onfocus',\n    'onbeforeload',\n    'onbeforeunload',\n    'onkeyup',\n    'onsubmit',\n    'onafterprint',\n    'onbeforeonload',\n    'onbeforeprint',\n    'onblur',\n    'oncanplay',\n    'oncanplaythrough',\n    'onchange',\n    'onclick',\n    'oncontextmenu',\n    'ondblclick',\n    'ondrag',\n    'ondragend',\n    'ondragenter',\n    'ondragleave',\n    'ondragover',\n    'ondragstart',\n    'ondrop',\n    'ondurationchange',\n    'onemptied',\n    'onended',\n    'onerror',\n    'onerror',\n    'onfocus',\n    'onformchange',\n    'onforminput',\n    'onhaschange',\n    'oninput',\n    'oninvalid',\n    'onkeydown',\n    'onkeypress',\n    'onkeyup',\n    'onload',\n    'onloadeddata',\n    'onloadedmetadata',\n    'onloadstart',\n    'onmessage',\n    'onmousedown',\n    'onmousemove',\n    'onmouseout',\n    'onmouseover',\n    'onmouseup',\n    'onmousewheel',\n    'onoffline',\n    'onoine',\n    'ononline',\n    'onpagehide',\n    'onpageshow',\n    'onpause',\n    'onplay',\n    'onplaying',\n    'onpopstate',\n    'onprogress',\n    'onratechange',\n    'onreadystatechange',\n    'onredo',\n    'onresize',\n    'onscroll',\n    'onseeked',\n    'onseeking',\n    'onselect',\n    'onstalled',\n    'onstorage',\n    'onsubmit',\n    'onsuspend',\n    'ontimeupdate',\n    'onundo',\n    'onunload',\n    'onvolumechange',\n    'onwaiting',\n    'onmouseenter',\n    'onmouseleave',\n    'onmousewheel',\n    'onstart',\n    'onpropertychange'\n];\nclass SanitizeHtmlHelper {\n    static beforeSanitize() {\n        return {\n            selectors: {\n                tags: removeTags,\n                attributes: removeAttrs\n            }\n        };\n    }\n    static sanitize(value) {\n        const item = this.beforeSanitize();\n        const output = this.serializeValue(item, value);\n        return output;\n    }\n    static serializeValue(item, value) {\n        this.removeAttrs = item.selectors.attributes;\n        this.removeTags = item.selectors.tags;\n        this.wrapElement = document.createElement('div');\n        this.wrapElement.innerHTML = value;\n        this.removeXssTags();\n        this.removeJsEvents();\n        this.removeXssAttrs();\n        const tempEleValue = this.wrapElement.innerHTML;\n        this.removeElement();\n        return tempEleValue;\n    }\n    static removeElement() {\n        // Removes an element's attibute to avoid html tag validation\n        const nodes = this.wrapElement.children;\n        for (let j = 0; j < nodes.length; j++) {\n            const attribute = nodes[j].attributes;\n            for (let i = 0; i < attribute.length; i++) {\n                this.wrapElement.children[j].removeAttribute(attribute[i].localName);\n            }\n        }\n    }\n    static removeXssTags() {\n        const elements = this.wrapElement.querySelectorAll(this.removeTags.join(','));\n        if (elements.length > 0) {\n            elements.forEach((element) => {\n                detach(element);\n            });\n        }\n        else {\n            return;\n        }\n    }\n    static removeJsEvents() {\n        const elements = this.wrapElement.querySelectorAll('[' + jsEvents.join('],[') + ']');\n        if (elements.length > 0) {\n            elements.forEach((element) => {\n                jsEvents.forEach((attr) => {\n                    if (element.hasAttribute(attr)) {\n                        element.removeAttribute(attr);\n                    }\n                });\n            });\n        }\n        else {\n            return;\n        }\n    }\n    static removeXssAttrs() {\n        // eslint-disable-next-line\n        this.removeAttrs.forEach((item, index) => {\n            const elements = this.wrapElement.querySelectorAll(item.selector);\n            if (elements.length > 0) {\n                elements.forEach((element) => {\n                    element.removeAttribute(item.attribute);\n                });\n            }\n        });\n    }\n}\n\n/**\n * Base modules\n */\n\nexport { blazorCultureFormats, IntlBase, Ajax, Animation, rippleEffect, isRippleEnabled, enableRipple, Base, getComponent, removeChildInstance, Browser, versionBasedStatePersistence, enableVersionBasedPersistence, Component, ChildProperty, Position, Draggable, Droppable, EventHandler, onIntlChange, rightToLeft, cldrData, defaultCulture, defaultCurrencyCode, Internationalization, setCulture, setCurrencyCode, loadCldr, enableRtl, getNumericObject, getNumberDependable, getDefaultDateObject, KeyboardEvents, L10n, ModuleLoader, Property, Complex, ComplexFactory, Collection, CollectionFactory, Event$1 as Event, NotifyPropertyChanges, CreateBuilder, SwipeSettings, Touch, HijriParser, blazorTemplates, getRandomId, compile$$1 as compile, updateBlazorTemplate, resetBlazorTemplate, setTemplateEngine, getTemplateEngine, disableBlazorMode, createInstance, setImmediate, getValue, setValue, deleteObject, isObject, getEnumValue, merge, extend, isNullOrUndefined, isUndefined, getUniqueID, debounce, queryParams, isObjectArray, compareElementParent, throwError, print, formatUnit, enableBlazorMode, isBlazor, getElement, getInstance, addInstance, uniqueID, createElement, addClass, removeClass, isVisible, prepend, append, detach, remove, attributes, select, selectAll, closest, siblings, getAttributeOrDefault, setStyleAttribute, classList, matches, includeInnerHTML, containsClass, cloneNode, Observer, SanitizeHtmlHelper };\n"]},"metadata":{},"sourceType":"module"}