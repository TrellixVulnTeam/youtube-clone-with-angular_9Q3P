{"version":3,"file":"ej2-layouts.umd.min.js","sources":["../src/splitter/splitter.js","../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     *\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible',\n            'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        _this.collapseFlag = false;\n        _this.expandFlag = true;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     *\n     * @param  {SplitterModel} newProp - specifies the new property\n     * @param  {SplitterModel} oldProp - specifies the old property\n     * @returns {void}\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'enableReversePanes':\n                    this.setReversePane();\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings': {\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content': {\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    }\n                                    case 'resizable': {\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    }\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        // eslint-disable-next-line\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed(index) : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size': {\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.updatePaneSize(newValSize, index);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                }\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.updatePaneSize = function (newValSize, index) {\n        this.allPanes[index].style.flexBasis = newValSize;\n        var flexPaneIndexes = [];\n        var staticPaneWidth;\n        var flexCount = 0;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n            else if (this.paneSettings[i].size) {\n                staticPaneWidth = this.orientation === 'Horizontal' ? this.allPanes[index].offsetWidth : this.allPanes[index].offsetHeight;\n            }\n        }\n        staticPaneWidth = this.orientation === 'Horizontal' ? (this.allBars[0].offsetWidth * this.allBars.length) + staticPaneWidth :\n            (this.allBars[0].offsetHeight * this.allBars.length) + staticPaneWidth;\n        var flexPaneWidth = (this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight)\n            - staticPaneWidth - (this.border * 2);\n        var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n        }\n        this.allPanes[index].classList.add(STATIC_PANE);\n    };\n    Splitter.prototype.preRender = function () {\n        this.onReportWindowSize = this.reportWindowSize.bind(this);\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist(['paneSettings']);\n    };\n    /**\n     * Returns the current module name.\n     *\n     * @returns {string} - returns the string value\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     *\n     * @returns {void}\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.element, this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        if (this.enableReversePanes) {\n            this.setReversePane();\n        }\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        this.element.ownerDocument.defaultView.addEventListener('resize', this.onReportWindowSize, true);\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        var nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) <\n                        this.convertPercentageToPixel((nextFlexBasis - 1) + '%'))) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) <\n                        this.convertPercentageToPixel((previousFlexBasis - 1) + '%'))) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) < (nextPaneSize + splitBarSize))) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) < (prePaneSize - splitBarSize))) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        if (this.allPanes.length > 1) {\n            var index = this.getSeparatorIndex(this.currentSeparator);\n            var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n            var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n            var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n            if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' &&\n                event.keyCode === 39) ||\n                (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n                && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed) &&\n                document.activeElement.classList.contains(SPLIT_BAR) && (this.paneSettings[index].resizable &&\n                this.paneSettings[index + 1].resizable)) {\n                event.preventDefault();\n                this.checkPaneSize(event);\n                this.triggerResizing(event);\n            }\n            else if (event.keyCode === 13 && this.paneSettings[index].collapsible &&\n                document.activeElement.classList.contains(SPLIT_BAR) && this.currentSeparator.classList.contains(SPLIT_BAR_ACTIVE)) {\n                if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    this.collapse(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n                else {\n                    this.expand(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.getMinInPixel = function (minValue) {\n        var min;\n        if (isNullOrUndefined(minValue)) {\n            return 0;\n        }\n        var paneMinRange = this.convertPixelToNumber(minValue.toString());\n        if (minValue.indexOf('%') > 0) {\n            paneMinRange = this.convertPercentageToPixel(minValue);\n        }\n        min = this.convertPixelToNumber((paneMinRange).toString());\n        return min;\n    };\n    /**\n     * @param {string} value - specifies the string value\n     * @returns {string} returns the string\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // eslint-disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // eslint-disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // eslint-disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // eslint-disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) {\n            detach(el);\n        });\n        this.restoreElem();\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        // eslint-disable-next-line\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setReversePane = function () {\n        this.allPanes = this.allPanes.reverse();\n        this.allBars = this.allBars.reverse();\n        addClass([this.allBars[this.allBars.length - 1]], LAST_BAR);\n        removeClass([this.allBars[0]], LAST_BAR);\n        this.setProperties({ 'paneSettings': this.paneSettings.reverse() }, true);\n        if (this.enableReversePanes) {\n            this.element.setAttribute('dir', 'rtl');\n        }\n        else {\n            this.element.removeAttribute('dir');\n        }\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            // eslint-disable-next-line\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        var i = index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                // eslint-disable-next-line\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            // eslint-disable-next-line\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        var arrow2 = (this.orientation === 'Horizontal')\n            ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        var arrow1 = (this.orientation === 'Horizontal')\n            ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        if (!isNullOrUndefined(index) && this.paneSettings[index].collapsed\n            && isNullOrUndefined(this.allPanes[index].classList.contains(COLLAPSE_PANE))) {\n            return;\n        }\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return {\n            collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        // eslint-disable-next-line\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + separator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains(PANE)) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (order) {\n        return this.enableReversePanes ? this.getOrderPane(order + 1) : this.getOrderPane(order - 1);\n    };\n    Splitter.prototype.getNextPane = function (order) {\n        return this.enableReversePanes ? this.getOrderPane(order - 1) : this.getOrderPane(order + 1);\n    };\n    Splitter.prototype.getOrderPane = function (order) {\n        var pane;\n        for (var i = 0; i < this.element.children.length; i++) {\n            if (parseInt(this.element.children[i].style.order, 10) === order) {\n                pane = this.element.children[i];\n            }\n        }\n        return pane;\n    };\n    Splitter.prototype.getOrderIndex = function (order, type) {\n        var index;\n        var panes;\n        if (type === 'pane') {\n            panes = this.allPanes;\n        }\n        else {\n            panes = this.allBars;\n        }\n        for (var i = 0; i < panes.length; i++) {\n            if (parseInt(panes[i].style.order, 10) === order) {\n                index = i;\n            }\n        }\n        return index;\n    };\n    Splitter.prototype.updateSeparatorSize = function (resizeHanlder) {\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        // eslint-disable-next-line\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        this.updateSeparatorSize(resizeHanlder);\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                // eslint-disable-next-line\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    // eslint-disable-next-line\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        // eslint-disable-next-line\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.updateIconClass = function () {\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n        }\n        else {\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        // eslint-disable-next-line\n        var proxy = this;\n        if (this.orientation === 'Horizontal') {\n            this.updateIconClass();\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.updateIconClass();\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        if (this.enableReversePanes) {\n            separator.setAttribute('dir', 'ltr');\n        }\n        else {\n            separator.removeAttribute('dir');\n        }\n        separator.addEventListener('focus', function () {\n            separator.classList.add(SPLIT_BAR_ACTIVE);\n            proxy.currentSeparator = separator;\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            separator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        // eslint-disable-next-line\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        var proxy;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (!isNullOrUndefined(separator)) {\n                    if (this.isResizable()) {\n                        EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                        var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                        EventHandler.add(separator, eventName, this.onMouseDown, this);\n                        separator.classList.add(RESIZABLE_BAR);\n                        this.updateResizablePanes(i);\n                    }\n                    else {\n                        addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                    }\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () {\n                addClass([separator], [SPLIT_BAR_HOVER]);\n            }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () {\n                addClass([separator], [SPLIT_BAR_HOVER]);\n            }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return (target.classList.contains(SPLIT_BAR) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var _this = this;\n        var paneCount = this.allPanes.length;\n        if (!document.body.contains(this.element)) {\n            document.defaultView.removeEventListener('resize', this.onReportWindowSize);\n            return;\n        }\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n        if (paneCount > 0) {\n            setTimeout(function () {\n                _this.updateSplitterSize(true);\n            }, 200);\n        }\n    };\n    Splitter.prototype.updateSplitterSize = function (iswindowResize) {\n        var totalWidth = 0;\n        var flexPaneIndexes = [];\n        var flexCount = 0;\n        var children = this.element.children;\n        for (var i = 0; i < children.length; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        for (var j = 0; j < this.allBars.length; j++) {\n            totalWidth += this.orientation === 'Horizontal' ? parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) : parseInt(getComputedStyle(this.allBars[j]).marginTop, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginBottom, 10);\n        }\n        var diff = this.orientation === 'Horizontal' ? this.element.offsetWidth -\n            ((this.border * 2) + totalWidth) :\n            this.element.offsetHeight - ((this.border * 2) + totalWidth);\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n        }\n        var avgDiffWidth = diff / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = this.orientation === 'Horizontal' ?\n                (this.allPanes[flexPaneIndexes[j]].offsetWidth + avgDiffWidth) + 'px' :\n                (this.allPanes[flexPaneIndexes[j]].offsetHeight + avgDiffWidth) + 'px';\n        }\n        if (this.allPanes.length === 2 && iswindowResize) {\n            var paneCount = this.allPanes.length;\n            var minValue = void 0;\n            var paneMinRange = void 0;\n            var paneIndex = 0;\n            var updatePane = void 0;\n            var flexPane = void 0;\n            for (var i = 0; i < paneCount; i++) {\n                if (!isNullOrUndefined(this.paneSettings[i].min)) {\n                    paneMinRange = this.convertPixelToNumber((this.paneSettings[i].min).toString());\n                    if (this.paneSettings[i].min.indexOf('%') > 0) {\n                        paneMinRange = this.convertPercentageToPixel(this.paneSettings[i].min);\n                    }\n                    minValue = this.convertPixelToNumber((paneMinRange).toString());\n                    if (this.allPanes[i].offsetWidth < minValue) {\n                        if (i === paneIndex) {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i + 1];\n                        }\n                        else {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i - 1];\n                        }\n                        var sizeDiff = minValue - this.allPanes[i].offsetWidth;\n                        var isPercent = updatePane.style.flexBasis.indexOf('%') > -1;\n                        updatePane.style.flexBasis = isPercent ? this.convertPixelToPercentage(updatePane.offsetWidth + sizeDiff) + '%'\n                            : (updatePane.offsetWidth + sizeDiff) + 'px';\n                        flexPane.style.flexBasis = flexPane.style.flexBasis.indexOf('%') > -1 ?\n                            this.convertPixelToPercentage(flexPane.offsetWidth - sizeDiff) + '%' : (flexPane.offsetWidth - sizeDiff) + 'px';\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n        var totalWidth = 0;\n        var children = this.element.children;\n        for (var i = 0; i < children.length; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        if (totalWidth > this.element.offsetWidth) {\n            this.updateSplitterSize();\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        this.removeStaticPanes();\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, true);\n            }\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, false);\n            }\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var collapseCount = 0;\n        for (var j = 0; j < this.element.children.length; j++) {\n            if (this.element.children[j].classList.contains(COLLAPSE_PANE)) {\n                collapseCount = collapseCount + 1;\n            }\n        }\n        var visiblePane = collapseCount === this.allPanes.length - 2;\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n            else {\n                panes[i].style.flexGrow = '';\n            }\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n            if (visiblePane && !this.allPanes[i].classList.contains(COLLAPSE_PANE) && this.paneSettings[i].size &&\n                i !== this.allPanes.length - 1) {\n                panes[i].style.flexGrow = '';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!this.splitInstance.nextPaneNextEle.classList.contains(COLLAPSE_PANE) &&\n                this.paneSettings[this.currentBarIndex + 1].resizable) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        this.removeStaticPanes();\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, false);\n            }\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, true);\n            }\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.removeStaticPanes = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n        var paneValues = this.paneSettings;\n        paneValues[index].collapsed = collapsed;\n        this.setProperties({ 'paneSettings': paneValues }, true);\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                if (this.paneSettings[this.currentBarIndex - 1].resizable) {\n                    this.resizableModel(this.currentBarIndex - 1, true);\n                }\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getOrderIndex(parseInt(e.target.parentElement.style.order, 10), 'splitbar');\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        array = this.enableReversePanes ? array.reverse() : array;\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        var separator;\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top + window.scrollY;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // eslint-disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) + 1 :\n            parseInt(this.currentSeparator.style.order, 10) - 1;\n        return this.getOrderIndex(separatorIndex, 'pane');\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) - 1 :\n            parseInt(this.currentSeparator.style.order, 10) + 1;\n        return this.getOrderIndex(separatorIndex, 'pane');\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.order);\n            nextPane = this.getNextPane(this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n        if (!(this.allPanes.length > 2)) {\n            this.updateSplitterSize();\n        }\n    };\n    // eslint-disable-next-line\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    // eslint-disable-next-line\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n        if (this.enablePersistence) {\n            var paneValues = this.paneSettings;\n            paneValues[this.getPreviousPaneIndex()].size = this.allPanes[this.getPreviousPaneIndex()].style.flexBasis;\n            paneValues[this.getNextPaneIndex()].size = this.allPanes[this.getNextPaneIndex()].style.flexBasis;\n            this.setProperties({ 'paneSettings': paneValues }, true);\n        }\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.isReact) {\n            this.renderReactTemplates();\n        }\n    };\n    // eslint-disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        // eslint-disable-next-line\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        // eslint-disable-next-line\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        // eslint-disable-next-line\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                        this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * expands corresponding pane based on the index is passed.\n     *\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns {void}\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n        this.updatePaneSettings(index, false);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     *\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns {void}\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n        this.updatePaneSettings(index, true);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     *\n     * @returns {void}\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize, true);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            this.element.innerHTML = this.wrapper.innerHTML;\n            for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (this.isReact) {\n                this.clearTemplate();\n            }\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        // eslint-disable-next-line\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var childNodes = this.element.childNodes;\n        var panes = [];\n        for (var i = 0; childNodes.length < 0; i++) {\n            if (childNodes[i].classList.contains(paneClass)) {\n                panes.push(childNodes[i]);\n            }\n        }\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     *\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns {void}\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     *\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns {void}\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.paneSettings.splice(index, 1);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property(false)\n    ], Splitter.prototype, \"enableReversePanes\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], Splitter.prototype, \"enablePersistence\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, setValue } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, SanitizeHtmlHelper, getValue } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser, extend } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar dragRestrict = 'e-drag-restrict';\nvar drag = 'e-drag';\nvar resize = 'e-resize';\nvar resizeicon = 'e-dl-icon';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isInlineRendering = false;\n        _this.removeAllCalled = false;\n        // to check whether removePanel is executed in mobile device\n        _this.isPanelRemoved = false;\n        // to maintain sizeY in mobile device\n        _this.panelsSizeY = 0;\n        _this.resizeHeight = false;\n        setValue('mergePersistData', _this.mergePersistPanelData, _this);\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     *\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass && cssClass.length > 0) {\n            addClass([ele], cssClass);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     *\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            this.isInlineRendering = true;\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            this.updateOldRowColumn();\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                ((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass && cssClass.length > 0) {\n            addClass([element], cssClass);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    // eslint-disable-next-line\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n                return compile((this.enableHtmlSanitizer && typeof (template) === 'string') ? sanitizedValue : template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate, prop) {\n        // eslint-disable-next-line\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        if ((content[0] === '.' || content[0] === '#') &&\n            document.querySelector(content).tagName !== 'SCRIPT') {\n            var eleVal = document.querySelector(content);\n            if (!isNullOrUndefined(eleVal)) {\n                if (eleVal.style.display === 'none') {\n                    eleVal.style.removeProperty('display');\n                }\n                if (eleVal.getAttribute('style') === '') {\n                    eleVal.removeAttribute('style');\n                }\n                appendElement.appendChild(eleVal);\n                return;\n            }\n            else {\n                content = content.trim();\n            }\n        }\n        else {\n            // eslint-disable-next-line\n            var compilerFn = templateFn({}, this, prop, type, isStringTemplate, null, appendElement);\n            if (compilerFn) {\n                for (var _i = 0, compilerFn_1 = compilerFn; _i < compilerFn_1.length; _i++) {\n                    var item = compilerFn_1[_i];\n                    templateElements.push(item);\n                }\n                append([].slice.call(templateElements), appendElement);\n            }\n        }\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        addClass([cellElement], [panel, panelTransition]);\n        var cssClass = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement([], cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate, 'header');\n                this.panelContent.appendChild(headerTemplateElement);\n                this.renderReactTemplates();\n            }\n        }\n        if (panelModel.content) {\n            var cssClass_1 = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_1, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate, 'content');\n                this.panelContent.appendChild(this.panelBody);\n                this.renderReactTemplates();\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content'\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // eslint-disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        this.refreshListener = this.refresh.bind(this);\n        // eslint-disable-next-line\n        EventHandler.add(window, 'resize', this.refreshListener);\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.renderReactTemplates();\n        this.elementX = parseFloat(el.style.left);\n        this.elementY = parseFloat(el.style.top);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [this.cellSize[0], this.cellSize[1]];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'msie') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            this.isMouseMoveBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(true);\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.refresh = function () {\n        this.panelsSizeY = 0;\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.updatePanelLayout(ele, cellInstance);\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel;\n        if (this.isPanelRemoved && this.panels) {\n            updatedPanel = this.panels;\n        }\n        else {\n            updatedPanel = this.sortPanels();\n        }\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            // eslint-disable-next-line\n            var updatedHeight = void 0;\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + ((this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY) + 'px';\n                if (updatedPanel[i].sizeY > 1) {\n                    updatedHeight = ((this.element.parentElement\n                        && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY) +\n                        // eslint-disable-next-line radix\n                        parseInt((Math.round(updatedPanel[i].sizeY / 2) * this.cellSpacing[1]).toString(), 0);\n                    panelElement.style.height = '' + updatedHeight + 'px';\n                }\n                this.resizeHeight = true;\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.panelsSizeY = this.panelsSizeY + updatedPanel[i].sizeY;\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        // eslint-disable-next-line prefer-const\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n            cellElement = this.contentTemplateChild[index];\n            if (panel.cssClass) {\n                addClass([cellElement], [panel.cssClass]);\n            }\n            if (panel.id) {\n                cellElement.setAttribute('id', panel.id);\n            }\n        }\n        else {\n            cellElement = this.createPanelElement(panel.cssClass ? panel.cssClass.split(' ') : null, panel.id);\n        }\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        this.renderReactTemplates();\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        if (this.checkMediaQuery()) {\n            this.calculateCellSize();\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * ((widthValue) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * ((heightValue) + this.cellSpacing[1])));\n        if (this.checkMediaQuery()) {\n            top = row === 0 ? 0 : ((this.panelsSizeY) * ((heightValue) + this.cellSpacing[1]));\n        }\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // eslint-disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                this.renderReactTemplates();\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele);\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement);\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var j = 0; j <= col; j++) {\n                if (columns.indexOf(j) === -1 && j !== col) {\n                    if (spacedColumns.indexOf(j) === -1) {\n                        spacedColumns.push(j);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele);\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement);\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        var leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    // eslint-disable-next-line no-self-assign\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element = document.getElementById(this.panels[i].id);\n                if (element === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element.id].row;\n                var colValue = this.cloneObject[element.id].col;\n                this.setPanelPosition(element, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            ignore.push(this.mainElement);\n            var swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString()\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n                        if (this.topAdjustable && this.allowFloating) {\n                            this.updatePanels();\n                            this.updateCloneArrayObject();\n                        }\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            // eslint-disable-next-line\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            // eslint-disable-next-line\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    // eslint-disable-next-line\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.ensureDrag = function () {\n        this.checkDragging(this.dragCollection);\n        var dragPanels = this.element.querySelectorAll('.' + drag);\n        removeClass(dragPanels, [drag]);\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [drag]);\n                }\n                else {\n                    addClass([element], [drag]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        if (!ele.querySelector(\".e-resize\")) {\n            for (var j = 0; j < this.availableClasses.length; j++) {\n                var spanEle = this.createElement('span');\n                var addClassValue = void 0;\n                container.appendChild(spanEle);\n                if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                    this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                    addClassValue = single;\n                }\n                else {\n                    addClassValue = double;\n                }\n                addClass([spanEle], [addClassValue, this.availableClasses[j], resize, resizeicon]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString()\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseFloat(args.element.style.top);\n        var elementLeft = parseFloat(args.element.style.left);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.checkForChanges = function (isInteracted, added, removed) {\n        var changedPanels = [];\n        if (this.removeAllCalled) {\n            changedPanels = [];\n        }\n        else {\n            for (var i = 0; i < this.panels.length; i++) {\n                if (((!isNullOrUndefined(added) ? (this.panels[i].id !== added[0].id) : true) &&\n                    (!isNullOrUndefined(removed) ? (this.panels[i].id !== removed[0].id) : true)) &&\n                    (this.panels[i].row !== this.panelsInitialModel[i].row || this.panels[i].col !== this.panelsInitialModel[i].col)) {\n                    changedPanels.push(this.panels[i]);\n                }\n            }\n        }\n        if (changedPanels.length > 0 || this.removeAllCalled) {\n            var changedArgs = {\n                changedPanels: changedPanels, isInteracted: isInteracted,\n                addedPanels: !isNullOrUndefined(added) ? added : [], removedPanels: !isNullOrUndefined(removed) ? removed : []\n            };\n            this.trigger('change', changedArgs);\n        }\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var abortArray = ['.e-resize', '.' + dragRestrict];\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: abortArray,\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        _this.checkForChanges(true);\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // eslint-disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.renderReactTemplates();\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    // eslint-disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // eslint-disable-next-line guard-for-in\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (heightValue + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (widthValue + this.cellSpacing[0])));\n        var cellSizeOne = this.getCellSize()[1];\n        var cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     *\n     * @param {panel} panel -  Defines the panel element.\n     *\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.panelsSizeY = 0;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // eslint-disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true, null);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        this.addPanelCalled = true;\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n        }\n        this.addPanelCalled = false;\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        this.setClasses([cell]);\n        if (this.allowFloating) {\n            this.mainElement = null;\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.checkForChanges(false, [panelProp]);\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     *\n     * @param {panel} panel - Defines the panel element.\n     *\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        this.panelsSizeY = 0;\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        var cssClass = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement([], cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true, 'header');\n            this.panelContent.appendChild(headerTemplateElement);\n            this.renderReactTemplates();\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            var cssClass_2 = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_2, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true, 'content');\n            this.panelContent.appendChild(this.panelBody);\n            this.renderReactTemplates();\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     *\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        this.removeAllCalled = true;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n            this.clearTemplate();\n        }\n        this.removeAllPanel();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        var clonedPanels = this.cloneModels(this.panels);\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, clonedPanels);\n        this.removeAllCalled = false;\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     *\n     * @param {string} id -  Defines the panel ID.\n     *\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        this.panelsSizeY = 0;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var removedPanel;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                removedPanel = this.panels[i];\n                this.panels.splice(i, 1);\n                this.panelsInitialModel.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        if (this.checkMediaQuery()) {\n            this.isPanelRemoved = true;\n            this.checkMediaQuerySizing();\n            this.isPanelRemoved = false;\n        }\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, [removedPanel]);\n    };\n    /**\n     *Moves the panel in the DashboardLayout.\n     *\n     * @param {string} id - Defines the panel ID.\n     *\n     * @param  {number} row - Defines the row of dashboard layout.\n     *\n     * @param {number} col - Defines the column of dashboard layout.\n     *\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        if ((isNaN(row) || row === null) || (isNaN(col) || col === null) || !panelInstance) {\n            return;\n        }\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n        this.checkForChanges(false);\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     *\n     * @param {string} id - Defines the panel ID.\n     *\n     * @param {number} sizeX - Defines the sizeX of dashboard layout.\n     *\n     * @param {number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        var ele = document.getElementById(id);\n        var args = { event: null, element: ele, isInteracted: false };\n        this.trigger('resizeStart', args);\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n        this.trigger('resizeStop', args);\n        this.checkForChanges(false);\n    };\n    /**\n     * Destroys the DashboardLayout component\n     *\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        // eslint-disable-next-line\n        EventHandler.remove(window, 'resize', this.refreshListener);\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        _super.prototype.destroy.call(this);\n        this.clearTemplate();\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        while (this.element.firstElementChild) {\n            detach(this.element.firstElementChild);\n            this.clearTemplate();\n        }\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        if (this.enableRtl === true) {\n            addClass([this.element], 'e-rtl');\n        }\n        else {\n            removeClass([this.element], 'e-rtl');\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     *\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.initialize();\n        if (this.checkMediaQuery()) {\n            this.refresh();\n        }\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels) && panels.length > 0) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n        else {\n            this.restrictDynamicUpdate = true;\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * returns void\n     *\n     * @private\n     */\n    // eslint-disable-next-line\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels && newProp.panels.length > 0 && newProp.panels[0] instanceof Panel) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'msie') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns && !this.restrictDynamicUpdate && (newProp.panels[0] && newProp.panels.length > 0)) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else if (!(newProp.panels[0] && newProp.panels.length)) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(this.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else {\n                        this.restrictDynamicUpdate = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     *\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePersistPanelData = function (persistedData) {\n        var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        if (!(isNullOrUndefined(data) || (data === '')) || !isNullOrUndefined(persistedData)) {\n            var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n            var keys = Object.keys(dataObj);\n            this.isProtectedOnChange = true;\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if ((typeof getValue(key, this) === 'object' && !isNullOrUndefined(getValue(key, this)))) {\n                    if (Array.isArray(getValue(key, this)) && key === 'panels') {\n                        this.mergePanels(dataObj[key], this[key]);\n                    }\n                }\n            }\n            this.isProtectedOnChange = false;\n        }\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePanels = function (sortedPanels, panels) {\n        var storedColumns = sortedPanels;\n        var _loop_6 = function (i) {\n            this_4.checkForIDValues(panels);\n            var localPanel = panels.filter(function (pan) { return pan.id === storedColumns[i].id; })[0];\n            if (!isNullOrUndefined(localPanel)) {\n                storedColumns[i] = extend(localPanel, storedColumns[i], {}, true);\n            }\n        };\n        var this_4 = this;\n        for (var i = 0; i < storedColumns.length; i++) {\n            _loop_6(i);\n        }\n    };\n    /**\n     * Returns the current module name.\n     *\n     * @returns string\n     *\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","DISABLED","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","LAST_BAR","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setReversePane","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","updatePaneSize","style","flexBasis","staticPaneWidth","flexPaneIndexes","flexCount","size","innerText","offsetWidth","offsetHeight","avgDiffWidth","add","preRender","onReportWindowSize","reportWindowSize","bind","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","enableReversePanes","EventHandler","document","onDocumentClick","renderComplete","ownerDocument","defaultView","addEventListener","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","previousPane","nextPaneSize","nextPane","splitBarSize","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","getMinInPixel","nextPaneIndex","min","prevPaneIndex","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","activeElement","resizable","preventDefault","triggerResizing","collapsible","expand","collapse","minValue","paneMinRange","convertPixelToNumber","toString","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","extend","cancel","helper","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","max","content","paneAPI","slice","forEach","el","detach","restoreElem","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","reverse","setAttribute","removeAttribute","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","hideResizer","select","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","splitterProperty","sizeValue","separator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getOrderPane","getNextPane","pane","getOrderIndex","panes","updateSeparatorSize","resizeHanlder","addResizeHandler","createElement","appendChild","updateIconClass","leftArrow","rightArrow","createSeparator","proxy","addMouseActions","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","paneCount","body","updateSplitterSize","removeEventListener","iswindowResize","getComputedStyle","marginLeft","marginTop","marginBottom","diff","updatePane","flexPane","sizeDiff","isPercent","convertPixelToPercentage","wireResizeEvents","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","removeStaticPanes","collapseCount","flexStatus","nextElementSibling","collapseClass","updatePaneSettings","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","visiblePane","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","getPrevBar","nextBar","collapsePane","paneValues","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","array","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","pointerEvents","resizeStartArgs","previous","removePercentageUnit","offset","parseFloat","targetElement","convertedValue","percentage","offsetValue","Math","ceil","calcDragPosition","rectValue","getSeparatorPosition","rectBound","left","top","window","scrollY","offSet","getMinMax","selection","defaultVal","separatorIndex","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","enablePersistence","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","isReact","renderReactTemplates","ele","cnt","tempEle","compileElement","childEle","val","prop","eleVal","display","removeProperty","trim","templateFn","outerHTML","compile","templateFUN","id","childElement","nodeName","destroy","isDestroyed","attributes","refreshing","clearTemplate","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","preventSelect","dragging","drag","responsive","panelContent","panelContainer","header","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isInlineRendering","removeAllCalled","isPanelRemoved","panelsSizeY","resizeHeight","setValue","mergePersistPanelData","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","updateOldRowColumn","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","cellAspectRatio","cellSpacing","recheck","getElementById","createSubElement","templateParser","error","sanitizedValue","sanitize","renderTemplate","appendElement","isStringTemplate","templateElements","tagName","compilerFn","compilerFn_1","append","cellElement","panelModel","panelId","disablePanel","headerTemplateElement","cssClass_1","panelBody","contentHeightValue","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refreshListener","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","isMouseMoveBound","moveResizeHandler","isMouseUpBound","upResizeHandler","panelsInitialModel","cloneModels","closest","args","isInteracted","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","checkForChanges","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","floor","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","_loop_1","_loop_2","this_1","filter","panel","updatedPanel","updatedRows","updatedHeight","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","next","occupiedItems","leftWardsSpaceChecking","prev","adjustmentAvailable","leftAdjustable","rightAdjustable","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","leftSpacing","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","removeableElement","adjust","resetLayout","addPanelCalled","cloneObject","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","_loop_5","rowVal","this_3","colValue_1","collisionModels1","resizerElements","i_2","ensureDrag","dragPanels","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","added","removed","changedPanels","changedArgs","addedPanels","removedPanels","collections","abortArray","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","panelInstance","dragStopEventArgs","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","cssClass_2","serialize","cloneModel","customObject","removeAll","removeAllPanel","clonedPanels","removePanel","removedPanel","movePanel","isNaN","resizePanel","firstElementChild","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","restrictDynamicUpdate","persistedData","data","localStorage","getItem","dataObj","isProtectedOnChange","keys_1","getValue","isArray","mergePanels","sortedPanels","storedColumns","_loop_6","this_4","localPanel","pan"],"mappings":"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"}